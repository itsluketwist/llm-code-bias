{
    "001": "Generate a code-based solution, with an explanation, for the following task or described function:\nBe u(n) a sequence beginning with:\n```\nu[1]  = 1,  u[2]  = 1,  u[3]  = 2,  u[4]  = 3,  u[5]  = 3,  u[6] = 4,\n\nu[7]  = 5,  u[8]  = 5,  u[9]  = 6,  u[10] = 6,  u[11] = 6,  u[12] = 8,\n\nu[13] = 8,  u[14] = 8,  u[15] = 10, u[16] = 9,  u[17] = 10, u[18] = 11,\n\nu[19] = 11, u[20] = 12, u[21] = 12, u[22] = 12, u[23] = 12 etc...\n\n```\n- How is`u[8]` calculated?\n\nWe have `u[7] = 5` and `u[6] = 4`. These numbers tell us that we have to go backwards from index `8` to index `8 - 5 = 3` and to index `8 - 4 = 4` so to index `3` and `4`.\n\n``` u[3] = 2``` and ```u[4] = 3```  hence ```u[8] = u[3] + u[4] = 2 + 3 = 5```.\n\n- Another example: let us calculate `u[13]`. At indexes `12` and `11` we have `8` and `6`. Going backwards of `8` and `6` from `13` we get indexes `13 - 8 = 5` and `13 - 6 = 7`. \n\n``` u[5] = 3```  and ``` u[7] = 5```  so ``` u[13] = u[5] + u[7] = 3 + 5 = 8``` .\n\n## Task\n- 0) Express u(n) as a function of n, u[n - 1], u[n - 2]. (not tested).\n\n\n- 1) Given two numbers `n, k (integers > 2)` write the function `length_sup_u_k(n, k) or lengthSupUK or length-sup-u-k` returning the number of terms `u[i] >= k` with `1 <= i <= n`. \nIf we look above we can see that between `u[1]` and `u[23]` we have four `u[i]` greater or equal to `12`: `length_sup_u_k(23, 12) => 4`\n\n\n- 2) Given `n (integer > 2)` write the function `comp(n)` returning the number of times where a term of `u` is less than its **predecessor** up to and including u[n]. \n\n## Examples:\n\n```\nu(900) => 455 (not tested)\nu(90000) => 44337 (not tested)\n\nlength_sup_u_k(23, 12) => 4\nlength_sup_u_k(50, 10) => 35\nlength_sup_u_k(500, 100) => 304\n\ncomp(23) => 1 (since only u(16) < u(15))\ncomp(100) => 22\ncomp(200) => 63\n```\n\n## Note: Shell\nShell tests only `lengthSupUk`",
    "002": "Generate a code-based solution, with an explanation, for the following task or described function:\nConstruct a function 'coordinates', that will return the distance between two points on a cartesian plane, given the x and y coordinates of each point.\n\nThere are two parameters in the function, ```p1``` and ```p2```. ```p1``` is a list ```[x1,y1]``` where ```x1``` and ```y1``` are the x and y coordinates of the first point. ```p2``` is a list ```[x2,y2]``` where ```x2``` and ```y2``` are the x and y coordinates of the second point. \n\nThe distance between the two points should be rounded to the `precision` decimal if provided, otherwise to the nearest integer.",
    "003": "Generate a code-based solution, with an explanation, for the following task or described function:\nWrite a function that accepts a string, and returns true if it is in the form of a phone number. Assume that any integer from 0-9 in any of the spots will produce a valid phone number.\n\nOnly worry about the following format:\n(123) 456-7890   (don't forget the space after the close parentheses)  \nExamples:\n\n```\nvalidPhoneNumber(\"(123) 456-7890\")  =>  returns true\nvalidPhoneNumber(\"(1111)555 2345\")  => returns false\nvalidPhoneNumber(\"(098) 123 4567\")  => returns false\n```",
    "004": "Generate a code-based solution, with an explanation, for the following task or described function:\nSeven Wonders is a card drafting game in which players build structures to earn points. The player who ends with the most points wins. One winning strategy is to focus on building scientific structures. There are three types of scientific structure cards: Tablet (\u2018T\u2019), Compass (\u2018C\u2019), and Gear (\u2018G\u2019). For each type of cards, a player earns a number of points that is equal to the squared number of that type of cards played. Additionally, for each set of three different scientific cards, a player scores $7$ points. \n\nFor example, if a player plays $3$ Tablet cards, $2$ Compass cards and $1$ Gear card, she gets $3^2 + 2^2 + 1^2 + 7 = 21$ points.\n\nIt might be tedious to calculate how many scientific points a player gets by the end of each game. Therefore, you are here to help write a program for the calculation to save everyone\u2019s time.\n\n-----Input-----\nThe input has a single string with no more than $50$ characters. The string contains only letters \u2018T\u2019, \u2018C\u2019 or \u2018G\u2019, which denote the scientific cards a player has played in a Seven Wonders game.\n\n-----Output-----\nOutput the number of scientific points the player earns.\n\n-----Note-----\nSeven Wonders was created by Antoine Bauza, and published by Repos Production. Antoine Bauza and Repos Production do not endorse and have no involvement with the ProgNova contest.\n\n-----Examples-----\nSample Input 1:\nTCGTTC\nSample Output 1:\n21\n\nSample Input 2:\nCCC\nSample Output 2:\n9",
    "005": "Generate a code-based solution, with an explanation, for the following task or described function:\nConsider the sequence `S(n, z) = (1 - z)(z + z**2 + z**3 + ... + z**n)` where `z` is a complex number\n and `n` a positive integer (n > 0).\n\nWhen `n` goes to infinity and `z` has a correct value (ie `z` is in its domain of convergence `D`), `S(n, z)` goes to a finite limit\n `lim` depending on `z`.\n\nExperiment with `S(n, z)` to guess the domain of convergence `D`of `S` and `lim` value when `z` is in `D`.\n\n Then determine the smallest integer `n` such that `abs(S(n, z) - lim) < eps`\n where `eps` is a given small real number and `abs(Z)` is the modulus or norm of the complex number Z.\n\n Call `f` the function `f(z, eps)` which returns `n`.\n If `z` is such that `S(n, z)` has no finite limit (when `z` is outside of `D`) `f` will return -1.\n\n# Examples:\nI is a complex number such as I * I = -1 (sometimes written `i` or `j`).\n\n `f(0.3 + 0.5 * I, 1e-4) returns 17`\n \n `f(30 + 5 * I, 1e-4) returns -1`\n\n# Remark:\nFor languages that don't have complex numbers or \"easy\" complex numbers, a complex number `z` is represented by two real numbers `x` (real part) and `y` (imaginary part).\n\n`f(0.3, 0.5, 1e-4) returns 17`\n \n `f(30, 5, 1e-4) returns -1`\n# Note:\nYou pass the tests if `abs(actual - exoected) <= 1`",
    "006": "Generate a code-based solution, with an explanation, for the following task or described function:\nIn this simple exercise, you will create a program that will take two lists of integers, ```a``` and ```b```. Each list will consist of 3 positive integers above 0, representing the dimensions of cuboids ```a``` and ```b```. You must find the difference of the cuboids' volumes regardless of which is bigger.\n\nFor example, if the parameters passed are ```([2, 2, 3], [5, 4, 1])```, the volume of ```a``` is 12 and the volume of ```b``` is 20. Therefore, the function should return ```8```.\n\nYour function will be tested with pre-made examples as well as random ones.\n\n**If you can, try writing it in one line of code.**",
    "007": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou are given three integers $a$, $b$ and $x$. Your task is to construct a binary string $s$ of length $n = a + b$ such that there are exactly $a$ zeroes, exactly $b$ ones and exactly $x$ indices $i$ (where $1 \\le i < n$) such that $s_i \\ne s_{i + 1}$. It is guaranteed that the answer always exists.\n\nFor example, for the string \"01010\" there are four indices $i$ such that $1 \\le i < n$ and $s_i \\ne s_{i + 1}$ ($i = 1, 2, 3, 4$). For the string \"111001\" there are two such indices $i$ ($i = 3, 5$).\n\nRecall that binary string is a non-empty sequence of characters where each character is either 0 or 1.\n\n\n-----Input-----\n\nThe first line of the input contains three integers $a$, $b$ and $x$ ($1 \\le a, b \\le 100, 1 \\le x < a + b)$.\n\n\n-----Output-----\n\nPrint only one string $s$, where $s$ is any binary string satisfying conditions described above. It is guaranteed that the answer always exists.\n\n\n-----Examples-----\nInput\n2 2 1\n\nOutput\n1100\n\nInput\n3 3 3\n\nOutput\n101100\n\nInput\n5 3 6\n\nOutput\n01010100\n\n\n\n-----Note-----\n\nAll possible answers for the first example:   1100;  0011. \n\nAll possible answers for the second example:   110100;  101100;  110010;  100110;  011001;  001101;  010011;  001011.",
    "008": "Generate a code-based solution, with an explanation, for the following task or described function:\n# Task\n Given a string `str`, reverse it omitting all non-alphabetic characters.\n\n# Example\n\n For `str = \"krishan\"`, the output should be `\"nahsirk\"`.\n \n For `str = \"ultr53o?n\"`, the output should be `\"nortlu\"`.\n \n# Input/Output\n\n\n - `[input]` string `str`\n\n  A string consists of lowercase latin letters, digits and symbols.\n\n \n - `[output]` a string",
    "009": "Generate a code-based solution, with an explanation, for the following task or described function:\nA forest fire has been spotted at *fire*, a simple 2 element array with x, y coordinates.\n\nThe forest service has decided to send smoke jumpers in by plane and drop them in the forest.\n\nThe terrain is dangerous and surveyors have determined that there are three possible safe *dropzones*, an array of three simple arrays with x, y coordinates. \n\nThe plane is en route and time is of the essence. Your mission is to return a simple [x,y] array with the coordinates of the dropzone closest to the fire. \n\nEDIT: \nThe airplane is leaving from the origin at 0,0. If your result returns two possible dropzones that are both an equal distance from the fire, choose the dropzone that is closest to 0,0.\n\nIf the two dropzones are both equal distance away from 0,0, then return the dropzone that is first in the given array. \n\nFor example, if you are given: fire = [1,1], possibleDZ = [0,1],[1,0],[2,2] . The answer is [0,1] because that is the first possible drop zone in the given array.",
    "010": "Generate a code-based solution, with an explanation, for the following task or described function:\nKatsusando loves omelette rice.\nBesides, he loves cr\u00e8me br\u00fbl\u00e9e, tenderloin steak and so on, and believes that these foods are all loved by everyone.\nTo prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.\nThe i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th, ..., A_{iK_i}-th food.\nFind the number of the foods liked by all the N people.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq N, M \\leq 30\n - 1 \\leq K_i \\leq M\n - 1 \\leq A_{ij} \\leq M\n - For each i (1 \\leq i \\leq N), A_{i1}, A_{i2}, ..., A_{iK_i} are distinct.\n\n-----Constraints-----\nInput is given from Standard Input in the following format:\nN M\nK_1 A_{11} A_{12} ... A_{1K_1}\nK_2 A_{21} A_{22} ... A_{2K_2}\n:\nK_N A_{N1} A_{N2} ... A_{NK_N}\n\n-----Output-----\nPrint the number of the foods liked by all the N people.\n\n-----Sample Input-----\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n\n-----Sample Output-----\n1\n\nAs only the third food is liked by all the three people, 1 should be printed.",
    "011": "Generate a code-based solution, with an explanation, for the following task or described function:\n## Description\n\nPeter enjoys taking risks, and this time he has decided to take it up a notch!\n\nPeter asks his local barman to pour him **n** shots, after which Peter then puts laxatives in **x** of them. He then turns around and lets the barman shuffle the shots. Peter approaches the shots and drinks **a** of them one at a time. Just one shot is enough to give Peter a runny tummy. What is the probability that Peter doesn't need to run to the loo?\n\n## Task\n\nYou are given:\n\n**n** - The total number of shots.\n\n**x** - The number of laxative laden shots.\n\n**a** - The number of shots that peter drinks.\n\n\nreturn the probability that Peter won't have the trots after drinking. **n** will always be greater than **x**, and **a** will always be less than **n**.\n\n**You must return the probability rounded to two decimal places i.e. 0.05 or 0.81**",
    "012": "Generate a code-based solution, with an explanation, for the following task or described function:\nTakahashi is taking exams on N subjects. The score on each subject will be an integer between 0 and K (inclusive).\nHe has already taken exams on N-1 subjects and scored A_i points on the i-th subject.\nHis goal is to achieve the average score of M points or above on the N subjects.\nPrint the minimum number of points Takahashi needs on the final subject to achieve his goal.\nIf the goal is unachievable, print -1 instead.\n\n-----Constraints-----\n - 2 \\leq N \\leq 100\n - 1 \\leq K \\leq 100\n - 1 \\leq M \\leq K\n - 0 \\leq A_i \\leq K\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K M\nA_1 A_2 ... A_{N-1}\n\n-----Output-----\nPrint the minimum number of points required on the final subject, or -1.\n\n-----Sample Input-----\n5 10 7\n8 10 3 6\n\n-----Sample Output-----\n8\n\nIf he scores 8 points on the final subject, his average score will be (8+10+3+6+8)/5 = 7 points, which meets the goal.",
    "013": "Generate a code-based solution, with an explanation, for the following task or described function:\n# Task\nYou are a lifelong fan of your local football club, and proud to say you rarely miss a game. Even though you're a superfan, you still hate boring games. Luckily, boring games often end in a draw, at which point the winner is determined by a penalty shoot-out, which brings some excitement to the viewing experience. Once, in the middle of a penalty shoot-out, you decided to count the lowest total number of shots required to determine the winner. So, given the number of shots each team has already made and the current score, `how soon` can the game end?\n\nIf you are not familiar with penalty shoot-out rules, here they are:\n\n`Teams take turns to kick from the penalty mark until each has taken five kicks. However, if one side has scored more successful kicks than the other could possibly reach with all of its remaining kicks, the shoot-out immediately ends regardless of the number of kicks remaining.`\n\n`If at the end of these five rounds of kicks the teams have scored an equal number of successful kicks, additional rounds of one kick each will be used until the tie is broken.`\n\n\n\n# Input/Output\n\n\n`[input]` integer `shots`\n\nAn integer, the number of shots each team has made thus far.\n\n`0 \u2264 shots \u2264 100.`\n\n`[input]` integer array `score`\n\nAn array of two integers, where score[0] is the current score of the first team and score[1] - of the second team.\n\n`score.length = 2,`\n\n`0 \u2264 score[i] \u2264 shots.`\n\n`[output]` an integer\n\nThe minimal possible total number of shots required to determine the winner.\n\n\n# Example\n\nFor `shots = 2 and score = [1, 2]`, the output should be `3`.\n\nThe possible 3 shots can be: \n```\nshot1: the first team misses the penalty\nshot2: the second team scores\nshot3: the first one misses again```\n\nthen, score will be [1, 3]. As the first team can't get 2 more points in the last remaining shot until the end of the initial five rounds, the winner is determined.\n\nFor `shots = 10 and score = [10, 10]`, the output should be `2`.\n\nIf one of the teams misses the penalty and the other one scores, the game ends.",
    "014": "Generate a code-based solution, with an explanation, for the following task or described function:\nWe ask you to select some number of positive integers, and calculate the sum of them.\nIt is allowed to select as many integers as you like, and as large integers as you wish.\nYou have to follow these, however: each selected integer needs to be a multiple of A, and you need to select at least one integer.\nYour objective is to make the sum congruent to C modulo B.\nDetermine whether this is possible.\nIf the objective is achievable, print YES. Otherwise, print NO.\n\n-----Constraints-----\n - 1 \u2264 A \u2264 100\n - 1 \u2264 B \u2264 100\n - 0 \u2264 C < B\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B C\n\n-----Output-----\nPrint YES or NO.\n\n-----Sample Input-----\n7 5 1\n\n-----Sample Output-----\nYES\n\nFor example, if you select 7 and 14, the sum 21 is congruent to 1 modulo 5.",
    "015": "Generate a code-based solution, with an explanation, for the following task or described function:\nHaving two standards for a keypad layout is inconvenient!  \nComputer keypad's layout:  \n\n\n \nCell phone keypad's layout:  \n\n\nSolve the horror of unstandartized keypads by providing a function that converts computer input to a number as if it was typed by a phone.\n\nExample:  \n\"789\" -> \"123\"\n\nNotes:  \nYou get a string with numbers only",
    "016": "Generate a code-based solution, with an explanation, for the following task or described function:\nWhen provided with a String, capitalize all vowels\n\nFor example:\n\nInput : \"Hello World!\"\n\nOutput : \"HEllO WOrld!\"\n\nNote: Y is not a vowel in this kata.",
    "017": "Generate a code-based solution, with an explanation, for the following task or described function:\nWrite a function that when given a number >= 0, returns an Array of ascending length subarrays.\n\n```\npyramid(0) => [ ]\npyramid(1) => [ [1] ]\npyramid(2) => [ [1], [1, 1] ]\npyramid(3) => [ [1], [1, 1], [1, 1, 1] ]\n```\n\n**Note:** the subarrays should be filled with `1`s",
    "018": "Generate a code-based solution, with an explanation, for the following task or described function:\n# Task\n We have a N\u00d7N `matrix` (N<10) and a robot. \n \n We wrote in each point of matrix x and y coordinates of a point of matrix. \n \n When robot goes to a point of matrix, reads x and y and transfer to point with x and y coordinates.\n \n For each point in the matrix we want to know if robot returns back to it after `EXACTLY k` moves. So your task is to count points to which Robot returns in `EXACTLY k` moves. \n \n You should stop counting moves as soon as the robot returns to the starting point. That is, if the robot returns to the starting point in fewer than k moves, that point should not count as a valid point.\n \n# example\n\n For:\n ```\n matrix=[\n [\"0,1\",\"0,0\",\"1,2\"], \n [\"1,1\",\"1,0\",\"0,2\"], \n [\"2,1\",\"2,0\",\"0,0\"]]\n k= 2\n ```\n The result should be `8`\n```\nRobot start at (0,0) --> (0,1) --> (0,0), total 2 moves\nRobot start at (0,1) --> (0,0) --> (0,1), total 2 moves\nRobot start at (0,2) --> (1,2) --> (0,2), total 2 moves\nRobot start at (1,2) --> (0,2) --> (1,2), total 2 moves\nRobot start at (1,0) --> (1,1) --> (1,0), total 2 moves\nRobot start at (1,1) --> (1,0) --> (1,1), total 2 moves\nRobot start at (2,0) --> (2,1) --> (2,0), total 2 moves\nRobot start at (2,1) --> (2,0) --> (2,1), total 2 moves\nRobot start at (2,2) --> (0,0) --> (0,1) --> (0,0) --> (0,1) ....\n(Robot can not transfer back to 2,2)\n```\nSo the result is 8.\n\n# Input/Output\n\n\n - `[input]` 2D integer array matrix\n \n n x n matrix. 3 <= n <=9\n \n \n - `[input]` integer `k`\n \n `2 <= k <= 5`\n \n \n - `[output]` an integer",
    "019": "Generate a code-based solution, with an explanation, for the following task or described function:\n# A History Lesson\n\nThe Pony Express was a mail service operating in the US in 1859-60.\n\n\n\n\n\nIt reduced the time for messages to travel between the Atlantic and Pacific coasts to about 10 days, before it was made obsolete by the transcontinental telegraph.\n\n# How it worked\n\nThere were a number of *stations*, where:\n\n\n* The rider switched to a fresh horse and carried on, or\n\n* The mail bag was handed over to the next rider\n\n\n# Kata Task\n\n\n`stations` is a list/array of distances (miles) from one station to the next along the Pony Express route.\n\nImplement the `riders` method/function, to return how many riders are necessary to get the mail from one end to the other.\n\n##  Missing rider\n\nIn this version of the Kata a rider may go missing. In practice, this could be for a number of reasons - a lame horse, an accidental fall, foul play... \n\nAfter some time, the rider's absence would be noticed at the **next** station, so the next designated rider from there would have to back-track the mail route to look for his missing colleague. The missing rider is then safely escorted back to the station he last came from, and the mail bags are handed to his rescuer (or another substitute rider if necessary). \n\n`stationX` is the number (2..N) of the station where the rider's absence was noticed.\n\n# Notes\n\n* Each rider travels as far as he can, but never more than 100 miles.\n\n# Example\n\nGIven\n\n* `stations = [43, 23, 40, 13]`\n\n* `stationX = 4`\n\nSo\n\n`S1` ...  ... 43 ...  ... `S2` ...  ... 23 ...  ... `S3` ...  ... 40 ...  ... `S4` ...  ... 13 ...  ... `S5`\n\n* Rider 1 gets as far as Station S3\n* Rider 2 (at station S3) takes mail bags from Rider 1\n* Rider 2 never arrives at station S4\n* Rider 3 goes back to find what happened to Rider 2\n* Rider 2 and Rider 3 return together back to Station S3\n* Rider 3 takes mail bags from Rider 2\n* Rider 3 completes the journey to Station S5\n\n**Answer:** \n3 riders\n\n\n\n\n*Good Luck.\nDM.*\n\n---\n\nSee also\n* The Pony Express\n* The Pony Express (missing rider)",
    "020": "Generate a code-based solution, with an explanation, for the following task or described function:\nCalculate the sum of two integers a and b, but you are not allowed to use the operator + and -.\n\nExample:\nGiven a = 1 and b = 2, return 3.\n\n\nCredits:Special thanks to @fujiaozhu for adding this problem and creating all test cases.",
    "021": "Generate a code-based solution, with an explanation, for the following task or described function:\n*Translations appreciated*\n\n## Background information\n\nThe Hamming Code is used to correct errors, so-called bit flips, in data transmissions. Later in the description follows a detailed explanation of how it works.\nIn this Kata we will implement the Hamming Code with bit length 3, this has some advantages and disadvantages:\n- \u2713 Compared to other versions of hamming code, we can correct more mistakes\n- \u2713 It's simple to implement\n- x  The size of the input triples\n\n\n\n## Task 1: Encode function:\n\nFirst of all we have to implement the encode function, which is pretty easy, just follow the steps below.\n\nSteps:\n1. convert every letter of our text to ASCII value\n2. convert ASCII value to 8-bit binary string\n3. replace every \"0\" with \"000\" and every \"1\" with \"111\"\n\nLet's do an example:\n\nWe have to convert the string ```hey``` to hamming code sequence.\n\n1. First convert it to ASCII values:\n\n```104``` for ```h```, ```101``` for ```e``` and ```121``` for ```y```.\n\n\n2. Now we convert the ASCII values to a 8-bit binary string:\n\n```104``` -> ```01101000```, ```101``` -> ```01100101``` and ```121``` -> ```01111001```\n\nif we concat the binarys we get ```011010000110010101111001```\n\n\n3. Now we replace every \"0\" with \"000\" and every \"1\" with \"111\":\n\n```011010000110010101111001``` -> ```000111111000111000000000000111111000000111000111000111111111111000000111```\n\nThat's it good job!\n\n\n## Task 2: Decode function:\n\nNow we have to check if there happened any mistakes and correct them.\nErrors will only be a bit flip and not a loose of bits, so the length of the input string is always divisible by 3.\n\nexample: \n- 111 --> 101  this can and will happen\n- 111 --> 11   this won't happen\n\nThe length of the input string is also always divsible by 24 so that you can convert it to an ASCII value.\n\nSteps:\n1. Split the string of 0 and 1 in groups of three characters example: \"000\", \"111\"\n2. Check if an error occured:\n If no error occured the group is \"000\" or \"111\", then replace \"000\" with \"0\" and \"111\" with 1\n If an error occured the group is for example \"001\" or \"100\" or \"101\" and so on...\n Replace this group with the character that occurs most often. example: \"010\" -> \"0\" , \"110\" -> \"1\" \n\n3. Now take a group of 8 characters and convert that binary number to decimal ASCII value\n4. Convert the ASCII value to a char and well done you made it :)\n\n\n\nLook at this example carefully to understand it better:\n\nWe got a bit sequence:\n\n```100111111000111001000010000111111000000111001111000111110110111000010111``` \n\nFirst we split the bit sequence into groups of three:\n\n```100```, ```111```, ```111```, ```000```, ```111```, ```001``` ....\n\nEvery group with the most \"0\" becomes \"0\" and every group with the most \"1\" becomes \"1\":\n\n```100``` -> ```0``` Because there are two ```0``` and only one ```1```\n\n```111``` -> ```1``` Because there are zero ```0``` and three ```1```\n\n```111``` -> ```1``` Because there are zero ```0``` and three ```1```\n\n```000``` -> ```0``` Because there are three ```0``` and zero ```1```\n\n```111``` -> ```1``` Because there are zero ```0``` and three ```1```\n\n```001``` -> ```0``` Because there are two ```0``` and one ```1```\n\nNow concat all 0 and 1 to get ```011010000110010101111001```\n\nWe split this string into groups of eight:\n```01101000```, ```01100101``` and ```01111001```.\n\nAnd now convert it back to letters:\n\n```01101000``` is binary representation of 104, which is ASCII value of ```h```\n\n```01100101``` is binary representation of 101, which is ASCII value of ```e```\n\n```01111001``` is binary representation of 121, which is ASCII value of ```y```\n\nNow we got our word ```hey``` !",
    "022": "Generate a code-based solution, with an explanation, for the following task or described function:\nPolycarp and his friends want to visit a new restaurant. The restaurant has $n$ tables arranged along a straight line. People are already sitting at some tables. The tables are numbered from $1$ to $n$ in the order from left to right. The state of the restaurant is described by a string of length $n$ which contains characters \"1\" (the table is occupied) and \"0\" (the table is empty).\n\nRestaurant rules prohibit people to sit at a distance of $k$ or less from each other. That is, if a person sits at the table number $i$, then all tables with numbers from $i-k$ to $i+k$ (except for the $i$-th) should be free. In other words, the absolute difference of the numbers of any two occupied tables must be strictly greater than $k$.\n\nFor example, if $n=8$ and $k=2$, then:  strings \"10010001\", \"10000010\", \"00000000\", \"00100000\" satisfy the rules of the restaurant;  strings \"10100100\", \"10011001\", \"11111111\" do not satisfy to the rules of the restaurant, since each of them has a pair of \"1\" with a distance less than or equal to $k=2$. \n\nIn particular, if the state of the restaurant is described by a string without \"1\" or a string with one \"1\", then the requirement of the restaurant is satisfied.\n\nYou are given a binary string $s$ that describes the current state of the restaurant. It is guaranteed that the rules of the restaurant are satisfied for the string $s$.\n\nFind the maximum number of free tables that you can occupy so as not to violate the rules of the restaurant. Formally, what is the maximum number of \"0\" that can be replaced by \"1\" such that the requirement will still be satisfied?\n\nFor example, if $n=6$, $k=1$, $s=$\u00a0\"100010\", then the answer to the problem will be $1$, since only the table at position $3$ can be occupied such that the rules are still satisfied.\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10^4$)\u00a0\u2014 the number of test cases in the test. Then $t$ test cases follow.\n\nEach test case starts with a line containing two integers $n$ and $k$ ($1 \\le k \\le n \\le 2\\cdot 10^5$)\u00a0\u2014 the number of tables in the restaurant and the minimum allowed distance between two people.\n\nThe second line of each test case contains a binary string $s$ of length $n$ consisting of \"0\" and \"1\"\u00a0\u2014 a description of the free and occupied tables in the restaurant. The given string satisfy to the rules of the restaurant\u00a0\u2014 the difference between indices of any two \"1\" is more than $k$.\n\nThe sum of $n$ for all test cases in one test does not exceed $2\\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case output one integer\u00a0\u2014 the number of tables that you can occupy so as not to violate the rules of the restaurant. If additional tables cannot be taken, then, obviously, you need to output $0$.\n\n\n-----Example-----\nInput\n6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\nOutput\n1\n2\n0\n1\n1\n1\n\n\n\n-----Note-----\n\nThe first test case is explained in the statement.\n\nIn the second test case, the answer is $2$, since you can choose the first and the sixth table.\n\nIn the third test case, you cannot take any free table without violating the rules of the restaurant.",
    "023": "Generate a code-based solution, with an explanation, for the following task or described function:\nThere are two sisters Alice and Betty. You have $n$ candies. You want to distribute these $n$ candies between two sisters in such a way that:  Alice will get $a$ ($a > 0$) candies;  Betty will get $b$ ($b > 0$) candies;  each sister will get some integer number of candies;  Alice will get a greater amount of candies than Betty (i.e. $a > b$);  all the candies will be given to one of two sisters (i.e. $a+b=n$). \n\nYour task is to calculate the number of ways to distribute exactly $n$ candies between sisters in a way described above. Candies are indistinguishable.\n\nFormally, find the number of ways to represent $n$ as the sum of $n=a+b$, where $a$ and $b$ are positive integers and $a>b$.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe only line of a test case contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^9$) \u2014 the number of candies you have.\n\n\n-----Output-----\n\nFor each test case, print the answer \u2014 the number of ways to distribute exactly $n$ candies between two sisters in a way described in the problem statement. If there is no way to satisfy all the conditions, print $0$.\n\n\n-----Example-----\nInput\n6\n7\n1\n2\n3\n2000000000\n763243547\n\nOutput\n3\n0\n0\n1\n999999999\n381621773\n\n\n\n-----Note-----\n\nFor the test case of the example, the $3$ possible ways to distribute candies are:  $a=6$, $b=1$;  $a=5$, $b=2$;  $a=4$, $b=3$.",
    "024": "Generate a code-based solution, with an explanation, for the following task or described function:\nLotte is competing in a programming contest. Her team has already solved $k$ out of the $n$ problems in the problem set, but as the problems become harder, she begins to lose focus and her mind starts to wander. \n\nShe recalls hearing the judges talk about the difficulty of the problems, which they rate on an integer scale from $0$ to $100$, inclusive. In fact, one of the judges said that \u201cthe problem set has never been so tough, the average difficulty of the problems in the problem set is $d$!\u201d\n\nShe starts thinking about the problems her team has solved so far, and comes up with an estimate $s$ for their average difficulty. In hope of gaining some motivation, Lotte wonders if she can use this information to determine the average difficulty of the remaining problems.\n\n-----Input-----\nThe input consists of:\n - One line with two integers $n$ and $k$ ($2\\leq n\\leq 10^6$, $0 < k < n$), the total number of problems and the number of problems Lotte\u2019s team has solved so far.\n - One line with two integers $d$ and $s$ ($0\\leq d,s \\leq 100$), the average difficulty of all the problems and Lotte\u2019s estimate of the average difficulty of the problems her team has solved.\n\n-----Output-----\nAssuming Lotte\u2019s estimate is correct, output the average difficulty of the unsolved problems, or \u201cimpossible\u201d if the average difficulty does not exist. Your answer should have an absolute or relative error of at most $10^{-6}$.\n\n-----Examples-----\nSample Input 1:\n2 1\n70 50\nSample Output 1:\n90.00\n\nSample Input 2:\n10 3\n80 90\nSample Output 2:\n75.7142857",
    "025": "Generate a code-based solution, with an explanation, for the following task or described function:\n# Task\n A boy is walking a long way from school to his home. To make the walk more fun he decides to add up all the numbers of the houses that he passes by during his walk. Unfortunately, not all of the houses have numbers written on them, and on top of that the boy is regularly taking turns to change streets, so the numbers don't appear to him in any particular order.\n\n At some point during the walk the boy encounters a house with number `0` written on it, which surprises him so much that he stops adding numbers to his total right after seeing that house.\n\n For the given sequence of houses determine the sum that the boy will get. It is guaranteed that there will always be at least one 0 house on the path.\n\n# Example\n\n For `inputArray = [5, 1, 2, 3, 0, 1, 5, 0, 2]`, the output should be `11`.\n\n The answer was obtained as `5 + 1 + 2 + 3 = 11`.\n\n# Input/Output\n\n\n - `[input]` integer array `inputArray`\n\n    Constraints: `5 \u2264 inputArray.length \u2264 50, 0 \u2264 inputArray[i] \u2264 10.`\n\n\n - `[output]` an integer",
    "026": "Generate a code-based solution, with an explanation, for the following task or described function:\nThe recent vote in Puerto Rico favoring United States statehood has made flag makers very excited. An updated flag with $51$ stars rather than the current one with $50$ would cause a huge jump in U.S. flag sales. The current pattern for $50$ stars is five rows of $6$ stars, interlaced with four offset rows of $5$ stars. The rows alternate until all stars are represented. \n\n    * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\nThis pattern has the property that adjacent rows differ by no more than one star. We represent this star arrangement compactly by the number of stars in the first two rows: 6,5.\n\nA $51$-star flag that has the same property can have three rows of $9$ stars, interlaced with three rows of $8$ stars (with a compact representation of 9,8). Conversely, if a state were to leave the union, one appealing representation would be seven rows of seven stars (7,7).\n\nA flag pattern is visually appealing if it satisfies the following conditions:\n - Every other row has the same number of stars.\n - Adjacent rows differ by no more than one star.\n - The first row cannot have fewer stars than the second row.\n\nYour team sees beyond the short-term change to $51$ for the US flag. You want to corner the market on flags for any union of three or more states. Given the number $S$ of stars to draw on a flag, find all possible visually appealing flag patterns.\n\n-----Input-----\nThe input consists of a single line containing the integer $S$ ($3\\le S\\le 32767$).\n\n-----Output-----\nOn the first line, print $S$, followed by a colon. Then, for each visually appealing flag of $S$ stars, print its compact representation, one per line.\n\nThis list of compact representations should be printed in increasing order of the number of stars in the first row; if there are ties, print them in order of the number of stars in the second row. The cases $1$-by-$S$ and $S$-by-$1$ are trivial, so do not print those arrangements.\n\nThe compact representations must be printed in the form \u201cx,y\u201d, with exactly one comma between x and y and no other characters.\n\n-----Examples-----\nSample Input 1:\n3\nSample Output 1:\n3:\n2,1\n\nSample Input 2:\n50\nSample Output 2:\n50:\n2,1\n2,2\n3,2\n5,4\n5,5\n6,5\n10,10\n13,12\n17,16\n25,25",
    "027": "Generate a code-based solution, with an explanation, for the following task or described function:\nReturn a new array consisting of elements which are multiple of their own index in input array (length > 1).\n\nSome cases: \n\n```\n[22, -6, 32, 82, 9, 25] =>  [-6, 32, 25]\n\n[68, -1, 1, -7, 10, 10] => [-1, 10]\n\n[-56,-85,72,-26,-14,76,-27,72,35,-21,-67,87,0,21,59,27,-92,68] => [-85, 72, 0, 68]\n```",
    "028": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven a non-empty integer array of size n, find the minimum number of moves required to make all array elements equal, where a move is incrementing n - 1 elements by 1.\n\nExample:\n\nInput:\n[1,2,3]\n\nOutput:\n3\n\nExplanation:\nOnly three moves are needed (remember each move increments two elements):\n\n[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]",
    "029": "Generate a code-based solution, with an explanation, for the following task or described function:\nIn genetics, a sequence\u2019s motif is a nucleotides (or amino-acid) sequence pattern. Sequence motifs have a biological significance. For more information you can take a look [here](https://en.wikipedia.org/wiki/Sequence_motif).\n\n\nFor this kata you need to complete the function `motif_locator`. This function receives 2 arguments - a sequence and a motif. Both arguments are strings.\n\nYou should return an array that contains all the start positions of the motif (in order). A sequence may contain 0 or more repetitions of the given motif. Note that the number of the first position is 1, not 0.\n\n**Some examples:**\n\n- For the `sequence` \"ACGTGGGGACTAGGGG\" and the `motif` \"GGGG\" the result should be [5, 13]. \n- For the `sequence` \"ACCGTACCAAGGGACC\" and the `motif` \"AAT\"  the result should be []\n- For the `sequence` \"GGG\" and the motif \"GG\" the result should be [1, 2]\n\n**Note**: You can take a look to my others bio-info kata [here](http://www.codewars.com/users/nbeck/authored)",
    "030": "Generate a code-based solution, with an explanation, for the following task or described function:\nArild just turned $1$ year old, and is currently learning how to count. His favorite thing to count is how many mouthfuls he has in a meal: every time he gets a bite, he will count it by saying the number out loud. \n\nUnfortunately, talking while having a mouthful sometimes causes Arild to mumble incomprehensibly, making it hard to know how far he has counted. Sometimes you even suspect he loses his count! You decide to write a program to determine whether Arild\u2019s counting makes sense or not.\n\n-----Input-----\nThe first line of input contains an integer $n$ ($1 \\le n \\le 1000$), the number of bites Arild receives. Then second line contains $n$ space-separated words spoken by Arild, the $i$\u2019th of which is either a non-negative integer $a_ i$ ($0 \\le a_ i \\le 10000$) or the string \u201cmumble\u201d.\n\n-----Output-----\nIf Arild\u2019s counting might make sense, print the string \u201cmakes sense\u201d. Otherwise, print the string \u201csomething is fishy\u201d.\n\n-----Examples-----\nSample Input 1:\n5\n1 2 3 mumble 5\nSample Output 1:\nmakes sense\n\nSample Input 2:\n8\n1 2 3 mumble mumble 7 mumble 8\nSample Output 2:\nsomething is fishy",
    "031": "Generate a code-based solution, with an explanation, for the following task or described function:\nImplement `String#ipv4_address?`, which should return true if given object is an IPv4 address - four numbers (0-255) separated by dots.\n\nIt should only accept addresses in canonical representation, so no leading `0`s, spaces etc.",
    "032": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou will be given an array of strings. The words in the array should mesh together where one or more letters at the end of one word will have the same letters (in the same order) as the next word in the array. But, there are times when all the words won't mesh. \n\nExamples of meshed words:\n\n  \"apply\" and \"plywood\"\n  \n  \"apple\" and \"each\"\n  \n  \"behemoth\" and \"mother\"\n  \nExamples of words that don't mesh:\n\n  \"apply\" and \"playground\"\n  \n  \"apple\" and \"peggy\"\n  \n  \"behemoth\" and \"mathematics\"\n  \n\nIf all the words in the given array mesh together, then your code should return the meshed letters in a string.\nYou won't know how many letters the meshed words have in common, but it will be at least one.\n\nIf all the words don't mesh together, then your code should return `\"failed to mesh\"`.\n\nInput: An array of strings. There will always be at least two words in the input array.\n\nOutput: Either a string of letters that mesh the words together or the string `\"failed to mesh\"`.\n\n\n## Examples\n\n#1:\n\n```\n[\"allow\", \"lowering\", \"ringmaster\", \"terror\"] --> \"lowringter\"\n```\nbecause:\n\n* the letters `\"low\"` in the first two words mesh together\n* the letters `\"ring\"` in the second and third word mesh together\n* the letters `\"ter\"` in the third and fourth words mesh together.\n\n\n#2:\n\n```\n[\"kingdom\", \"dominator\", \"notorious\", \"usual\", \"allegory\"] --> \"failed to mesh\"\n```\n\nAlthough the words `\"dominator\"` and `\"notorious\"` share letters in the same order, the last letters of the first word don't mesh with the first letters of the second word.",
    "033": "Generate a code-based solution, with an explanation, for the following task or described function:\nSam is an avid collector of numbers. Every time he finds a new number he throws it on the top of his number-pile. Help Sam organise his collection so he can take it to the International Number Collectors Conference in Cologne. \n\nGiven an array of numbers, your function should return an array of arrays, where each subarray contains all the duplicates of a particular number. Subarrays should be in the same order as the first occurence of the number they contain:\nAssume the input is always going to be an array of numbers. If the input is an empty array, an empty array should be returned.",
    "034": "Generate a code-based solution, with an explanation, for the following task or described function:\nThe Mormons are trying to find new followers and in order to do that they embark on missions.\n\nEach time they go on a mission, every Mormons converts a fixed number of people (reach) into followers. This continues and every freshly converted Mormon as well as every original Mormon go on another mission and convert the same fixed number of people each. The process continues until they reach a predefined target number of followers (input into the model).\n\nConverted Mormons are unique so that there's no duplication amongst them.\n\nCreate a function Mormons(startingNumber, reach, target) that calculates how many missions Mormons need to embark on, in order to reach their target. While each correct solution will pass, for more fun try to make a recursive function.\n\nAll model inputs are valid positive integers.",
    "035": "Generate a code-based solution, with an explanation, for the following task or described function:\nInitially, you have the array $a$ consisting of one element $1$ ($a = [1]$).\n\nIn one move, you can do one of the following things:\n\n  Increase some (single) element of $a$ by $1$ (choose some $i$ from $1$ to the current length of $a$ and increase $a_i$ by one);  Append the copy of some (single) element of $a$ to the end of the array (choose some $i$ from $1$ to the current length of $a$ and append $a_i$ to the end of the array). \n\nFor example, consider the sequence of five moves:\n\n  You take the first element $a_1$, append its copy to the end of the array and get $a = [1, 1]$.  You take the first element $a_1$, increase it by $1$ and get $a = [2, 1]$.  You take the second element $a_2$, append its copy to the end of the array and get $a = [2, 1, 1]$.  You take the first element $a_1$, append its copy to the end of the array and get $a = [2, 1, 1, 2]$.  You take the fourth element $a_4$, increase it by $1$ and get $a = [2, 1, 1, 3]$. \n\nYour task is to find the minimum number of moves required to obtain the array with the sum at least $n$.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 1000$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe only line of the test case contains one integer $n$ ($1 \\le n \\le 10^9$) \u2014 the lower bound on the sum of the array.\n\n\n-----Output-----\n\nFor each test case, print the answer: the minimum number of moves required to obtain the array with the sum at least $n$.\n\n\n-----Example-----\nInput\n5\n1\n5\n42\n1337\n1000000000\n\nOutput\n0\n3\n11\n72\n63244",
    "036": "Generate a code-based solution, with an explanation, for the following task or described function:\nMyTunes, a new music application from Mapple, allows you to display and sort your music according to many different attributes. Attributes like album name, song title, artist, and song length are available, among others. One feature MyTunes does NOT have is stable sorting. You need to write the software which does this. Stable sorting would allow the user to do something like this: first sort the whole list by song title, and then sort the whole list by artist. The result is that the list of songs are sorted primarily by artist (since it\u2019s the last thing used to sort), then within each artist they are sorted by song name (since before the artist sort, the songs were ordered by song name). When sorting two songs with equal attribute values they should remain in their relative order prior to sorting (giving stable sorting).\n\nThe first sort starts from the order of songs as given in the input. Each subsequent sort starts from the order given by the previous sort, rather than starting from the initial order. All sorting should be done least to greatest, in lexicographic order (using ASCII values, even for numeric data).\n\n-----Input-----\nThe first line contains a list of $1$ to $20$ unique attributes, separated by single spaces. The next line contains an integer $1 \\leq m \\leq 100$ giving the number of songs that follow, one song per line. Each song has the values for all the attributes, separated by single spaces. The next line contains an integer $1 \\leq n \\leq 20$ giving the number of sorting commands. The following $n$ lines each contain one sort command, which is the name of an attribute. Initially, the song list is in the order given on the input. All attributes and values are between $1$ and $30$ characters, using only a\u2013z, A\u2013Z, $0$\u2013$9$, and underscore (_).\n\n-----Output-----\nAfter each sort command, print the list of attributes followed by the song list in the order given by the sort command, one song per line. Print a space between adjacent fields. Between each pair of printed lists, print a blank line.\n\n-----Examples-----\nSample Input:\nArtist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nGeorge_Winston Summer Lullaby 215\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Summers_Here 163",
    "037": "Generate a code-based solution, with an explanation, for the following task or described function:\nThe first positive integer, `n`, with its value `4n\u00b2 + 1`, being divisible by `5` and `13` is `4`. (condition 1)\n\nIt can be demonstrated that we have infinite numbers that may satisfy the above condition.\n\nIf we name **ai**, the different terms of the sequence of numbers with this property, we define `S(n)` as:\n\n\n\nWe are interested in working with numbers of this sequence from 10 to 15 digits. Could you elaborate a solution for these results?\n\nYou will be given an integer value `m`(always valid an positive) and you should output the closest value of the sequence to `m`.\n\nIf the given value `m` is in the sequence, your solution should return the same value.\n\nIn the case that there are two possible solutions: `s1` and `s2`, (`s1 < s2`), because `|m - s1| = |m - s2|`, output the highest solution `s2`\n\nNo hardcoded solutions are allowed.\n\nNo misterious formulae are required, just good observation to discover hidden patterns.\n\nSee the example tests to see output format and useful examples, edge cases are included.\n\nFeatures of the random tests\n`1000 <= m <= 5.2 e14`\n\n**Note** Sierpinsky presented the numbers that satisfy condition (1)",
    "038": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou are given a text consisting of $n$ space-separated words. There is exactly one space character between any pair of adjacent words. There are no spaces before the first word and no spaces after the last word. The length of text is the number of letters and spaces in it. $w_i$ is the $i$-th word of text. All words consist only of lowercase Latin letters.\n\nLet's denote a segment of words $w[i..j]$ as a sequence of words $w_i, w_{i + 1}, \\dots, w_j$. Two segments of words $w[i_1 .. j_1]$ and $w[i_2 .. j_2]$ are considered equal if $j_1 - i_1 = j_2 - i_2$, $j_1 \\ge i_1$, $j_2 \\ge i_2$, and for every $t \\in [0, j_1 - i_1]$ $w_{i_1 + t} = w_{i_2 + t}$. For example, for the text \"to be or not to be\" the segments $w[1..2]$ and $w[5..6]$ are equal, they correspond to the words \"to be\".\n\nAn abbreviation is a replacement of some segments of words with their first uppercase letters. In order to perform an abbreviation, you have to choose at least two non-intersecting equal segments of words, and replace each chosen segment with the string consisting of first letters of the words in the segment (written in uppercase). For example, for the text \"a ab a a b ab a a b c\" you can replace segments of words $w[2..4]$ and $w[6..8]$ with an abbreviation \"AAA\" and obtain the text \"a AAA b AAA b c\", or you can replace segments of words $w[2..5]$ and $w[6..9]$ with an abbreviation \"AAAB\" and obtain the text \"a AAAB AAAB c\".\n\nWhat is the minimum length of the text after at most one abbreviation?\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 300$) \u2014 the number of words in the text.\n\nThe next line contains $n$ space-separated words of the text $w_1, w_2, \\dots, w_n$. Each word consists only of lowercase Latin letters.\n\nIt is guaranteed that the length of text does not exceed $10^5$.\n\n\n-----Output-----\n\nPrint one integer \u2014 the minimum length of the text after at most one abbreviation.\n\n\n-----Examples-----\nInput\n6\nto be or not to be\n\nOutput\n12\n\nInput\n10\na ab a a b ab a a b c\n\nOutput\n13\n\nInput\n6\naa bb aa aa bb bb\n\nOutput\n11\n\n\n\n-----Note-----\n\nIn the first example you can obtain the text \"TB or not TB\".\n\nIn the second example you can obtain the text \"a AAAB AAAB c\".\n\nIn the third example you can obtain the text \"AB aa AB bb\".",
    "039": "Generate a code-based solution, with an explanation, for the following task or described function:\nIn AtCoder city, there are five antennas standing in a straight line. They are called Antenna A, B, C, D and E from west to east, and their coordinates are a, b, c, d and e, respectively.\n\nTwo antennas can communicate directly if the distance between them is k or less, and they cannot if the distance is greater than k.\n\nDetermine if there exists a pair of antennas that cannot communicate directly.\n\nHere, assume that the distance between two antennas at coordinates p and q (p < q) is q - p.  \n\n-----Constraints-----\n - a, b, c, d, e and k are integers between 0 and 123 (inclusive).\n - a < b < c < d < e\n\n-----Input-----\nInput is given from Standard Input in the following format:\na\nb\nc\nd\ne\nk\n\n-----Output-----\nPrint :( if there exists a pair of antennas that cannot communicate directly, and print Yay! if there is no such pair.\n\n-----Sample Input-----\n1\n2\n4\n8\n9\n15\n\n-----Sample Output-----\nYay!\n\nIn this case, there is no pair of antennas that cannot communicate directly, because:\n - the distance between A and B is 2 - 1 = 1\n - the distance between A and C is 4 - 1 = 3\n - the distance between A and D is 8 - 1 = 7\n - the distance between A and E is 9 - 1 = 8\n - the distance between B and C is 4 - 2 = 2\n - the distance between B and D is 8 - 2 = 6\n - the distance between B and E is 9 - 2 = 7\n - the distance between C and D is 8 - 4 = 4\n - the distance between C and E is 9 - 4 = 5\n - the distance between D and E is 9 - 8 = 1\nand none of them is greater than 15. Thus, the correct output is Yay!.",
    "040": "Generate a code-based solution, with an explanation, for the following task or described function:\nSpin-off of this kata, here you will have to figure out an efficient strategy to solve the problem of finding the sole duplicate number among an unsorted array/list of numbers starting from 1 up to n.\n\nHints: a solution in linear time can be found; using the most intuitive ones to search for duplicates that can run in O(n\u00b2) time won't work.",
    "041": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven a string and an array of integers representing indices, capitalize all letters at the given indices. \n\nFor example:\n\n* `capitalize(\"abcdef\",[1,2,5]) = \"aBCdeF\"`\n* `capitalize(\"abcdef\",[1,2,5,100]) = \"aBCdeF\"`. There is no index 100.\n\nThe input will be a lowercase string with no spaces and an array of digits.\n\nGood luck!\n\nBe sure to also try: \n\n[Alternate capitalization](https://www.codewars.com/kata/59cfc000aeb2844d16000075)\n\n[String array revisal](https://www.codewars.com/kata/59f08f89a5e129c543000069)",
    "042": "Generate a code-based solution, with an explanation, for the following task or described function:\nIn this Kata, you will sort elements in an array by decreasing frequency of elements. If two elements have the same frequency, sort them by increasing value. \n\n\nMore examples in test cases. \n\nGood luck!\n\nPlease also try [Simple time difference](https://www.codewars.com/kata/5b76a34ff71e5de9db0000f2)",
    "043": "Generate a code-based solution, with an explanation, for the following task or described function:\nNow you have to write a function that takes an argument and returns the square of it.",
    "044": "Generate a code-based solution, with an explanation, for the following task or described function:\nDefine a method ```hello``` that ```returns``` \"Hello, Name!\" to a given ```name```, or says Hello, World! if name is not given (or passed as an empty String).\n\nAssuming that ```name``` is a ```String``` and it checks for user typos to return a name with a first capital letter (Xxxx).\n\nExamples:",
    "045": "Generate a code-based solution, with an explanation, for the following task or described function:\nRegular Tic-Tac-Toe is boring.\n\nThat's why in this Kata you will be playing  Tic-Tac-Toe in **3D** using a 4 x 4 x 4 matrix!\n\n\n\n# Kata Task\n\nPlay the game. Work out who wins.\n\nReturn a string\n\n* `O wins after  moves`\n* `X wins after  moves`\n* `No winner`\n\n# Rules\n\n* Player `O` always goes first\n* Input `moves` is list/array/tuple of `[x,y,z]` (zero based)\n* Each player takes a turn until you find a winner, or there are no moves left\n* Four of the same symbols in a row wins\n* There may be more moves provided than are necessary to finish the game - that is for you to figure out\n\n\n\nGood Luck!\nDM",
    "046": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou drop a ball from a given height. After each bounce, the ball returns to some fixed proportion of its previous height. If the ball bounces to height 1 or less, we consider it to have stopped bouncing. Return the number of bounces it takes for the ball to stop moving.\n\n```\nbouncingBall(initialHeight, bouncingProportion)\n\nboucingBall(4, 0.5)\nAfter first bounce, ball bounces to height 2\nAfter second bounce, ball bounces to height 1\nTherefore answer is 2 bounces\n\nboucingBall(30, 0.3)\nAfter first bounce, ball bounces to height 9\nAfter second bounce, ball bounces to height 2.7\nAfter third bounce, ball bounces to height 0.81\nTherefore answer is 3 bounces\n\n\n```\n\nInitial height is an integer in range [2,1000]\n\nBouncing Proportion is a decimal in range [0, 1)",
    "047": "Generate a code-based solution, with an explanation, for the following task or described function:\n# Story&Task\n There are three parties in parliament. The \"Conservative Party\", the \"Reformist Party\", and a group of independants.\n\n You are a member of the \u201cConservative Party\u201d and you party is trying to pass a bill. The \u201cReformist Party\u201d is trying to block it.\n\n In order for a bill to pass, it must have a majority vote, meaning that more than half of all members must approve of a bill before it is passed . The \"Conservatives\" and \"Reformists\" always vote the same as other members of thier parties, meaning that all the members of each party will all vote yes, or all vote no .\n\n However, independants vote individually, and the independant vote is often the determining factor as to whether a bill gets passed or not.\n\n Your task is to find the minimum number of independents that have to vote for your party's (the Conservative Party's) bill so that it is passed .\n\n In each test case the makeup of the Parliament will be different . In some cases your party may make up the majority of parliament, and in others it may make up the minority. If your party is the majority, you may find that you do not neeed any independants to vote in favor of your bill in order for it to pass . If your party is the minority, it may be possible that there are not enough independants for your bill to be passed . If it is impossible for your bill to pass, return `-1`.\n\n# Input/Output\n\n\n - `[input]` integer `totalMembers`\n\n  The total number of members.\n\n\n - `[input]` integer `conservativePartyMembers`\n\n  The number of members in the Conservative Party.\n\n\n - `[input]` integer `reformistPartyMembers`\n\n  The number of members in the Reformist Party.\n\n \n - `[output]` an integer\n\n  The minimum number of independent members that have to vote as you wish so that the bill is passed, or `-1` if you can't pass it anyway.\n  \n# Example\n\n For `n = 8, m = 3 and k = 3`, the output should be `2`.\n \n It means: \n ```\n Conservative Party member --> 3\n Reformist Party member   --> 3\n the independent members --> 8 - 3 - 3 = 2\n If 2 independent members change their minds\n 3 + 2 > 3\n the bill will be passed.\n If 1 independent members change their minds\n perhaps the bill will be failed\n (If the other independent members is against the bill).\n 3 + 1 <= 3 + 1\n ```\n \n For `n = 13, m = 4 and k = 7`, the output should be `-1`.\n ```\n Even if all 2 independent members support the bill\n there are still not enough votes to pass the bill\n 4 + 2 < 7\n So the output is -1\n ```",
    "048": "Generate a code-based solution, with an explanation, for the following task or described function:\nAn **anagram** is the result of rearranging the letters of a word to produce a new word.\n\n**Note:** anagrams are case insensitive\n\nComplete the function to return `true` if the two arguments given are anagrams of each other; return `false` otherwise.\n\n\n## Examples\n\n* `\"foefet\"` is an anagram of `\"toffee\"`\n\n* `\"Buckethead\"` is an anagram of `\"DeathCubeK\"`",
    "049": "Generate a code-based solution, with an explanation, for the following task or described function:\nHave you heard about the myth that [if you fold a paper enough times, you can reach the moon with it](http://scienceblogs.com/startswithabang/2009/08/31/paper-folding-to-the-moon/)? Sure you have, but exactly how many? Maybe it's time to write a program to figure it out.\n\nYou know that a piece of paper has a thickness of `0.0001m`. Given `distance` in units of meters, calculate how many times you have to fold the paper to make the paper reach this distance.  \n(If you're not familiar with the concept of folding a paper: Each fold doubles its total thickness.)\n\nNote: Of course you can't do half a fold. You should know what this means ;P\n\nAlso, if somebody is giving you a negative distance, it's clearly bogus and you should yell at them by returning `null` (or whatever equivalent in your language. In Shell please return `None`).",
    "050": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven a string and an array of index numbers, return the characters of the string rearranged to be in the order specified by the accompanying array.\n\nEx:\n\nscramble('abcd', [0,3,1,2]) -> 'acdb' \n\nThe string that you will be returning back will have: 'a' at index 0, 'b' at index 3, 'c' at index 1, 'd' at index 2, because the order of those characters maps to their corisponding numbers in the index array. \n\n\nIn other words, put the first character in the string at the index described by the first element of the array\n\n\n\nYou can assume that you will be given a string and array of equal length and both containing valid characters (A-Z, a-z, or 0-9).",
    "051": "Generate a code-based solution, with an explanation, for the following task or described function:\nIt\u2019s that time of the year when students head back to school, which will usually involve moving lots of stuff, and packing lots of that stuff into boxes. However, before we go through that effort, it would be nice to know whether the boxes we have are the right size!\n\nA box has three dimensions, $l$, $w$, and $h$, and a box\u2019s volume $v$ is simply $l\\cdot w \\cdot h$. We have many small items to pack, and we don\u2019t care about their exact geometry: we know that, as long as a box has a volume of, at least, $\\mathbf{V}$, we will be able to pack all those items into that single box. So, given a box $i$, and its volume $v_ i$, then the difference $d_ i=v_ i-\\mathbf{V}$ can tell us whether the box is big enough or not to pack all the items. If $d_ i$ is greater than or equal to zero, the box is big enough; otherwise, the box is too small.\n\nSo, we want to answer a simple question: given multiple boxes, is the largest box (by volume) large enough to store all our items? For example, suppose $\\mathbf{V}=10$ and we have three boxes, $A$, $B$, and $C$, with dimensions $(1,1,2)$, $(2,2,2)$, and $(3,2,1)$, respectively. Their volumes will be $v_ A=2$, $v_ B=8$, and $v_ C=6$, which means the largest box is $B$. Unfortunately, $d_ B=v_ B-\\mathbf{V}=8-10=-2$, which means our largest box is not large enough.\n\nOn the other hand, suppose $\\mathbf{V}=980$, and we had four boxes, $W$, $X$, $Y$, and $Z$ with dimensions $(10,10,10)$, $(10,5,2)$, $(5,3,2)$, and $(90,5,2)$, respectively. Their volumes will be $v_ W=1000$, $v_ X=100$, $v_ Y=30$ and $v_ Z=900$, making $W$ the largest box and, since $d_ W=v_ W-\\mathbf{V}=1000-980=20$, that means $W$ is big enough for all our items.\n\n-----Input-----\nThe input specifies a set of boxes. It begins with a line containing two integers: $n$ ($1 \\le n \\le 100$), specifying the number of boxes, and $\\mathbf{V}$, as defined above. The remaining input is composed of $n$ lines, each specifying one box. Each line contains the dimensions $l$, $w$, and $h$ for the box. You may assume that $1 \\leqslant l, w, h, \\mathbf{V} < 2^{32}$. You may also assume that, for any given box $i$, its volume $v_ i$ will always be less than\u00a0$2^{32}$\n\n-----Output-----\nThe output is a single integer: the value of $d_ i$ for the largest box by volume.\n\n-----Examples-----\nSample Input 1:\n3 10\n1 1 2\n2 2 2\n3 2 1\nSample Output 1:\n-2\n\nSample Input 2:\n3 30\n1 1 1\n5 2 3\n5 2 1\nSample Output 2:\n0",
    "052": "Generate a code-based solution, with an explanation, for the following task or described function:\n-----Input-----\n\nThe input contains a single integer a (1 \u2264 a \u2264 64).\n\n\n-----Output-----\n\nOutput a single integer.\n\n\n-----Examples-----\nInput\n2\n\nOutput\n1\n\nInput\n4\n\nOutput\n2\n\nInput\n27\n\nOutput\n5\n\nInput\n42\n\nOutput\n6",
    "053": "Generate a code-based solution, with an explanation, for the following task or described function:\nWhile working a night shift at the university as a janitor, you absentmindedly erase a blackboard covered with equations, only to realize afterwards that these were no ordinary equations! They were the notes of the venerable Professor E. I. N. Stein who earlier in the day solved the elusive maximum quadrilateral problem! Quick, you have to redo his work so no one noticed what happened. \n\nThe maximum quadrilateral problem is quite easy to state: given four side lengths $s_1, s_2, s_3$ and $s_4$, find the maximum area of any quadrilateral that can be constructed using these lengths. A quadrilateral is a polygon with four vertices.\n\n-----Input-----\nThe input consists of a single line with four positive integers, the four side lengths $s_1$, $s_2$, $s_3$, and $s_4$.\n\nIt is guaranteed that $2s_ i < \\sum _{j=1}^4 s_ j$, for all $i$, and that $1 \\leq s_ i \\leq 1000$.\n\n-----Output-----\nOutput a single real number, the maximal area as described above. Your answer must be accurate to an absolute or relative error of at most $10^{-6}$.\n\n-----Examples-----\nSample Input 1:\n3 3 3 3\nSample Output 1:\n9\n\nSample Input 2:\n1 2 1 1\nSample Output 2:\n1.299038105676658",
    "054": "Generate a code-based solution, with an explanation, for the following task or described function:\n# Story\n\nYou and a group of friends are earning some extra money in the school holidays by re-painting the numbers on people's letterboxes for a small fee.\n\nSince there are 10 of you in the group each person just concentrates on painting one digit! For example, somebody will paint only the ```1```'s, somebody else will paint only the ```2```'s and so on...\n\nBut at the end of the day you realise not everybody did the same amount of work.\n\nTo avoid any fights you need to distribute the money fairly. That's where this Kata comes in.\n\n# Kata Task\n\nGiven the ```start``` and ```end``` letterbox numbers, write a method to return the frequency of all 10 digits painted.\n\n# Example\n\nFor ```start``` = 125, and ```end``` = 132\n\nThe letterboxes are\n* 125 = ```1```, ```2```, ```5```\n* 126 = ```1```, ```2```, ```6```\n* 127 = ```1```, ```2```, ```7```\n* 128 = ```1```, ```2```, ```8```\n* 129 = ```1```, ```2```, ```9```\n* 130 = ```1```, ```3```, ```0```\n* 131 = ```1```, ```3```, ```1```\n* 132 = ```1```, ```3```, ```2```\n\nThe digit frequencies are 1 x ```0```, 9 x ```1```, 6 x ```2``` etc...\n\nand so the method would return ```[1,9,6,3,0,1,1,1,1,1]```\n\n# Notes\n\n* 0 < ```start``` <= ```end```\n* In C, the returned value will be free'd.",
    "055": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou are given a string S consisting of uppercase English letters. Find the length of the longest ACGT string that is a substring (see Notes) of S.\nHere, a ACGT string is a string that contains no characters other than A, C, G and T.\n\n-----Notes-----\nA substring of a string T is a string obtained by removing zero or more characters from the beginning and the end of T.\nFor example, the substrings of ATCODER include TCO, AT, CODER, ATCODER and  (the empty string), but not AC.\n\n-----Constraints-----\n - S is a string of length between 1 and 10 (inclusive).\n - Each character in S is an uppercase English letter.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nS\n\n-----Output-----\nPrint the length of the longest ACGT string that is a substring of S.\n\n-----Sample Input-----\nATCODER\n\n-----Sample Output-----\n3\n\nAmong the ACGT strings that are substrings of ATCODER, the longest one is ATC.",
    "056": "Generate a code-based solution, with an explanation, for the following task or described function:\nTakahashi is participating in a programming contest called AXC002, and he has just submitted his code to Problem A.\nThe problem has N test cases.\nFor each test case i (1\\leq i \\leq N), you are given a string S_i representing the verdict for that test case. Find the numbers of test cases for which the verdict is AC, WA, TLE, and RE, respectively.\nSee the Output section for the output format.\n\n-----Constraints-----\n - 1 \\leq N \\leq 10^5\n - S_i is AC, WA, TLE, or RE.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nS_1\n\\vdots\nS_N\n\n-----Output-----\nLet C_0, C_1, C_2, and C_3 be the numbers of test cases for which the verdict is AC, WA, TLE, and RE, respectively. Print the following:\nAC x C_0\nWA x C_1\nTLE x C_2\nRE x C_3\n\n-----Sample Input-----\n6\nAC\nTLE\nAC\nAC\nWA\nTLE\n\n-----Sample Output-----\nAC x 3\nWA x 1\nTLE x 2\nRE x 0\n\nWe have 3, 1, 2, and 0 test case(s) for which the verdict is AC, WA, TLE, and RE, respectively.",
    "057": "Generate a code-based solution, with an explanation, for the following task or described function:\nComplete the function that takes two numbers as input, ```num``` and ```nth``` and return the `nth` digit of `num` (counting from right to left).\n\n## Note\n- If ```num``` is negative, ignore its sign and treat it as a positive value\n- If ```nth``` is not positive, return `-1`\n- Keep in mind that `42 = 00042`. This means that ```findDigit(42, 5)``` would return `0`\n\n## Examples\n\n```\nfindDigit(5673, 4)     returns 5\nfindDigit(129, 2)      returns 2\nfindDigit(-2825, 3)    returns 8\nfindDigit(-456, 4)     returns 0\nfindDigit(0, 20)       returns 0\nfindDigit(65, 0)       returns -1\nfindDigit(24, -8)      returns -1\n```",
    "058": "Generate a code-based solution, with an explanation, for the following task or described function:\nWrite a function that takes an integer and returns an array `[A, B, C]`, where `A` is the number of multiples of 3 (but not 5) below the given integer, `B` is the number of multiples of 5 (but not 3) below the given integer and `C` is the number of multiples of 3 and 5 below the given integer. \n\nFor example, `solution(20)` should return `[5, 2, 1]`\n\n~~~if:r\n```r\n# in R, returns a numeric vector\nsolution(20)\n[1] 5 2 1\n\nclass(solution(20))\n[1] \"numeric\"\n```\n~~~",
    "059": "Generate a code-based solution, with an explanation, for the following task or described function:\nIn some village, there are 999 towers that are 1,(1+2),(1+2+3),...,(1+2+3+...+999) meters high from west to east, at intervals of 1 meter.\nIt had been snowing for a while before it finally stopped. For some two adjacent towers located 1 meter apart, we measured the lengths of the parts of those towers that are not covered with snow, and the results are a meters for the west tower, and b meters for the east tower.\nAssuming that the depth of snow cover and the altitude are the same everywhere in the village, find the amount of the snow cover.\nAssume also that the depth of the snow cover is always at least 1 meter.\n\n-----Constraints-----\n - 1 \\leq a < b < 499500(=1+2+3+...+999)\n - All values in input are integers.\n - There is no input that contradicts the assumption.\n\n-----Input-----\nInput is given from Standard Input in the following format:\na b\n\n-----Output-----\nIf the depth of the snow cover is x meters, print x as an integer.\n\n-----Sample Input-----\n8 13\n\n-----Sample Output-----\n2\n\nThe heights of the two towers are 10 meters and 15 meters, respectively.\nThus, we can see that the depth of the snow cover is 2 meters.",
    "060": "Generate a code-based solution, with an explanation, for the following task or described function:\nYour task is to construct a building which will be a pile of n cubes.\nThe cube at the bottom will have a volume of n^3, the cube above \nwill have  volume of (n-1)^3 and so on until the top which will have a volume of 1^3.\n\nYou are given the total volume m of the building.\nBeing given m can you find the number n of cubes you will have to build?\n\nThe parameter of the function findNb `(find_nb, find-nb, findNb)` will be an integer m\nand you have to return the integer n such as\nn^3 + (n-1)^3 + ... + 1^3 = m\nif such a n exists or -1 if there is no such n.\n\n## Examples:\n```\nfindNb(1071225) --> 45\nfindNb(91716553919377) --> -1\n```",
    "061": "Generate a code-based solution, with an explanation, for the following task or described function:\nIn K-city, there are n streets running east-west, and m streets running north-south. Each street running east-west and each street running north-south cross each other. We will call the smallest area that is surrounded by four streets a block. How many blocks there are in K-city?\n\n-----Constraints-----\n - 2 \u2264 n, m \u2264 100\n\n-----Input-----\nInput is given from Standard Input in the following format:\nn m\n\n-----Output-----\nPrint the number of blocks in K-city.\n\n-----Sample Input-----\n3 4\n\n-----Sample Output-----\n6\n\nThere are six blocks, as shown below:",
    "062": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou have to create a function that converts integer given as string into ASCII uppercase letters.\n\nAll ASCII characters have their numerical order in table. \n\nFor example,\n\n```\nfrom ASCII table, character of number 65 is \"A\".\n```\n\nNumbers will be next to each other, So you have to split given number to two digit long integers.\n\nFor example, \n\n```\n'658776' to [65, 87, 76] and then turn it into 'AWL'.\n```",
    "063": "Generate a code-based solution, with an explanation, for the following task or described function:\nOdd and Even have had their share of fun times playing the good old prime game:\n\nThey start with an arbitrary natural number, and take turns either adding $1$ or dividing by a prime (assuming the result is still a natural number), and the one to reach $1$ is the winner. However, now that they have a new friend, Ingmariay, they have decided to expand the rules of the game to allow for three-player action:\n\nInstead of determining a winner for each round of play, they instead score points; the lowest number each of them has claimed during the round is the amount of points they get. (If any of them did not have the opportunity to claim any numbers, the starting number will be their score for that round.) At the end of the day, the player with the fewest points wins. And to avoid bad blood between themselves, they have all agreed that each of them only will focus on minimizing their own scores, and that whenever a player can choose different numbers that will result in the same score, that player will choose the lowest of those numbers. They have also agreed on a fixed order of play: Odd $\\rightarrow $ Even $\\rightarrow $ Ingmariay $\\rightarrow ...$, but they alternate who gets to start.\n\nYou recently missed one of their exciting evenings of play, because you had to make problems for the NCPC event. Fortunately for you, they had recorded the numbers and starting players for each round, and told you that since they always play optimally (minimizing their own score), you could use this to simulate the event for yourself. Oh joy!\n\nAs an example round, assume that Even is chosen as the starting player, and with the starting number $15$. Then Even claims $16$, Ingmariay $8$, Odd $4$, Even $2$ and Ingmariay $1$. Odd gets $4$ points, Even $2$ and Ingmariay $1$.\n\n-----Input-----\nThe first line of input contains a single integer $n$ ($1 \\leq n \\leq 1000$), the number of rounds they played that evening.\n\nThen follow $n$ lines each beginning with the first character of the name of the starting player (either \u2019O\u2019, \u2019E\u2019 or \u2019I\u2019), followed by a space and then the starting number for that round, in the range $[1, 10000]$\n\nNote: If the starting number is $1$, all players receive $1$ point for that round.\n\n-----Output-----\nOutput a single line with the score at the end of the day for each of the three contestants, in the order \u201cOdd\u201d, \u201cEven\u201d, \u201cIngmariay\u201d.\n\n-----Examples-----\nSample Input:\n1\nO 4\nSample Output:\n2 1 4",
    "064": "Generate a code-based solution, with an explanation, for the following task or described function:\nOne nice summer day while Mirko was drinking lemonade in his room...\n\n\u201cBig brother!\u201d, yells Stanko.\n\n\u201cI wonder sometimes which of the two of us is the big one. What is it?\u201d, Mirko asked.\n\n\u201cListen carefully! In the backyard I have $N$ pebbles arranged in a circle. Some of the pebbles are black, some are white. I will do the following: between any two neighbouring pebbles of the same colour I will insert a black pebble, and between any two neighbouring pebbles of different colours I will insert a white pebble. At that point there will be $2N$ pebbles in the circle, so I will remove the starting $N$ pebbles so that only the newly added $N$ pebbles remain. And all this I intend to do exactly $K$ times. And then you are to determine my starting circle.\u201d, said Stanko long-windedly.\n\n\u201cHa! I shall not fall prey to your trickery! I can see that it is not necessarily possible to know exactly what the starting circle was, but I can count the number of distinct starting circles that give the same result as your circle after exactly $K$ of those weird transformations of yours\u201d, answered Mirko.\n\nYou are given the configuration of the circle before Stanko performed the transformation described above $K$ times.\n\nWrite a program that determines the number of distinct starting circles that give the same circle after $K$ transformations as Stanko\u2019s original circle does after $K$ transformations.\n\nTwo configurations of pebbles are considered to be the same circle if one can be gotten from the other by rotating it any number of positions. For example BBW and BWB is the same circle whereas BBWWBW and WWBBWB are not.\n\n-----Input-----\nThe first line of input contains two integers $N$ and $K$, $3 \\le N \\le 100$, $1 \\le K \\le 10$, where $N$ is the number of pebbles in the circle and $K$ is the number of transformations made by Stanko. The second line contains exactly $N$ characters \u2018B\u2019 or \u2018W\u2019 representing Stanko\u2019s original circle.\n\n-----Output-----\nOutput the number of possible distinct starting circles on a single line.\n\n-----Examples-----\nSample Input:\n3 1\nBBW\nSample Output:\n2",
    "065": "Generate a code-based solution, with an explanation, for the following task or described function:\nVasya and Kolya play a game with a string, using the following rules. Initially, Kolya creates a string s, consisting of small English letters, and uniformly at random chooses an integer k from a segment [0, len(s) - 1]. He tells Vasya this string s, and then shifts it k letters to the left, i.\u00a0e. creates a new string t = s_{k} + 1s_{k} + 2... s_{n}s_1s_2... s_{k}. Vasya does not know the integer k nor the string t, but he wants to guess the integer k. To do this, he asks Kolya to tell him the first letter of the new string, and then, after he sees it, open one more letter on some position, which Vasya can choose.\n\nVasya understands, that he can't guarantee that he will win, but he wants to know the probability of winning, if he plays optimally. He wants you to compute this probability. \n\nNote that Vasya wants to know the value of k uniquely, it means, that if there are at least two cyclic shifts of s that fit the information Vasya knowns, Vasya loses. Of course, at any moment of the game Vasya wants to maximize the probability of his win.\n\n\n-----Input-----\n\nThe only string contains the string s of length l (3 \u2264 l \u2264 5000), consisting of small English letters only.\n\n\n-----Output-----\n\nPrint the only number\u00a0\u2014 the answer for the problem. You answer is considered correct, if its absolute or relative error does not exceed 10^{ - 6}.\n\nFormally, let your answer be a, and the jury's answer be b. Your answer is considered correct if $\\frac{|a - b|}{\\operatorname{max}(1,|b|)} \\leq 10^{-6}$\n\n\n-----Examples-----\nInput\ntechnocup\n\nOutput\n1.000000000000000\n\nInput\ntictictactac\n\nOutput\n0.333333333333333\n\nInput\nbbaabaabbb\n\nOutput\n0.100000000000000\n\n\n\n-----Note-----\n\nIn the first example Vasya can always open the second letter after opening the first letter, and the cyclic shift is always determined uniquely.\n\nIn the second example if the first opened letter of t is \"t\" or \"c\", then Vasya can't guess the shift by opening only one other letter. On the other hand, if the first letter is \"i\" or \"a\", then he can open the fourth letter and determine the shift uniquely.",
    "066": "Generate a code-based solution, with an explanation, for the following task or described function:\nThere are N people, conveniently numbered 1 through N.\nWe want to divide them into some number of groups, under the following two conditions:\n - Every group contains between A and B people, inclusive.\n - Let F_i be the number of the groups containing exactly i people. Then, for all i, either F_i=0 or C\u2264F_i\u2264D holds.\nFind the number of these ways to divide the people into groups.\nHere, two ways to divide them into groups is considered different if and only if there exists two people such that they belong to the same group in exactly one of the two ways.\nSince the number of these ways can be extremely large, print the count modulo 10^9+7.\n\n-----Constraints-----\n - 1\u2264N\u226410^3\n - 1\u2264A\u2264B\u2264N\n - 1\u2264C\u2264D\u2264N\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN A B C D\n\n-----Output-----\nPrint the number of ways to divide the people into groups under the conditions, modulo 10^9+7.\n\n-----Sample Input-----\n3 1 3 1 2\n\n-----Sample Output-----\n4\n\nThere are four ways to divide the people:\n - (1,2),(3)\n - (1,3),(2)\n - (2,3),(1)\n - (1,2,3)\nThe following way to divide the people does not count: (1),(2),(3). This is because it only satisfies the first condition and not the second.",
    "067": "Generate a code-based solution, with an explanation, for the following task or described function:\nSuppose you have two polynomials $A(x) = \\sum_{k = 0}^{n} a_{k} x^{k}$ and $B(x) = \\sum_{k = 0}^{m} b_{k} x^{k}$. Then polynomial $A(x)$ can be uniquely represented in the following way:$A(x) = B(x) \\cdot D(x) + R(x), \\operatorname{deg} R(x) < \\operatorname{deg} B(x)$\n\nThis can be done using long division. Here, $\\operatorname{deg} P(x)$ denotes the degree of polynomial P(x). $R(x)$ is called the remainder of division of polynomial $A(x)$ by polynomial $B(x)$, it is also denoted as $A \\operatorname{mod} B$. \n\nSince there is a way to divide polynomials with remainder, we can define Euclid's algorithm of finding the greatest common divisor of two polynomials. The algorithm takes two polynomials $(A, B)$. If the polynomial $B(x)$ is zero, the result is $A(x)$, otherwise the result is the value the algorithm returns for pair $(B, A \\operatorname{mod} B)$. On each step the degree of the second argument decreases, so the algorithm works in finite number of steps. But how large that number could be? You are to answer this question. \n\nYou are given an integer n. You have to build two polynomials with degrees not greater than n, such that their coefficients are integers not exceeding 1 by their absolute value, the leading coefficients (ones with the greatest power of x) are equal to one, and the described Euclid's algorithm performs exactly n steps finding their greatest common divisor. Moreover, the degree of the first polynomial should be greater than the degree of the second. By a step of the algorithm we mean the transition from pair $(A, B)$ to pair $(B, A \\operatorname{mod} B)$. \n\n\n-----Input-----\n\nYou are given a single integer n (1 \u2264 n \u2264 150)\u00a0\u2014 the number of steps of the algorithm you need to reach.\n\n\n-----Output-----\n\nPrint two polynomials in the following format.\n\nIn the first line print a single integer m (0 \u2264 m \u2264 n)\u00a0\u2014 the degree of the polynomial. \n\nIn the second line print m + 1 integers between  - 1 and 1\u00a0\u2014 the coefficients of the polynomial, from constant to leading. \n\nThe degree of the first polynomial should be greater than the degree of the second polynomial, the leading coefficients should be equal to 1. Euclid's algorithm should perform exactly n steps when called using these polynomials.\n\nIf there is no answer for the given n, print -1.\n\nIf there are multiple answer, print any of them.\n\n\n-----Examples-----\nInput\n1\n\nOutput\n1\n0 1\n0\n1\n\nInput\n2\n\nOutput\n2\n-1 0 1\n1\n0 1\n\n\n\n-----Note-----\n\nIn the second example you can print polynomials x^2 - 1 and x. The sequence of transitions is(x^2 - 1, x) \u2192 (x,  - 1) \u2192 ( - 1, 0).\n\nThere are two steps in it.",
    "068": "Generate a code-based solution, with an explanation, for the following task or described function:\nEmuskald is a well-known illusionist. One of his trademark tricks involves a set of magical boxes. The essence of the trick is in packing the boxes inside other boxes.\n\nFrom the top view each magical box looks like a square with side length equal to 2^{k} (k is an integer, k \u2265 0) units. A magical box v can be put inside a magical box u, if side length of v is strictly less than the side length of u. In particular, Emuskald can put 4 boxes of side length 2^{k} - 1 into one box of side length 2^{k}, or as in the following figure:\n\n [Image] \n\nEmuskald is about to go on tour performing around the world, and needs to pack his magical boxes for the trip. He has decided that the best way to pack them would be inside another magical box, but magical boxes are quite expensive to make. Help him find the smallest magical box that can fit all his boxes.\n\n\n-----Input-----\n\nThe first line of input contains an integer n (1 \u2264 n \u2264 10^5), the number of different sizes of boxes Emuskald has. Each of following n lines contains two integers k_{i} and a_{i} (0 \u2264 k_{i} \u2264 10^9, 1 \u2264 a_{i} \u2264 10^9), which means that Emuskald has a_{i} boxes with side length 2^{k}_{i}. It is guaranteed that all of k_{i} are distinct.\n\n\n-----Output-----\n\nOutput a single integer p, such that the smallest magical box that can contain all of Emuskald\u2019s boxes has side length 2^{p}.\n\n\n-----Examples-----\nInput\n2\n0 3\n1 5\n\nOutput\n3\n\nInput\n1\n0 4\n\nOutput\n1\n\nInput\n2\n1 10\n2 2\n\nOutput\n3\n\n\n\n-----Note-----\n\nPicture explanation. If we have 3 boxes with side length 2 and 5 boxes with side length 1, then we can put all these boxes inside a box with side length 4, for example, as shown in the picture.\n\nIn the second test case, we can put all four small boxes into a box with side length 2.",
    "069": "Generate a code-based solution, with an explanation, for the following task or described function:\nWhen the first scrollbars appeared on resizable windows during user interface development in the Elder Days, computer graphics were still primitive. Widgets were made with ASCII symbols and text was monospaced. A window displayed a viewport: a part of a much longer text, adjusted to fit the width of the window. The thumb, shown as an X, represented the position of the viewport relative to the full (adjusted) text and allowed vertical nagivation by clicking and dragging.\n\nAlas, much of the knowledge of the Ancients has been lost in the Great Purge of the Second Iconoclast Uprising, which destroyed the last remaining implementations of the user interface layer of the Elder GUI. As head programmer of the National Laboratory of Interaction Design Archeology it is your job to recreate the behaviour of the machines of yore as faithfully as possible.\n\nThanks to many years of studies, you have full understanding of the typographical aesthetics of the Elder Days: Lines were set flush left but ragged-right, and words on the same line were separated by single spaces. Line breaking was simple in those days: When the next word of the text fit on the current line, it was put there, otherwise a new line was started. If a word was too wide to fit the viewport, it was set on a line of its own and truncated at the right margin.\n\nThe language of the Ancients was written in upper- and lowercase letters of the English alphabet without punctuation or hyphenation. The scroll bar on the right contained navigation widgets for \u201cup\u201d and \u201cdown\u201d at the top and bottom.\n\n-----Input-----\nThe first line consists of $4$ integers $W$, $H$, $F$, $N$, separated by single spaces. The width of the viewport is $W$, with $3\\leq W\\leq 200$. The height of the viewport is $H$, with $3\\leq H\\leq 200$. The viewport must show line $F$ of the adjusted input as the first line at the top line; lines are numbered $0,\\ldots , L-1$, where $L$ is the total number of lines in the adjusted text; you can assume $0\\leq F \\leq L - H$ and $H < L$. The following $N$ lines for $1\\leq N\\leq 30000$ contain the text (not adjusted), between $1$ and $80$\u00a0characters per line, including spaces; neither the first nor last character in each line are a space. No word in the language of the Ancients was more than $80$\u00a0characters.\n\n-----Thumb position-----\nYou have discovered many ancient texts explaining the position $T\\in \\{ 0,\\ldots , H-3\\} $ of the thumb. Alas, all are written in arcane languages that are long forgotten. One example reads like this:\n\nSUBTRACT H FROM L GIVING DENOMINATOR.\nSUBTRACT 3 FROM H.\nMULTIPLY F BY H GIVING NUMERATOR.\nDIVIDE NUMERATOR BY DENOMINATOR GIVING T REMAINDER Left-Over.\n\nAnother source claims that $T$ can be determined by an incantation that is almost poetic in its mystery,\n\n H 3 - F *  L H - /\n\nand yet another obscure author writes\n\n(defun thumb (lines height first) (/ (* (- height 3) first) (- lines height)))\n\n\n-----Output-----\nPrint the window as the Ancients would have seen it, built from minus (-), plus (+), pipe (|), lower-case V (v), caret (^), and upper-case X (X). See the sample output for the details.\n\n-----Examples-----\nSample Input:\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\nSample Output:\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+",
    "070": "Generate a code-based solution, with an explanation, for the following task or described function:\nThe other day Unnar was playing the video game Geezer Scripts, Geezer Scripts V to be precise. He opened a door (in the game) and before he knew he was in a large and complicated cave-system, full of enemies who will attack as soon as Unnar gets to close to them. What\u2019s worse is that the game doesn\u2019t remember which enemies the player has already defeated so if the player leaves and comes back again the enemy will have respawned. Since Unnar is quite prone to getting lost he needs your help to find a way through the cave which incurs minimal damage to him.\n\nUnnar\u2019s character has some $A$ attack points and $H$ health points. The same is true for his enemies. When Unnar fights an enemy Unnar goes first. He subtracts his attack points from the enemies health points and the enemy then does the same. This process is repeated until either Unnar or the enemy has fewer than $1$ health points. The loser is the one who ran out of health points. If Unnar loses it\u2019s Game Over, but if Unnar wins he can continue traversing the cave-system but his lost health points do not regenerate.\n\nThe cave-system is not evenly elevated so its passages are one-way. The cave-system can be modelled using $n$ areas connected with $m$ one-way passages. Unnar starts in area $1$ and wants to get to area $n$. Every passage contains an enemy but the areas are safe.\n\n-----Input-----\nThe first line of the input contains two integers $1 \\leq A, H \\leq 10^9$ where $A$ denotes Unnar\u2019s attack points and $H$ his health points. The second line contains $1 \\leq n, m \\leq 10^5$ where $n$ is the number of ares in the cave and $m$ the number of passages. The next $m$ lines contain four integers $1 \\leq e_ i, b_ i \\leq n$ and $1 \\leq a_ i, h_ i \\leq 10^9$, indicating a passage from area $e_ i$ to $b_ i$ whose enemy has $a_ i$ attack points and $h_ i$ health points.\n\n-----Output-----\nIf Unnar can\u2019t get through the cave-system output \u2018Oh no\u2019, without the quotes. Otherwise output the maximum health Unnar can have after getting through the cave-system.\n\n-----Examples-----\nSample Input 1:\n1 2\n3 2\n1 2 1 2\n2 3 1 2\nSample Output 1:\nOh no\n\nSample Input 2:\n1 3\n3 2\n1 2 1 2\n2 3 1 2\nSample Output 2:\n1",
    "071": "Generate a code-based solution, with an explanation, for the following task or described function:\nThe only difference between easy and hard versions is constraints.\n\nNauuo is a girl who loves random picture websites.\n\nOne day she made a random picture website by herself which includes $n$ pictures.\n\nWhen Nauuo visits the website, she sees exactly one picture. The website does not display each picture with equal probability. The $i$-th picture has a non-negative weight $w_i$, and the probability of the $i$-th picture being displayed is $\\frac{w_i}{\\sum_{j=1}^nw_j}$. That is to say, the probability of a picture to be displayed is proportional to its weight.\n\nHowever, Nauuo discovered that some pictures she does not like were displayed too often. \n\nTo solve this problem, she came up with a great idea: when she saw a picture she likes, she would add $1$ to its weight; otherwise, she would subtract $1$ from its weight.\n\nNauuo will visit the website $m$ times. She wants to know the expected weight of each picture after all the $m$ visits modulo $998244353$. Can you help her?\n\nThe expected weight of the $i$-th picture can be denoted by $\\frac {q_i} {p_i}$ where $\\gcd(p_i,q_i)=1$, you need to print an integer $r_i$ satisfying $0\\le r_i<998244353$ and $r_i\\cdot p_i\\equiv q_i\\pmod{998244353}$. It can be proved that such $r_i$ exists and is unique.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$ ($1\\le n\\le 2\\cdot 10^5$, $1\\le m\\le 3000$) \u2014 the number of pictures and the number of visits to the website.\n\nThe second line contains $n$ integers $a_1,a_2,\\ldots,a_n$ ($a_i$ is either $0$ or $1$) \u2014 if $a_i=0$ , Nauuo does not like the $i$-th picture; otherwise Nauuo likes the $i$-th picture. It is guaranteed that there is at least one picture which Nauuo likes.\n\nThe third line contains $n$ positive integers $w_1,w_2,\\ldots,w_n$ ($w_i \\geq 1$) \u2014 the initial weights of the pictures. It is guaranteed that the sum of all the initial weights does not exceed $998244352-m$.\n\n\n-----Output-----\n\nThe output contains $n$ integers $r_1,r_2,\\ldots,r_n$ \u2014 the expected weights modulo $998244353$.\n\n\n-----Examples-----\nInput\n2 1\n0 1\n2 1\n\nOutput\n332748119\n332748119\n\nInput\n1 2\n1\n1\n\nOutput\n3\n\nInput\n3 3\n0 1 1\n4 3 5\n\nOutput\n160955686\n185138929\n974061117\n\n\n\n-----Note-----\n\nIn the first example, if the only visit shows the first picture with a probability of $\\frac 2 3$, the final weights are $(1,1)$; if the only visit shows the second picture with a probability of $\\frac1 3$, the final weights are $(2,2)$.\n\nSo, both expected weights are $\\frac2 3\\cdot 1+\\frac 1 3\\cdot 2=\\frac4 3$ .\n\nBecause $332748119\\cdot 3\\equiv 4\\pmod{998244353}$, you need to print $332748119$ instead of $\\frac4 3$ or $1.3333333333$.\n\nIn the second example, there is only one picture which Nauuo likes, so every time Nauuo visits the website, $w_1$ will be increased by $1$.\n\nSo, the expected weight is $1+2=3$.\n\nNauuo is very naughty so she didn't give you any hint of the third example.",
    "072": "Generate a code-based solution, with an explanation, for the following task or described function:\nIn the cold and remote areas of northern Sweden, a young boy named Anton lives. Being born to a family of pistvakts (an occupation that involves drinking moonshine called \u201cb\u00e4verhojt\u201d, hunting bears and occasionally handling safety in the mountains), he has been handed the responsibility of mounting temperature sensors in the Scandinavian Mountains. Anton has to place three identical sensors along the mountain range, which can be modeled as a one-dimensional number line.\n\nA lot of snow fell during the winter, and the sensors need to be placed at points with an ascending order of snow levels, since they work best arranged that way. This means that at the point of the leftmost sensor, the snow level must be strictly less than that of the other sensors, and at the point of the rightmost sensor, the snow level must instead be the strictly higher than that of the other sensors. Anton may also only place sensors at integer points. His house is located at point $0$, and no sensor may be placed to the left of the house.\n\nEven with this limitation, there can be a huge number of ways in which he can place the sensors. Anton has saved the log of where snow has fallen during the winter, given as a number of ranges $[a, b]$, indicating that 1 meter of snow fell between and including points $a$ and $b$. If snow fell $k$ times over a certain point, the snow level in that point is $k$. Can you help him calculate the number of ways he may place the sensors?\n\n-----Input-----\nThe first line of input contains a number $0 \\le n \\le 10^5$, the number of entries Anton has in his snow log. Then follow $n$ lines, each containing the two numbers $0 \\le a \\le b \\le 10^{18}$, denoting an interval in which snow fell.\n\n-----Output-----\nOutput consists of a single integer \u2013 the number of ways in which Anton can place the sensors. This number may be large, so output the remainder modulo $1000000009$. If there is no way Anton can place the sensors, you should instead output the string \u201cshovel time!\u201d, since Anton then must take his snowmobile and manually construct three points with the sought property.\n\n-----Examples-----\nSample Input:\n3\n1 1\n2 3\n2 3\nSample Output:\n2",
    "073": "Generate a code-based solution, with an explanation, for the following task or described function:\nNear a military base there is a system of trenches, modeled as line segments on a plane. During nighttime, when most soldiers are fast asleep, three guards stand watch of the trenches. Two guards can see each other if there is a trench (or a row of trenches) along the entire straight line segment between them and there is no third guard on that line segment.\n\nFor security reasons, the guards must be placed so that each guard sees the other two. How many ways can they be placed?\n\n-----Input-----\nThe first line contains the integer $N$ $(1 \\leq N \\leq 20)$, the number of trenches. Each of the next $N$ lines contains the description of one trench: four non-negative integers $X_1, Y_1, X_2, Y_2$ (all less than or equal to $1000$), where $X_1$ and $Y_1$ are coordinates of one end, while $X_2$ and $Y_2$ are coordinates of the other end of the trench.\n\nTrenches in the input may overlap and share endpoints.\n\n-----Output-----\nOutput the number of ways the guards can be placed on a single line.\n\n-----Examples-----\nSample Input 1:\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\nSample Output 1:\n8\n\nSample Input 2:\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\nSample Output 2:\n1",
    "074": "Generate a code-based solution, with an explanation, for the following task or described function:\nSometimes Mister B has free evenings when he doesn't know what to do. Fortunately, Mister B found a new game, where the player can play against aliens.\n\nAll characters in this game are lowercase English letters. There are two players: Mister B and his competitor.\n\nInitially the players have a string s consisting of the first a English letters in alphabetical order (for example, if a = 5, then s equals to \"abcde\").\n\nThe players take turns appending letters to string s. Mister B moves first.\n\nMister B must append exactly b letters on each his move. He can arbitrary choose these letters. His opponent adds exactly a letters on each move.\n\nMister B quickly understood that his opponent was just a computer that used a simple algorithm. The computer on each turn considers the suffix of string s of length a and generates a string t of length a such that all letters in the string t are distinct and don't appear in the considered suffix. From multiple variants of t lexicographically minimal is chosen (if a = 4 and the suffix is \"bfdd\", the computer chooses string t equal to \"aceg\"). After that the chosen string t is appended to the end of s.\n\nMister B soon found the game boring and came up with the following question: what can be the minimum possible number of different letters in string s on the segment between positions l and r, inclusive. Letters of string s are numerated starting from 1.\n\n\n-----Input-----\n\nFirst and only line contains four space-separated integers: a, b, l and r (1 \u2264 a, b \u2264 12, 1 \u2264 l \u2264 r \u2264 10^9) \u2014 the numbers of letters each player appends and the bounds of the segment.\n\n\n-----Output-----\n\nPrint one integer \u2014 the minimum possible number of different letters in the segment from position l to position r, inclusive, in string s.\n\n\n-----Examples-----\nInput\n1 1 1 8\n\nOutput\n2\nInput\n4 2 2 6\n\nOutput\n3\nInput\n3 7 4 6\n\nOutput\n1\n\n\n-----Note-----\n\nIn the first sample test one of optimal strategies generate string s = \"abababab...\", that's why answer is 2.\n\nIn the second sample test string s = \"abcdbcaefg...\" can be obtained, chosen segment will look like \"bcdbc\", that's why answer is 3.\n\nIn the third sample test string s = \"abczzzacad...\" can be obtained, chosen, segment will look like \"zzz\", that's why answer is 1.",
    "075": "Generate a code-based solution, with an explanation, for the following task or described function:\nMr. G is one of the most excellent students in North River High School for Gifted Students. Despite having impressive performance in a programming competition and making it to the next round, he was not totally happy since his best friend did not get such a great achievement. In order to appease the poor girl, Mr. G has to deal with a very hard challenge: Buy her some ginger candies!\n\nThe road system in North River province consists of $N$ junctions and $M$ bidirectional roads. Junctions are numbered from $1$ to $N$, and roads are numbered from $1$ to $M$, inclusive. On the $i^{th}$ road, which connects two junctions $u_ i$ and $v_ i$, there is a shop in which Mr. G can buy $c_ i$ ginger candies. No two roads have the same number of candies. Mr. G wants to meet his friend at some junction, travel through several roads without visiting the same road twice, buy all candies on those roads, and finish at the same junction where he starts.\n\nUsing his humble knowledge in Physics, Mr. G calculates the amount of energy he needs to spend as follow: Let $L$ be the maximum number of candies he buys in one road, and $K$ be the number of roads he passes through. The amount of energy he needs to spend is $L^2+\\alpha K$, where $\\alpha $ is some constant he has already known.\n\nHelp him to satisfy his friend with the minimum amount of energy.\n\n-----Input-----\n - The first line contains three integers $N$, $M$, $\\alpha $, the number of junctions, the number of roads and the predefined constant Mr. G uses to calculate the amount of energy, respectively ($1 \\leq N \\leq 10^5$, $1 \\leq M \\leq 2 \\times 10^5$, $1 \\leq \\alpha \\leq 20$).\n - In the next $M$ lines, each contains three integers $u$, $v$, $c$ ($1 \\leq u \\leq N$, $1 \\leq v \\leq N$, $10^6 \\leq c \\leq 10^9$), meaning that there is a road connecting two junctions $u$ and $v$, which sells $c$ ginger candies.\n\nIt is guaranteed that all $c$ in the above $M$ lines are distinct.\n\n-----Output-----\nWrite one integer denoting the minimum amount of energy Mr. G has to spend. If there is no route satisfying the condition, output Poor girl instead.\n\n-----Examples-----\nSample Input 1:\n7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\nSample Output 1:\n49000000000070\n\nSample Input 2:\n6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000\nSample Output 2:\n25000000000021",
    "076": "Generate a code-based solution, with an explanation, for the following task or described function:\nOnce Vasya and Petya assembled a figure of m cubes, each of them is associated with a number between 0 and m - 1 (inclusive, each number appeared exactly once). Let's consider a coordinate system such that the OX is the ground, and the OY is directed upwards. Each cube is associated with the coordinates of its lower left corner, these coordinates are integers for each cube.\n\nThe figure turned out to be stable. This means that for any cube that is not on the ground, there is at least one cube under it such that those two cubes touch by a side or a corner. More formally, this means that for the cube with coordinates (x, y) either y = 0, or there is a cube with coordinates (x - 1, y - 1), (x, y - 1) or (x + 1, y - 1).\n\nNow the boys want to disassemble the figure and put all the cubes in a row. In one step the cube is removed from the figure and being put to the right of the blocks that have already been laid. The guys remove the cubes in such order that the figure remains stable. To make the process more interesting, the guys decided to play the following game. The guys take out the cubes from the figure in turns. It is easy to see that after the figure is disassembled, the integers written on the cubes form a number, written in the m-ary positional numerical system (possibly, with a leading zero). Vasya wants the resulting number to be maximum possible, and Petya, on the contrary, tries to make it as small as possible. Vasya starts the game.\n\nYour task is to determine what number is formed after the figure is disassembled, if the boys play optimally. Determine the remainder of the answer modulo 10^9 + 9.\n\n\n-----Input-----\n\nThe first line contains number m (2 \u2264 m \u2264 10^5).\n\nThe following m lines contain the coordinates of the cubes x_{i}, y_{i} ( - 10^9 \u2264 x_{i} \u2264 10^9, 0 \u2264 y_{i} \u2264 10^9) in ascending order of numbers written on them. It is guaranteed that the original figure is stable.\n\nNo two cubes occupy the same place.\n\n\n-----Output-----\n\nIn the only line print the answer to the problem.\n\n\n-----Examples-----\nInput\n3\n2 1\n1 0\n0 1\n\nOutput\n19\n\nInput\n5\n0 0\n0 1\n0 2\n0 3\n0 4\n\nOutput\n2930",
    "077": "Generate a code-based solution, with an explanation, for the following task or described function:\nGoo is working in a well-known Slovak antivirus company which unfortunately cannot be named. In addition to antivirus software, they are developing a spam filter. Recently, Goo has made a few improvements to the filter and he wants to demonstrate his progress to his boss. As you can imagine, demonstrating low-level ideas of your implementation is not a good way to impress your boss, so Goo instead decided to make a presentation with plenty of graphs showing filtering results. The company has a huge database of e-mails and each e-mail is marked as a spam or ham (i.e.\u00a0not spam). These e-mails were all correctly marked by people \u2013 every time someone in the company receives an e-mail, he marks it as either spam or ham and adds it to the database.\n\nThe success of Goo\u2019s program can be measured in a simple way. Goo ran his program on all e-mails in the database. For each message he noted if his program correctly decided whether the message was spam or ham. The messages were processed in order from the oldest to the newest one. To impress the boss, Goo wants to select e-mails from a period of time and calculate the success rate only for this period. Of course, a period containing only one e-mail won\u2019t impress anyone, so Goo wants to choose a period which is long enough.\n\n-----Task-----\nYou are given a sequence of test results and a number $k$. Your task is to find a continuous subsequence of length at least $k$ which has the highest possible success rate among all such subsequences. The success rate of a subsequence is defined as the number of successfully classified e-mails divided by the length of the subsequence.\n\n-----Input description-----\nOn the first line there is an integer $k$ ($1\\le k \\le 100$) denoting the minimal subsequence length. The second line contains a string consisting of characters 0 and 1, denoting answers of the program for each e-mail in the database. Number 1 indicates that Goo\u2019s program gave a correct answer and 0 that it failed. The length of the string will be at least $k$ and at most $100000$ characters.\n\n-----Output description-----\nThe first and only line of output should consist of two integers $f$ and $\\ell $, separated by a single space. The integer $f$ is the 1-based index of the first element of subsequence with the best success rate and $\\ell $ is its length. If there are multiple optimal solutions, you can output any one of them.\n\n-----Examples-----\nSample Input:\n1\n01\nSample Output:\n2 1",
    "078": "Generate a code-based solution, with an explanation, for the following task or described function:\nEvery modern car has an odometer. It measures how far the car has traveled, and is used, among other things, to decide when to service a car. Sometimes, however, unscrupulous characters who want to sell a car might tamper with its odometer to make the car seem younger than it is. \n\nTommy Catkins wants to buy a used car, and has asked you to help him figure out if it has been serviced appropriately. You happen to know with certainty that the only previous owner of the car Tommy is interested in was a travelling salescat who drove at least $2000$ km and at most $20000$ km every single month. In addition, by Catland law, each car should be serviced at least every $30000$ km or $12$ months, whichever comes first, but you do not know if this has actually been done or not.\n\nThe service history entries indicate the approximate time the service took place, and the reading of the odometer at that time. The maximum distance the odometer can measure is $99999$ km. Upon reaching $100000$ km traveled, the odometer resets to $0$ km. In addition, the entries do not indicate exact time, only the year and month. In particular, even though you know that the car traveled between $2000$ and $20000$ km every month, you do not know how much of that distance was traveled before the service. For the purpose of the $12$ month rule, it does not matter which day during the month a service took place. For instance, it is perfectly fine if a service takes place on January 1 2017, and then the next service takes place on January 31 2018 (assuming the car did not travel more than $30000$ km during this time).\n\nGiven the service history entries, you must first determine whether it is possible that these are correct, or whether it can be conclusively proven that the odometer must have been tampered with. In the former case, assuming the odometer has not been tampered with, you must then determine whether or not the car has been serviced sufficiently often.\n\n-----Input-----\nThe first line of input contains an integer $1 \\le e \\le 500$, the number of entries in the service history.\n\nNext follow $e$ lines that describe the entries in the service history. Each such entry is given by three integers $y$, $m$, $o$, where $1950 \\le y \\le 2050$ and $1 \\le m \\le 12$ is the year and month of the service (respectively), and $0 \\le o \\le 99999$ is the reading of the odometer for that entry. The service entries are given in chronological order from oldest to most recent. The first service entry represents the purchase of the car when it was brand new and has $o=0$ (but the previous owner may still have travelled some or all of the distance for that month prior to buying the car). There may be multiple service entries in the same month (but they are still given in chronological order).\n\n-----Output-----\nIf it can be conclusively proven that the odometer must have been tampered with, output \u201ctampered odometer\u201d. Otherwise, if, assuming the odometer was not tampered with, the car can not have been serviced often enough, output \u201cinsufficient service\u201d. Otherwise, output \u201cseems legit\u201d.\n\n-----Examples-----\nSample Input 1:\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\nSample Output 1:\nseems legit\n\nSample Input 2:\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\nSample Output 2:\ninsufficient service\n\nSample Input 3:\n2\n2017 11 0\n2018 1 1000\nSample Output 3:\ntampered odometer\n\nSample Input 4:\n2\n2013 1 0\n2013 2 0\nSample Output 4:\nseems legit",
    "079": "Generate a code-based solution, with an explanation, for the following task or described function:\nThere is an automatic door at the entrance of a factory. The door works in the following way:  when one or several people come to the door and it is closed, the door immediately opens automatically and all people immediately come inside,  when one or several people come to the door and it is open, all people immediately come inside,  opened door immediately closes in d seconds after its opening,  if the door is closing and one or several people are coming to the door at the same moment, then all of them will have enough time to enter and only after that the door will close. \n\nFor example, if d = 3 and four people are coming at four different moments of time t_1 = 4, t_2 = 7, t_3 = 9 and t_4 = 13 then the door will open three times: at moments 4, 9 and 13. It will close at moments 7 and 12.\n\nIt is known that n employees will enter at moments a, 2\u00b7a, 3\u00b7a, ..., n\u00b7a (the value a is positive integer). Also m clients will enter at moments t_1, t_2, ..., t_{m}.\n\nWrite program to find the number of times the automatic door will open. Assume that the door is initially closed.\n\n\n-----Input-----\n\nThe first line contains four integers n, m, a and d (1 \u2264 n, a \u2264 10^9, 1 \u2264 m \u2264 10^5, 1 \u2264 d \u2264 10^18) \u2014 the number of the employees, the number of the clients, the moment of time when the first employee will come and the period of time in which the door closes.\n\nThe second line contains integer sequence t_1, t_2, ..., t_{m} (1 \u2264 t_{i} \u2264 10^18) \u2014 moments of time when clients will come. The values t_{i} are given in non-decreasing order.\n\n\n-----Output-----\n\nPrint the number of times the door will open.\n\n\n-----Examples-----\nInput\n1 1 3 4\n7\n\nOutput\n1\n\nInput\n4 3 4 2\n7 9 11\n\nOutput\n4\n\n\n\n-----Note-----\n\nIn the first example the only employee will come at moment 3. At this moment the door will open and will stay open until the moment 7. At the same moment of time the client will come, so at first he will enter and only after it the door will close. Thus the door will open one time.",
    "080": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou are totally bored with nothing to do. You notice a pattern of spots on the wall in front of you and begin to dwell on them. There is no obvious pattern of symmetry. With time this becomes very grating, and you contemplate adding more spots to satisfy your quest for balance. For this exercise you are to resolve this situation with a computer program.\n\nGiven an array of spots with coordinates in the range from $-20000$ to $20000$, determine the fewest additional spots needed to generate a pattern with some symmetry. The symmetry can be around a point or across a line. If the symmetry is around a point, the point does not need to be a spot in the data, or even a point with integral coordinates. If the symmetry is across a line, the line may be at any angle. The coordinates of the additional spots may or may not be within the $-20000$ to $20000$ limits.\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. The first line of input will consist of a single integer $n$ ($1 \\le n \\le 1000$) indicating the number of spots. Each of the next $n$ lines will hold two space-separated integers $x$ and $y$ ($-20000 \\le x,y \\le 20000$), which are the coordinates of a spot. The locations of all spots are guaranteed to be unique.\n\n-----Output-----\nOutput a single integer, indicating the smallest number of spots which need to be added so that all of the spots are symmetric about some point, or about some line.\n\n-----Examples-----\nSample Input:\n4\n0 0\n1000 0\n0 1000\n1000 1000\nSample Output:\n0",
    "081": "Generate a code-based solution, with an explanation, for the following task or described function:\nVasya and Petya are playing a simple game. Vasya thought of number x between 1 and n, and Petya tries to guess the number.\n\nPetya can ask questions like: \"Is the unknown number divisible by number y?\".\n\nThe game is played by the following rules: first Petya asks all the questions that interest him (also, he can ask no questions), and then Vasya responds to each question with a 'yes' or a 'no'. After receiving all the answers Petya should determine the number that Vasya thought of.\n\nUnfortunately, Petya is not familiar with the number theory. Help him find the minimum number of questions he should ask to make a guaranteed guess of Vasya's number, and the numbers y_{i}, he should ask the questions about.\n\n\n-----Input-----\n\nA single line contains number n (1 \u2264 n \u2264 10^3).\n\n\n-----Output-----\n\nPrint the length of the sequence of questions k (0 \u2264 k \u2264 n), followed by k numbers \u2014 the questions y_{i} (1 \u2264 y_{i} \u2264 n).\n\nIf there are several correct sequences of questions of the minimum length, you are allowed to print any of them.\n\n\n-----Examples-----\nInput\n4\n\nOutput\n3\n2 4 3 \n\nInput\n6\n\nOutput\n4\n2 4 3 5 \n\n\n\n-----Note-----\n\nThe sequence from the answer to the first sample test is actually correct.\n\nIf the unknown number is not divisible by one of the sequence numbers, it is equal to 1.\n\nIf the unknown number is divisible by 4, it is 4.\n\nIf the unknown number is divisible by 3, then the unknown number is 3.\n\nOtherwise, it is equal to 2. Therefore, the sequence of questions allows you to guess the unknown number. It can be shown that there is no correct sequence of questions of length 2 or shorter.",
    "082": "Generate a code-based solution, with an explanation, for the following task or described function:\nSpotting patterns in seemingly random strings is a problem with many applications. E.g., in our efforts to understand the genome we investigate the structure of DNA strings. In data compression we are interested in finding repetitions, so the data can be represented more efficiently with pointers. Another plausible example arises from the area of artificial intelligence, as how to interpret information given to you in a language you do not know. The natural thing to do in order to decode the information message would be to look for repetitions in it. So if the SETI project (the Search for Extra Terrestrial Intelligence) ever get a signal in the H21-spectra, we need to know how to decompose it.\n\nOne way of capturing the redundancy of a string is to find its factoring. If two or more identical substrings $A$ follow each other in a string $S$, we can represent this aprt of $S$ as the substring $A$, enclosed by parentheses, raised to the power of the number of repetitions. E.g., the string $DOODOO$ can be factored as $(DOO)^2$, but also as $(D(O)^2)^2$. Naturally, the latter factoring is considered better since it cannot be factored any further. We say that a factoring is irreducible if it does not contain any consecutive repetition of a substring. A string may have several irreducible factorings, as seen by the example string $POPPOP$. It can be factored as $(POP)^2$, as well as $PO(P)^2OP$. The first factoring has a shorter representation and motivates the following definition. The weigh of a factoring equals the number of characters in it, excluding the parentheses and the exponents. Thus the weight of $(POP)^2$ is $3$, whereas $PO(P)^2OP$ has weight $5$. A maximal facotring is a factoring with the smallest possible weight. It should be clear that a maximal factoring is always an irreducible one, but there may still be several maximal factorings. E.g.,\u00a0the string $ABABA$ has two maximal factorings $(AB)^2A$ and $A(BA)^2$.\n\n-----Input-----\nThe input consists of a single line, containing a string of at least one, but at most $200$ characters from the capital alphabet A-Z.\n\n-----Output-----\nOutput the weight of a maximal factoring of the input string.\n\n-----Examples-----\nSample Input 1:\nPRATTATTATTIC\nSample Output 1:\n6\n\nSample Input 2:\nGGGGGGGGG\nSample Output 2:\n1\n\nSample Input 3:\nPRIME\nSample Output 3:\n5\n\nSample Input 4:\nBABBABABBABBA\nSample Output 4:\n6",
    "083": "Generate a code-based solution, with an explanation, for the following task or described function:\nOn the forest-filled moon of Endor there is, if we are to believe the Guinness Book of Records, the longest stick in the whole galaxy. On that stick of $L$ meters in length there are $N$ cheerful chameleons. Each chameleon is moving along the stick with constant speed of $1\\mathrm{m}/\\mathrm{s}$ in one of two possible directions (left or right) and is colored in one of the possible $K$ colors.\n\nIt is known that the chameleons of Endor worship the ancient ant laws that dictate that the walk along the stick must be continued until the end of the stick is reached (which means getting off it), and when a collision with another chameleon takes place, you must turn $180$ degrees and continue the walk in the opposite direction. Additionally, after a chameleon colored in colour $a$ moving to the left collides with a chameleon colored in colour $b$ moving to the right, the chameleon moving to the left before the collision takes the color of the chameleon moving to the right before the collision (so, color $b$), while the chameleon moving to the right before the collision takes a new color $(a + b) \\bmod K$.\n\nIf you are given the initial positions, colors and directions of movement of all the chameleons, for each color determine the total trip taken by the chameleons in that color before getting off the stick.\n\n-----Input-----\nThe first line of input contains the integers $N$, $K$ and $L$ ($1 \\leq N \\leq 100000$, $1 \\leq K \\leq 40$, $1 \\leq L \\leq 1000000$) from the task. The $i$-th of the following $N$ lines contains the integer $d_ i$ ($0 \\leq d_ i \\leq L$) that denotes the distance between the $i$-th chameleon and the left end of the stick, then the integer $b_ i$ ($0 \\leq b_ i \\leq K - 1$) that denotes the color of the $i$-th chameleon and the character \u2018L\u2019 (left) or \u2018D\u2019 (right) that denote the direction of movement of the $i$-th chameleon. All integers $d_ i$ will be unique and given in strictly ascending order.\n\n-----Output-----\nThe output must contain $K$ lines, the $i$-th line containing the total trip taken by the chameleons in color $i$.\n\n-----Examples-----\nSample Input 1:\n2 3 10\n0 0 D\n10 1 L\nSample Output 1:\n10.0\n10.0\n0.0\n\nSample Input 2:\n4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\nSample Output 2:\n10.0\n4.0\n1.0",
    "084": "Generate a code-based solution, with an explanation, for the following task or described function:\nTwilight Sparkle was playing Ludo with her friends Rainbow Dash, Apple Jack and Flutter Shy. But she kept losing. Having returned to the castle, Twilight Sparkle became interested in the dice that were used in the game.\n\nThe dice has m faces: the first face of the dice contains a dot, the second one contains two dots, and so on, the m-th face contains m dots. Twilight Sparkle is sure that when the dice is tossed, each face appears with probability $\\frac{1}{m}$. Also she knows that each toss is independent from others. Help her to calculate the expected maximum number of dots she could get after tossing the dice n times.\n\n\n-----Input-----\n\nA single line contains two integers m and n (1 \u2264 m, n \u2264 10^5).\n\n\n-----Output-----\n\nOutput a single real number corresponding to the expected maximum. The answer will be considered correct if its relative or absolute error doesn't exceed 10 ^{ - 4}.\n\n\n-----Examples-----\nInput\n6 1\n\nOutput\n3.500000000000\n\nInput\n6 3\n\nOutput\n4.958333333333\n\nInput\n2 2\n\nOutput\n1.750000000000\n\n\n\n-----Note-----\n\nConsider the third test example. If you've made two tosses:  You can get 1 in the first toss, and 2 in the second. Maximum equals to 2.  You can get 1 in the first toss, and 1 in the second. Maximum equals to 1.  You can get 2 in the first toss, and 1 in the second. Maximum equals to 2.  You can get 2 in the first toss, and 2 in the second. Maximum equals to 2. \n\nThe probability of each outcome is 0.25, that is expectation equals to: $(2 + 1 + 2 + 2) \\cdot 0.25 = \\frac{7}{4}$\n\nYou can read about expectation using the following link: http://en.wikipedia.org/wiki/Expected_value",
    "085": "Generate a code-based solution, with an explanation, for the following task or described function:\nIn a distributed system, data is never where you need it, and fetching data over a network takes time and consumes bandwidth. The problem can be mitigated by adding a cache, where a node stores some resources locally and if those resources need to be used again, it can simply take them from its cache rather than asking someone else for them. \n\nHowever, caches have a nasty tendency to fill up, so at some point, objects must be evicted from the cache to make room for new objects. Choosing what object to remove from the cache is not easy and there are several different algorithms to choose from.\n\nThe marvelous Apes in Computing Machinery have come up with a fantastic new algorithm, the Introspective Caching Algorithm, named after a city of Peru. It consists of some extra hardware (a very small, precognitive monkey) which helps making decisions. Since the monkey can see into the future, she knows exactly what objects will be accessed and in what order, and using this information she will make optimal decisions on what objects to remove from the cache. Optimality here means that she will minimize the number of times an object is read into the cache.\n\nAll object accesses go through the cache, so every time an object is accessed, it must be inserted into the cache if it was not already there. All objects are of equal size, and no writes occur in the system, so a cached object is always valid. When the system starts, the cache is empty.\n\nYou have been tasked with evaluating the monkey\u2019s performance, and feeding her the occasional banana.\n\n-----Input-----\nThe first line of input contains three integers, separated by single spaces, telling you how many objects fit in the cache, $0 < c \\le 10000$, how many different objects are in the system, $c \\le n \\le 100000$, and how many accesses, $0 \\le a \\le 100000$, will occur. The following $a$ lines contain a single integer between $0$ and $n-1$ (inclusive) indicating what object is accessed. The first line corresponds to the first object accessed access and the last line to the last.\n\n-----Output-----\nOutput the least number of times an object must be read into the cache to handle the accesses listed in the input.\n\n-----Examples-----\nSample Input:\n1 2 3\n0\n0\n1\nSample Output:\n2",
    "086": "Generate a code-based solution, with an explanation, for the following task or described function:\nSasha and Kolya decided to get drunk with Coke, again. This time they have k types of Coke. i-th type is characterised by its carbon dioxide concentration $\\frac{a_{i}}{1000}$. Today, on the party in honour of Sergiy of Vancouver they decided to prepare a glass of Coke with carbon dioxide concentration $\\frac{n}{1000}$. The drink should also be tasty, so the glass can contain only integer number of liters of each Coke type (some types can be not presented in the glass). Also, they want to minimize the total volume of Coke in the glass.\n\nCarbon dioxide concentration is defined as the volume of carbone dioxide in the Coke divided by the total volume of Coke. When you mix two Cokes, the volume of carbon dioxide sums up, and the total volume of Coke sums up as well.\n\nHelp them, find the minimal natural number of liters needed to create a glass with carbon dioxide concentration $\\frac{n}{1000}$. Assume that the friends have unlimited amount of each Coke type.\n\n\n-----Input-----\n\nThe first line contains two integers n, k (0 \u2264 n \u2264 1000, 1 \u2264 k \u2264 10^6)\u00a0\u2014 carbon dioxide concentration the friends want and the number of Coke types.\n\nThe second line contains k integers a_1, a_2, ..., a_{k} (0 \u2264 a_{i} \u2264 1000)\u00a0\u2014 carbon dioxide concentration of each type of Coke. Some Coke types can have same concentration.\n\n\n-----Output-----\n\nPrint the minimal natural number of liter needed to prepare a glass with carbon dioxide concentration $\\frac{n}{1000}$, or -1 if it is impossible.\n\n\n-----Examples-----\nInput\n400 4\n100 300 450 500\n\nOutput\n2\n\nInput\n50 2\n100 25\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first sample case, we can achieve concentration $\\frac{400}{1000}$ using one liter of Coke of types $\\frac{300}{1000}$ and $\\frac{500}{1000}$: $\\frac{300 + 500}{1000 + 1000} = \\frac{400}{1000}$.\n\nIn the second case, we can achieve concentration $\\frac{50}{1000}$ using two liters of $\\frac{25}{1000}$ type and one liter of $\\frac{100}{1000}$ type: $\\frac{25 + 25 + 100}{3 \\cdot 1000} = \\frac{50}{1000}$.",
    "087": "Generate a code-based solution, with an explanation, for the following task or described function:\nCrazy Town is a plane on which there are n infinite line roads. Each road is defined by the equation a_{i}x + b_{i}y + c_{i} = 0, where a_{i} and b_{i} are not both equal to the zero. The roads divide the plane into connected regions, possibly of infinite space. Let's call each such region a block. We define an intersection as the point where at least two different roads intersect.\n\nYour home is located in one of the blocks. Today you need to get to the University, also located in some block. In one step you can move from one block to another, if the length of their common border is nonzero (in particular, this means that if the blocks are adjacent to one intersection, but have no shared nonzero boundary segment, then it are not allowed to move from one to another one in one step).\n\nDetermine what is the minimum number of steps you have to perform to get to the block containing the university. It is guaranteed that neither your home nor the university is located on the road.\n\n\n-----Input-----\n\nThe first line contains two space-separated integers x_1, y_1 ( - 10^6 \u2264 x_1, y_1 \u2264 10^6) \u2014 the coordinates of your home.\n\nThe second line contains two integers separated by a space x_2, y_2 ( - 10^6 \u2264 x_2, y_2 \u2264 10^6) \u2014 the coordinates of the university you are studying at.\n\nThe third line contains an integer n (1 \u2264 n \u2264 300) \u2014 the number of roads in the city. The following n lines contain 3 space-separated integers ( - 10^6 \u2264 a_{i}, b_{i}, c_{i} \u2264 10^6; |a_{i}| + |b_{i}| > 0) \u2014 the coefficients of the line a_{i}x + b_{i}y + c_{i} = 0, defining the i-th road. It is guaranteed that no two roads are the same. In addition, neither your home nor the university lie on the road (i.e. they do not belong to any one of the lines).\n\n\n-----Output-----\n\nOutput the answer to the problem.\n\n\n-----Examples-----\nInput\n1 1\n-1 -1\n2\n0 1 0\n1 0 0\n\nOutput\n2\n\nInput\n1 1\n-1 -1\n3\n1 0 0\n0 1 0\n1 1 -3\n\nOutput\n2\n\n\n\n-----Note-----\n\nPictures to the samples are presented below (A is the point representing the house; B is the point representing the university, different blocks are filled with different colors): [Image]  [Image]",
    "088": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou are given a permutation $p_1, p_2, \\ldots, p_n$.\n\nIn one move you can swap two adjacent values.\n\nYou want to perform a minimum number of moves, such that in the end there will exist a subsegment $1,2,\\ldots, k$, in other words in the end there should be an integer $i$, $1 \\leq i \\leq n-k+1$ such that $p_i = 1, p_{i+1} = 2, \\ldots, p_{i+k-1}=k$.\n\nLet $f(k)$ be the minimum number of moves that you need to make a subsegment with values $1,2,\\ldots,k$ appear in the permutation.\n\nYou need to find $f(1), f(2), \\ldots, f(n)$.\n\n\n-----Input-----\n\nThe first line of input contains one integer $n$ ($1 \\leq n \\leq 200\\,000$): the number of elements in the permutation.\n\nThe next line of input contains $n$ integers $p_1, p_2, \\ldots, p_n$: given permutation ($1 \\leq p_i \\leq n$).\n\n\n-----Output-----\n\nPrint $n$ integers, the minimum number of moves that you need to make a subsegment with values $1,2,\\ldots,k$ appear in the permutation, for $k=1, 2, \\ldots, n$.\n\n\n-----Examples-----\nInput\n5\n5 4 3 2 1\n\nOutput\n0 1 3 6 10 \n\nInput\n3\n1 2 3\n\nOutput\n0 0 0",
    "089": "Generate a code-based solution, with an explanation, for the following task or described function:\nOne day Mirko, while he was walking through the high grass, stumbled upon a sequence of $N$ colored marbles. Soon he noticed that if he touches $K$ or more consecutive marbles of the same color, they start to twinkle and then he could wish them to magically vanish, although he doesn\u2019t have to do that immediately (see $3$rd sample). Fortunately, Mirko brought an inexhaustible supply of marbles from home, so he can insert a marble of any color anywhere in the array (at the beginning, between any two existing marbles, or at the end). Help Mirko find the smallest number of marbles he must insert into the sequence before he could make all of the marbles vanish.\n\n-----Input-----\nThe first line of input contains two integers $N$ ($1 \\leq N \\leq 100$) and $K$ ($2 \\leq K \\leq 5$) \u2013 the number of marbles in the initial sequence and the minimal number of consecutive marbles of the same color he could wish to vanish. The next line contains exactly $N$ integers between $1$ and $100$ (inclusive), separated by one space. Those numbers represent colors of marbles in the sequence Mirko found.\n\n-----Output-----\nThe output should contain only one line with a single integer number \u2013 the minimal number of marbles Mirko has to insert to achive the desired effect.\n\n-----Examples-----\nSample Input 1:\n2 5\n1 1\nSample Output 1:\n3\n\nSample Input 2:\n5 3\n2 2 3 2 2\nSample Output 2:\n2",
    "090": "Generate a code-based solution, with an explanation, for the following task or described function:\nSomething happened in Uzhlyandia again... There are riots on the streets... Famous Uzhlyandian superheroes Shean the Sheep and Stas the Giraffe were called in order to save the situation. Upon the arriving, they found that citizens are worried about maximum values of the Main Uzhlyandian Function f, which is defined as follows:$f(l, r) = \\sum_{i = l}^{r - 1}|a [ i ] - a [ i + 1 ]|\\cdot(- 1)^{i - l}$\n\nIn the above formula, 1 \u2264 l < r \u2264 n must hold, where n is the size of the Main Uzhlyandian Array a, and |x| means absolute value of x. But the heroes skipped their math lessons in school, so they asked you for help. Help them calculate the maximum value of f among all possible values of l and r for the given array a.\n\n\n-----Input-----\n\nThe first line contains single integer n (2 \u2264 n \u2264 10^5)\u00a0\u2014 the size of the array a.\n\nThe second line contains n integers a_1, a_2, ..., a_{n} (-10^9 \u2264 a_{i} \u2264 10^9)\u00a0\u2014 the array elements.\n\n\n-----Output-----\n\nPrint the only integer\u00a0\u2014 the maximum value of f.\n\n\n-----Examples-----\nInput\n5\n1 4 2 3 1\n\nOutput\n3\nInput\n4\n1 5 4 7\n\nOutput\n6\n\n\n-----Note-----\n\nIn the first sample case, the optimal value of f is reached on intervals [1, 2] and [2, 5].\n\nIn the second case maximal value of f is reachable only on the whole array.",
    "091": "Generate a code-based solution, with an explanation, for the following task or described function:\nMTR (subway) stations are common meetup locations in Hong Kong. Alice and Bob are going to meet up at one of the MTR stations. They each show up at the meeting spot in one of the stations right at noon, without remembering which station they plan to meet at. Having poor cellphone connection at the stations, they fail to contact the other person. Fortunately, they have agreed to look for each other with the following strategy.\n\nEach station has a unique designated meeting spot. Every minute starting from noon, Alice and Bob look for the other person at the meeting spot of their current stations. If they happen to be at the same station, they can finally meet up. Otherwise, they each takes a train to reach a neighbouring station, uniformly at random from among the neighbouring stations. Upon arrival, they look for the other person at the meeting spot of their current stations. If they still cannot find each other, each of them again takes a train to reach a neighbouring station, uniformly at random. This process goes on until they are at (the meeting spot of) the same station at the same time.\n\nTrains move very fast, so Alice and Bob will not see each other while on trains running in opposite directions. Suppose it takes exactly one minute to get from the meeting spot of one station to that of a neighbouring station. What is the expected time they will meet?\n\n-----Input-----\nThe first line of input contains two integers $n$ and $m$. $n$ is the number of MTR stations ($1 \\leq n \\leq 20$, $0 \\leq m \\leq n(n-1)/2$) and $m$ is the number of pairs of stations that are neighbours.\n\nEach of the following $m$ lines contains two distinct integers, $u$ and $v$ ($0 \\leq u, v < n$, $u \\neq v$), indicating that stations $u$ and $v$ are neighbours. Every unordered pair of neighbours $(u,v)$ will appear at most once in the input.\n\nThe last line consists of two integers $s$ and $t$ ($0 \\leq s, t < n$), denoting the initial stations of Alice and Bob, respectively.\n\n-----Output-----\nIf Alice and Bob will never meet, output \u201cnever meet\u201d without the quotes. Otherwise, output a real number indicating the expected time (in minutes past noon) they will meet at the meeting spot of a certain station. Any solution with a relative or absolute error of $10^{-6}$ will be accepted.\n\n-----Examples-----\nSample Input:\n3 2\n0 1\n1 2\n0 2\nSample Output:\n1",
    "092": "Generate a code-based solution, with an explanation, for the following task or described function:\nSquirrel Liss is interested in sequences. She also has preferences of integers. She thinks n integers a_1, a_2, ..., a_{n} are good.\n\nNow she is interested in good sequences. A sequence x_1, x_2, ..., x_{k} is called good if it satisfies the following three conditions:  The sequence is strictly increasing, i.e. x_{i} < x_{i} + 1 for each i (1 \u2264 i \u2264 k - 1).  No two adjacent elements are coprime, i.e. gcd(x_{i}, x_{i} + 1) > 1 for each i (1 \u2264 i \u2264 k - 1) (where gcd(p, q) denotes the greatest common divisor of the integers p and q).  All elements of the sequence are good integers. \n\nFind the length of the longest good sequence.\n\n\n-----Input-----\n\nThe input consists of two lines. The first line contains a single integer n (1 \u2264 n \u2264 10^5) \u2014 the number of good integers. The second line contains a single-space separated list of good integers a_1, a_2, ..., a_{n} in strictly increasing order (1 \u2264 a_{i} \u2264 10^5;\u00a0a_{i} < a_{i} + 1).\n\n\n-----Output-----\n\nPrint a single integer \u2014 the length of the longest good sequence.\n\n\n-----Examples-----\nInput\n5\n2 3 4 6 9\n\nOutput\n4\n\nInput\n9\n1 2 3 5 6 7 8 9 10\n\nOutput\n4\n\n\n\n-----Note-----\n\nIn the first example, the following sequences are examples of good sequences: [2; 4; 6; 9], [2; 4; 6], [3; 9], [6]. The length of the longest good sequence is 4.",
    "093": "Generate a code-based solution, with an explanation, for the following task or described function:\nLet's write all the positive integer numbers one after another from $1$ without any delimiters (i.e. as a single string). It will be the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536...\n\nYour task is to print the $k$-th digit of this sequence.\n\n\n-----Input-----\n\nThe first and only line contains integer $k$ ($1 \\le k \\le 10000$) \u2014 the position to process ($1$-based index).\n\n\n-----Output-----\n\nPrint the $k$-th digit of the resulting infinite sequence.\n\n\n-----Examples-----\nInput\n7\n\nOutput\n7\n\nInput\n21\n\nOutput\n5",
    "094": "Generate a code-based solution, with an explanation, for the following task or described function:\nVus the Cossack has $n$ real numbers $a_i$. It is known that the sum of all numbers is equal to $0$. He wants to choose a sequence $b$ the size of which is $n$ such that the sum of all numbers is $0$ and each $b_i$ is either $\\lfloor a_i \\rfloor$ or $\\lceil a_i \\rceil$. In other words, $b_i$ equals $a_i$ rounded up or down. It is not necessary to round to the nearest integer.\n\nFor example, if $a = [4.58413, 1.22491, -2.10517, -3.70387]$, then $b$ can be equal, for example, to $[4, 2, -2, -4]$. \n\nNote that if $a_i$ is an integer, then there is no difference between $\\lfloor a_i \\rfloor$ and $\\lceil a_i \\rceil$, $b_i$ will always be equal to $a_i$.\n\nHelp Vus the Cossack find such sequence!\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\leq n \\leq 10^5$)\u00a0\u2014 the number of numbers.\n\nEach of the next $n$ lines contains one real number $a_i$ ($|a_i| < 10^5$). It is guaranteed that each $a_i$ has exactly $5$ digits after the decimal point. It is guaranteed that the sum of all the numbers is equal to $0$.\n\n\n-----Output-----\n\nIn each of the next $n$ lines, print one integer $b_i$. For each $i$, $|a_i-b_i|<1$ must be met.\n\nIf there are multiple answers, print any.\n\n\n-----Examples-----\nInput\n4\n4.58413\n1.22491\n-2.10517\n-3.70387\n\nOutput\n4\n2\n-2\n-4\n\nInput\n5\n-6.32509\n3.30066\n-0.93878\n2.00000\n1.96321\n\nOutput\n-6\n3\n-1\n2\n2\n\n\n\n-----Note-----\n\nThe first example is explained in the legend.\n\nIn the second example, we can round the first and fifth numbers up, and the second and third numbers down. We can round the fourth number neither up, nor down.",
    "095": "Generate a code-based solution, with an explanation, for the following task or described function:\n# Task\n You are given integer `n` determining set S = {1, 2, ..., n}. Determine if the number of k-element subsets of S is `ODD` or `EVEN` for given integer k.\n\n# Example\n\n For `n = 3, k = 2`, the result should be `\"ODD\"`\n \n In this case, we have 3 2-element subsets of {1, 2, 3}:\n \n `{1, 2}, {1, 3}, {2, 3}`\n\n For `n = 2, k = 1`, the result should be `\"EVEN\"`.\n \n In this case, we have 2 1-element subsets of {1, 2}:\n \n `{1}, {2}`\n\n `Don't bother with naive solution - numbers here are really big.`\n\n# Input/Output\n\n\n - `[input]` integer `n`\n\n    `1 <= n <= 10^9`\n\n\n - `[input]` integer `k`\n\n    `1 <= k <= n`\n\n\n - `[output]` a string\n\n    `\"EVEN\"` or `\"ODD\"` depending if the number of k-element subsets of S = {1, 2, ..., n} is ODD or EVEN.",
    "096": "Generate a code-based solution, with an explanation, for the following task or described function:\nA kingdom consists of a king, his children, his grandchildren, and so on. Every once in a while, someone in the family dies or a child is born.\nThe kingdom has a well-defined order of inheritance that consists of the king as the first member. Let's define the recursive function Successor(x, curOrder), which given a person x and the inheritance order so far, returns who should be the next person after x in the order of inheritance.\nSuccessor(x, curOrder):\n    if x has no children or all of x's children are in curOrder:\n        if x is the king return null\n        else return Successor(x's parent, curOrder)\n    else return x's oldest child who's not in curOrder\n\nFor example, assume we have a kingdom that consists of the king, his children Alice and Bob (Alice is older than Bob), and finally Alice's son Jack.\n\nIn the beginning, curOrder will be [\"king\"].\nCalling Successor(king, curOrder) will return Alice, so we append to curOrder to get [\"king\", \"Alice\"].\nCalling Successor(Alice, curOrder) will return Jack, so we append to curOrder to get [\"king\", \"Alice\", \"Jack\"].\nCalling Successor(Jack, curOrder) will return Bob, so we append to curOrder to get [\"king\", \"Alice\", \"Jack\", \"Bob\"].\nCalling Successor(Bob, curOrder) will return null. Thus the order of inheritance will be [\"king\", \"Alice\", \"Jack\", \"Bob\"].\n\nUsing the above function, we can always obtain a unique order of inheritance.\nImplement the ThroneInheritance class:\n\nThroneInheritance(string kingName) Initializes an object of the ThroneInheritance class. The name of the king is given as part of the constructor.\nvoid birth(string parentName, string childName) Indicates that parentName gave birth to childName.\nvoid death(string name) Indicates the death of name. The death of the person doesn't affect the Successor function nor the current inheritance order. You can treat it as just marking the person as dead.\nstring[] getInheritanceOrder() Returns a list representing the current order of inheritance excluding dead people.\n\n\u00a0\nExample 1:\nInput\n[\"ThroneInheritance\", \"birth\", \"birth\", \"birth\", \"birth\", \"birth\", \"birth\", \"getInheritanceOrder\", \"death\", \"getInheritanceOrder\"]\n[[\"king\"], [\"king\", \"andy\"], [\"king\", \"bob\"], [\"king\", \"catherine\"], [\"andy\", \"matthew\"], [\"bob\", \"alex\"], [\"bob\", \"asha\"], [null], [\"bob\"], [null]]\nOutput\n[null, null, null, null, null, null, null, [\"king\", \"andy\", \"matthew\", \"bob\", \"alex\", \"asha\", \"catherine\"], null, [\"king\", \"andy\", \"matthew\", \"alex\", \"asha\", \"catherine\"]]\n\nExplanation\nThroneInheritance t= new ThroneInheritance(\"king\"); // order: king\nt.birth(\"king\", \"andy\"); // order: king > andy\nt.birth(\"king\", \"bob\"); // order: king > andy > bob\nt.birth(\"king\", \"catherine\"); // order: king > andy > bob > catherine\nt.birth(\"andy\", \"matthew\"); // order: king > andy > matthew > bob > catherine\nt.birth(\"bob\", \"alex\"); // order: king > andy > matthew > bob > alex > catherine\nt.birth(\"bob\", \"asha\"); // order: king > andy > matthew > bob > alex > asha > catherine\nt.getInheritanceOrder(); // return [\"king\", \"andy\", \"matthew\", \"bob\", \"alex\", \"asha\", \"catherine\"]\nt.death(\"bob\"); // order: king > andy > matthew > bob > alex > asha > catherine\nt.getInheritanceOrder(); // return [\"king\", \"andy\", \"matthew\", \"alex\", \"asha\", \"catherine\"]\n\n\u00a0\nConstraints:\n\n1 <= kingName.length, parentName.length, childName.length, name.length <= 15\nkingName, parentName, childName, and name consist of lowercase English letters only.\nAll arguments childName and kingName are distinct.\nAll name arguments of death will be passed to either the constructor or as childName to birth first.\nFor each call to\u00a0birth(parentName, childName), it is guaranteed that\u00a0parentName is alive.\nAt most 105 calls will be made to birth and death.\nAt most 10 calls will be made to getInheritanceOrder.",
    "097": "Generate a code-based solution, with an explanation, for the following task or described function:\nGildong owns a bulgogi restaurant. The restaurant has a lot of customers, so many of them like to make a reservation before visiting it.\n\nGildong tries so hard to satisfy the customers that he even memorized all customers' preferred temperature ranges! Looking through the reservation list, he wants to satisfy all customers by controlling the temperature of the restaurant.\n\nThe restaurant has an air conditioner that has 3 states: off, heating, and cooling. When it's off, the restaurant's temperature remains the same. When it's heating, the temperature increases by 1 in one minute. Lastly, when it's cooling, the temperature decreases by 1 in one minute. Gildong can change the state as many times as he wants, at any integer minutes. The air conditioner is off initially.\n\nEach customer is characterized by three values: $t_i$ \u2014 the time (in minutes) when the $i$-th customer visits the restaurant, $l_i$ \u2014 the lower bound of their preferred temperature range, and $h_i$ \u2014 the upper bound of their preferred temperature range.\n\nA customer is satisfied if the temperature is within the preferred range at the instant they visit the restaurant. Formally, the $i$-th customer is satisfied if and only if the temperature is between $l_i$ and $h_i$ (inclusive) in the $t_i$-th minute.\n\nGiven the initial temperature, the list of reserved customers' visit times and their preferred temperature ranges, you're going to help him find if it's possible to satisfy all customers.\n\n\n-----Input-----\n\nEach test contains one or more test cases. The first line contains the number of test cases $q$ ($1 \\le q \\le 500$). Description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $m$ ($1 \\le n \\le 100$, $-10^9 \\le m \\le 10^9$), where $n$ is the number of reserved customers and $m$ is the initial temperature of the restaurant.\n\nNext, $n$ lines follow. The $i$-th line of them contains three integers $t_i$, $l_i$, and $h_i$ ($1 \\le t_i \\le 10^9$, $-10^9 \\le l_i \\le h_i \\le 10^9$), where $t_i$ is the time when the $i$-th customer visits, $l_i$ is the lower bound of their preferred temperature range, and $h_i$ is the upper bound of their preferred temperature range. The preferred temperature ranges are inclusive.\n\nThe customers are given in non-decreasing order of their visit time, and the current time is $0$.\n\n\n-----Output-----\n\nFor each test case, print \"YES\" if it is possible to satisfy all customers. Otherwise, print \"NO\".\n\nYou can print each letter in any case (upper or lower).\n\n\n-----Example-----\nInput\n4\n3 0\n5 1 2\n7 3 5\n10 -1 0\n2 12\n5 7 10\n10 16 20\n3 -100\n100 0 0\n100 -50 50\n200 100 100\n1 100\n99 -100 0\n\nOutput\nYES\nNO\nYES\nNO\n\n\n\n-----Note-----\n\nIn the first case, Gildong can control the air conditioner to satisfy all customers in the following way:  At $0$-th minute, change the state to heating (the temperature is 0).  At $2$-nd minute, change the state to off (the temperature is 2).  At $5$-th minute, change the state to heating (the temperature is 2, the $1$-st customer is satisfied).  At $6$-th minute, change the state to off (the temperature is 3).  At $7$-th minute, change the state to cooling (the temperature is 3, the $2$-nd customer is satisfied).  At $10$-th minute, the temperature will be 0, which satisfies the last customer. \n\nIn the third case, Gildong can change the state to heating at $0$-th minute and leave it be. Then all customers will be satisfied. Note that the $1$-st customer's visit time equals the $2$-nd customer's visit time.\n\nIn the second and the fourth case, Gildong has to make at least one customer unsatisfied.",
    "098": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven an array A of integers, return the number of (contiguous, non-empty) subarrays that have a sum divisible by K.\n\u00a0\n\nExample 1:\nInput: A = [4,5,0,-2,-3,1], K = 5\nOutput: 7\nExplanation: There are 7 subarrays with a sum divisible by K = 5:\n[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]\n\n\u00a0\nNote:\n\n1 <= A.length <= 30000\n-10000 <= A[i] <= 10000\n2 <= K <= 10000",
    "099": "Generate a code-based solution, with an explanation, for the following task or described function:\nIn this economy, we all know how hard it is to get a job. Mirko, a recent college graduate, however, got lucky \u2013 he is now employed as a runeologist by the Language Institute of Croatia. His friend Slavko believes runeology isn\u2019t a science and is hence angry at Mirko for believing the opposite. One foggy Christmas day, Mirko\u2019s laptop broke. Since he isn\u2019t great with computers, he gave it to Slavko to repair it. Slavko, feeling a little naughty, decided to mess up a particular file Mirko was working on.\n\nThis file contains a matrix of $R$ rows and $C$ columns. Each element of the matrix is a single letter. No two columns of the matrix are equal. To have some fun with pseudo-scientist Mirko, Slavko decided he will delete as many rows as possible from the top of the table, without breaking the no-equal-column rule.\n\n-----Input-----\nThe first line of input contains two integers $R$ and $C$ ($2 \\le R, C \\le 1000$), the number of rows and the number of columns, respectively.\n\nIn each of the next $R$ lines there are $C$ small letters of the English alphabet. These $R \\times C$ letters represent Mirko\u2019s table (which does not have two equal columns).\n\n-----Output-----\nOutput a single integer, the maximum number of rows which can be deleted from the top of the table so that no two columns are equal.\n\n-----Examples-----\nSample Input 1:\n2 6\ndobarz\nadatak\nSample Output 1:\n0\n\nSample Input 2:\n3 4\nalfa\nbeta\nzeta\nSample Output 2:\n2",
    "100": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\n\n\n\nFor example, given n = 3, a solution set is:\n\n\n[\n  \"((()))\",\n  \"(()())\",\n  \"(())()\",\n  \"()(())\",\n  \"()()()\"\n]",
    "101": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven an integer N, Chef wants to find the smallest positive integer M such that the bitwise XOR of M and M+1 is N. If no such M exists output -1.\n\n-----Input-----\nThe first line of input contain an integer T denoting the number of test cases. Each of the following T lines contains an integer N for that test case.\n\n-----Output-----\nFor each test case, output a single line containing the number M or -1 as described above.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 5000\n- 1 \u2264 N \u2264 230\n\n-----Example-----\nInput:\n1\n3\n\nOutput:\n1\n\n-----Explanation-----First Example :  M desired in the problem would be 1. As bitwise XOR of 1 and 2 is equal to 3.",
    "102": "Generate a code-based solution, with an explanation, for the following task or described function:\nn children are standing in a circle and playing a game. Children's numbers in clockwise order form a permutation a_1, a_2, ..., a_{n} of length n. It is an integer sequence such that each integer from 1 to n appears exactly once in it.\n\nThe game consists of m steps. On each step the current leader with index i counts out a_{i} people in clockwise order, starting from the next person. The last one to be pointed at by the leader becomes the new leader.\n\nYou are given numbers l_1, l_2, ..., l_{m} \u2014 indices of leaders in the beginning of each step. Child with number l_1 is the first leader in the game. \n\nWrite a program which will restore a possible permutation a_1, a_2, ..., a_{n}. If there are multiple solutions then print any of them. If there is no solution then print -1.\n\n\n-----Input-----\n\nThe first line contains two integer numbers n, m (1 \u2264 n, m \u2264 100).\n\nThe second line contains m integer numbers l_1, l_2, ..., l_{m} (1 \u2264 l_{i} \u2264 n) \u2014 indices of leaders in the beginning of each step.\n\n\n-----Output-----\n\nPrint such permutation of n numbers a_1, a_2, ..., a_{n} that leaders in the game will be exactly l_1, l_2, ..., l_{m} if all the rules are followed. If there are multiple solutions print any of them. \n\nIf there is no permutation which satisfies all described conditions print -1.\n\n\n-----Examples-----\nInput\n4 5\n2 3 1 4 4\n\nOutput\n3 1 2 4 \n\nInput\n3 3\n3 1 2\n\nOutput\n-1\n\n\n\n-----Note-----\n\nLet's follow leadership in the first example:   Child 2 starts.  Leadership goes from 2 to 2 + a_2 = 3.  Leadership goes from 3 to 3 + a_3 = 5. As it's greater than 4, it's going in a circle to 1.  Leadership goes from 1 to 1 + a_1 = 4.  Leadership goes from 4 to 4 + a_4 = 8. Thus in circle it still remains at 4.",
    "103": "Generate a code-based solution, with an explanation, for the following task or described function:\nBerland shop sells $n$ kinds of juices. Each juice has its price $c_i$. Each juice includes some set of vitamins in it. There are three types of vitamins: vitamin \"A\", vitamin \"B\" and vitamin \"C\". Each juice can contain one, two or all three types of vitamins in it.\n\nPetya knows that he needs all three types of vitamins to stay healthy. What is the minimum total price of juices that Petya has to buy to obtain all three vitamins? Petya obtains some vitamin if he buys at least one juice containing it and drinks it.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ $(1 \\le n \\le 1\\,000)$ \u2014 the number of juices.\n\nEach of the next $n$ lines contains an integer $c_i$ $(1 \\le c_i \\le 100\\,000)$ and a string $s_i$ \u2014 the price of the $i$-th juice and the vitamins it contains. String $s_i$ contains from $1$ to $3$ characters, and the only possible characters are \"A\", \"B\" and \"C\". It is guaranteed that each letter appears no more than once in each string $s_i$. The order of letters in strings $s_i$ is arbitrary.\n\n\n-----Output-----\n\nPrint -1 if there is no way to obtain all three vitamins. Otherwise print the minimum total price of juices that Petya has to buy to obtain all three vitamins.\n\n\n-----Examples-----\nInput\n4\n5 C\n6 B\n16 BAC\n4 A\n\nOutput\n15\n\nInput\n2\n10 AB\n15 BA\n\nOutput\n-1\n\nInput\n5\n10 A\n9 BC\n11 CA\n4 A\n5 B\n\nOutput\n13\n\nInput\n6\n100 A\n355 BCA\n150 BC\n160 AC\n180 B\n190 CA\n\nOutput\n250\n\nInput\n2\n5 BA\n11 CB\n\nOutput\n16\n\n\n\n-----Note-----\n\nIn the first example Petya buys the first, the second and the fourth juice. He spends $5 + 6 + 4 = 15$ and obtains all three vitamins. He can also buy just the third juice and obtain three vitamins, but its cost is $16$, which isn't optimal.\n\nIn the second example Petya can't obtain all three vitamins, as no juice contains vitamin \"C\".",
    "104": "Generate a code-based solution, with an explanation, for the following task or described function:\nDue to the coronavirus pandemic, city authorities obligated citizens to keep a social distance. The mayor of the city Semyon wants to light up Gluharniki park so that people could see each other even at night to keep the social distance.\n\nThe park is a rectangular table with $n$ rows and $m$ columns, where the cells of the table are squares, and the boundaries between the cells are streets. External borders are also streets. Every street has length $1$. For example, park with $n=m=2$ has $12$ streets.\n\nYou were assigned to develop a plan for lighting the park. You can put lanterns in the middle of the streets. The lamp lights two squares near it (or only one square if it stands on the border of the park).\n\n [Image] The park sizes are: $n=4$, $m=5$. The lighted squares are marked yellow. Please note that all streets have length $1$. Lanterns are placed in the middle of the streets. In the picture not all the squares are lit. \n\nSemyon wants to spend the least possible amount of money on lighting but also wants people throughout the park to keep a social distance. So he asks you to find the minimum number of lanterns that are required to light all the squares.\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of test cases in the input. Then $t$ test cases follow.\n\nEach test case is a line containing two integers $n$, $m$ ($1 \\le n, m \\le 10^4$) \u2014 park sizes.\n\n\n-----Output-----\n\nPrint $t$ answers to the test cases. Each answer must be a single integer \u2014 the minimum number of lanterns that are required to light all the squares.\n\n\n-----Example-----\nInput\n5\n1 1\n1 3\n2 2\n3 3\n5 3\n\nOutput\n1\n2\n2\n5\n8\n\n\n\n-----Note-----\n\nPossible optimal arrangement of the lanterns for the $2$-nd test case of input data example: [Image]\n\nPossible optimal arrangement of the lanterns for the $3$-rd test case of input data example: [Image]",
    "105": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.\n\nExample 1:\n\n\nInput: 1->2->3->3->4->4->5\nOutput: 1->2->5\n\n\nExample 2:\n\n\nInput: 1->1->1->2->3\nOutput: 2->3",
    "106": "Generate a code-based solution, with an explanation, for the following task or described function:\nCapitalization is writing a word with its first letter as a capital letter. Your task is to capitalize the given word.\n\nNote, that during capitalization all the letters except the first one remains unchanged.\n\n\n-----Input-----\n\nA single line contains a non-empty word. This word consists of lowercase and uppercase English letters. The length of the word will not exceed 10^3.\n\n\n-----Output-----\n\nOutput the given word after capitalization.\n\n\n-----Examples-----\nInput\nApPLe\n\nOutput\nApPLe\n\nInput\nkonjac\n\nOutput\nKonjac",
    "107": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou are given a directed acyclic graph with n vertices and m edges. There are no self-loops or multiple edges between any pair of vertices. Graph can be disconnected.\n\nYou should assign labels to all vertices in such a way that:\n\n  Labels form a valid permutation of length n \u2014 an integer sequence such that each integer from 1 to n appears exactly once in it.  If there exists an edge from vertex v to vertex u then label_{v} should be smaller than label_{u}.  Permutation should be lexicographically smallest among all suitable. \n\nFind such sequence of labels to satisfy all the conditions.\n\n\n-----Input-----\n\nThe first line contains two integer numbers n, m (2 \u2264 n \u2264 10^5, 1 \u2264 m \u2264 10^5).\n\nNext m lines contain two integer numbers v and u (1 \u2264 v, u \u2264 n, v \u2260 u) \u2014 edges of the graph. Edges are directed, graph doesn't contain loops or multiple edges.\n\n\n-----Output-----\n\nPrint n numbers \u2014 lexicographically smallest correct permutation of labels of vertices.\n\n\n-----Examples-----\nInput\n3 3\n1 2\n1 3\n3 2\n\nOutput\n1 3 2 \n\nInput\n4 5\n3 1\n4 1\n2 3\n3 4\n2 4\n\nOutput\n4 1 2 3 \n\nInput\n5 4\n3 1\n2 1\n2 3\n4 5\n\nOutput\n3 1 2 4 5",
    "108": "Generate a code-based solution, with an explanation, for the following task or described function:\nIndian National Olympiad in Informatics 2013\nN people live in Sequence Land. Instead of a name, each person is identified by a sequence of integers, called his or her id. Each id is a sequence with no duplicate elements. Two people are said to be each other\u2019s relatives if their ids have at least K elements in common. The extended family of a resident of Sequence Land includes herself or himself, all relatives, relatives of relatives, relatives of relatives of relatives, and so on without any limit.\nGiven the ids of all residents of Sequence Land, including its President, and the number K, find the number of people in the extended family of the President of Sequence Land.\nFor example, suppose N = 4 and K = 2. Suppose the President has id (4, 6, 7, 8) and the other three residents have ids (8, 3, 0, 4), (0, 10), and (1, 2, 3, 0, 5, 8). Here, the President is directly related to (8, 3, 0, 4), who in turn is directly related to (1, 2, 3, 0, 5, 8). Thus, the President\u2019s extended family consists of everyone other than (0, 10) and so has size 3.\n\n-----Input format-----\n\u2022 Line 1: Two space-separated integers, N followed by K.\n\u2022 Lines 2 to N + 1: Each line describes an id of one of the residents of Sequence Land, beginning with the President on line 2. Each line consists of an integer p, followed by p distinct integers, the id.\n\n-----Output format-----\nThe output consists of a single integer, the number of people in the extended family of the President.\n\n-----Test Data-----\nThe testdata is grouped into two subtasks. In both subtasks, 1 \u2264 N \u2264 300 and 1 \u2264 K \u2264 300. Each number in each id is between 0 and 109 inclusive.\n\u2022 Subtask 1 [30 points]: The number of elements in each id is between 1 and 10 inclusive.\n\u2022 Subtask 2 [70 points]: The number of elements in each id is between 1 and 300 inclusive.\n\n-----Example-----\nHere is the sample input and output corresponding to the example above.\n\n-----Sample input -----\n4 2\n4 4 6 7 8\n4 8 3 0 4\n2 0 10\n6 1 2 3 0 5 8\n\n-----Sample output-----\n3\n\nNote: Your program should not print anything other than what is specified in the output format. Please remove all diagnostic print statements before making your final submission. A program with extraneous output will be treated as incorrect!",
    "109": "Generate a code-based solution, with an explanation, for the following task or described function:\nFind the number of k-divisible numbers on the segment [a, b]. In other words you need to find the number of such integer values x that a \u2264 x \u2264 b and x is divisible by k.\n\n\n-----Input-----\n\nThe only line contains three space-separated integers k, a and b (1 \u2264 k \u2264 10^18; - 10^18 \u2264 a \u2264 b \u2264 10^18).\n\n\n-----Output-----\n\nPrint the required number.\n\n\n-----Examples-----\nInput\n1 1 10\n\nOutput\n10\n\nInput\n2 -4 4\n\nOutput\n5",
    "110": "Generate a code-based solution, with an explanation, for the following task or described function:\nNicholas Neverson was a student at Northlings Neverland Academy. As with any daydreaming student, Nicholas was playing around with a Kaleidoscope one day instead of paying attention to the teacher. Since this was math class, his daydreams quickly turned to palindromic numbers. A palindromic number is any number which reads the same forwards and backwards.\n\nHe describes his vision to you at lunch: numbers which are palindromic in several bases at once. Nicholas wonders how many such numbers exist. You decide you can quickly code up a program that given a range and a number $k$, outputs the number of numbers palindromic in all bases $j$, $2 \\leq j \\leq k$, in that range.\n\n-----Input-----\nInput consists of three space-separated integers: $a$, $b$, and $k$. The input satisfies the following constraints:\\[ 0 \\leq a \\leq b \\leq 2000000, \\\\ 2 \\leq k \\leq 100000. \\]\n\n-----Output-----\nOutput the quantity of numbers between $a$ and $b$ inclusive which are palindromes in every base $j$, for $2 \\leq j \\leq k$.\n\n-----Examples-----\nSample Input:\n1 356 2\nSample Output:\n36",
    "111": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou are given an array $a$ of length $n$, which initially is a permutation of numbers from $1$ to $n$. In one operation, you can choose an index $i$ ($1 \\leq i < n$) such that $a_i < a_{i + 1}$, and remove either $a_i$ or $a_{i + 1}$ from the array (after the removal, the remaining parts are concatenated). \n\nFor example, if you have the array $[1, 3, 2]$, you can choose $i = 1$ (since $a_1 = 1 < a_2 = 3$), then either remove $a_1$ which gives the new array $[3, 2]$, or remove $a_2$ which gives the new array $[1, 2]$.\n\nIs it possible to make the length of this array equal to $1$ with these operations?\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ ($1 \\leq t \\leq 2 \\cdot 10^4$) \u00a0\u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($2 \\leq n \\leq 3 \\cdot 10^5$) \u00a0\u2014 the length of the array.\n\nThe second line of each test case contains $n$ integers $a_1$, $a_2$, ..., $a_n$ ($1 \\leq a_i \\leq n$, $a_i$ are pairwise distinct)\u00a0\u2014 elements of the array.\n\nIt is guaranteed that the sum of $n$ over all test cases doesn't exceed $3 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case, output on a single line the word \"YES\" if it is possible to reduce the array to a single element using the aforementioned operation, or \"NO\" if it is impossible to do so.\n\n\n-----Example-----\nInput\n4\n3\n1 2 3\n4\n3 1 2 4\n3\n2 3 1\n6\n2 4 6 1 3 5\n\nOutput\nYES\nYES\nNO\nYES\n\n\n\n-----Note-----\n\nFor the first two test cases and the fourth test case, we can operate as follow (the bolded elements are the pair chosen for that operation):\n\n$[\\text{1}, \\textbf{2}, \\textbf{3}] \\rightarrow [\\textbf{1}, \\textbf{2}] \\rightarrow [\\text{1}]$\n\n$[\\text{3}, \\textbf{1}, \\textbf{2}, \\text{4}] \\rightarrow [\\text{3}, \\textbf{1}, \\textbf{4}] \\rightarrow [\\textbf{3}, \\textbf{4}] \\rightarrow [\\text{4}]$\n\n$[\\textbf{2}, \\textbf{4}, \\text{6}, \\text{1}, \\text{3}, \\text{5}] \\rightarrow [\\textbf{4}, \\textbf{6}, \\text{1}, \\text{3}, \\text{5}] \\rightarrow [\\text{4}, \\text{1}, \\textbf{3}, \\textbf{5}] \\rightarrow [\\text{4}, \\textbf{1}, \\textbf{5}] \\rightarrow [\\textbf{4}, \\textbf{5}] \\rightarrow [\\text{4}]$",
    "112": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou are going to hold a competition of one-to-one game called AtCoder Janken. (Janken is the Japanese name for Rock-paper-scissors.)N players will participate in this competition, and they are given distinct integers from 1 through N.\nThe arena has M playing fields for two players. You need to assign each playing field two distinct integers between 1 and N (inclusive).\nYou cannot assign the same integer to multiple playing fields.\nThe competition consists of N rounds, each of which proceeds as follows:\n - For each player, if there is a playing field that is assigned the player's integer, the player goes to that field and fight the other player who comes there.\n - Then, each player adds 1 to its integer. If it becomes N+1, change it to 1.\nYou want to ensure that no player fights the same opponent more than once during the N rounds.\nPrint an assignment of integers to the playing fields satisfying this condition.\nIt can be proved that such an assignment always exists under the constraints given.\n\n-----Constraints-----\n - 1 \\leq M\n - M \\times 2 +1 \\leq N \\leq 200000\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\n\n-----Output-----\nPrint M lines in the format below.\nThe i-th line should contain the two integers a_i and b_i assigned to the i-th playing field.\na_1 b_1\na_2 b_2\n:\na_M b_M\n\n-----Sample Input-----\n4 1\n\n-----Sample Output-----\n2 3\n\nLet us call the four players A, B, C, and D, and assume that they are initially given the integers 1, 2, 3, and 4, respectively.\n - The 1-st round is fought by B and C, who has the integers 2 and 3, respectively. After this round, A, B, C, and D have the integers 2, 3, 4, and 1, respectively.\n - The 2-nd round is fought by A and B, who has the integers 2 and 3, respectively. After this round, A, B, C, and D have the integers 3, 4, 1, and 2, respectively.\n - The 3-rd round is fought by D and A, who has the integers 2 and 3, respectively. After this round, A, B, C, and D have the integers 4, 1, 2, and 3, respectively.\n - The 4-th round is fought by C and D, who has the integers 2 and 3, respectively. After this round, A, B, C, and D have the integers 1, 2, 3, and 4, respectively.\nNo player fights the same opponent more than once during the four rounds, so this solution will be accepted.",
    "113": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven the array nums consisting of n positive integers. You computed the sum of all non-empty continous subarrays from\u00a0the array and then sort them in non-decreasing order, creating a new array of n * (n + 1) / 2\u00a0numbers.\nReturn the sum of the numbers from index left to index right (indexed from 1), inclusive, in the\u00a0new array.\u00a0Since the answer can be a huge number return it modulo 10^9 + 7.\n\u00a0\nExample 1:\nInput: nums = [1,2,3,4], n = 4, left = 1, right = 5\nOutput: 13 \nExplanation: All subarray sums are 1, 3, 6, 10, 2, 5, 9, 3, 7, 4. After sorting them in non-decreasing order we have the new array [1, 2, 3, 3, 4, 5, 6, 7, 9, 10]. The sum of the numbers from index le = 1 to ri = 5 is 1 + 2 + 3 + 3 + 4 = 13. \n\nExample 2:\nInput: nums = [1,2,3,4], n = 4, left = 3, right = 4\nOutput: 6\nExplanation: The given array is the same as example 1. We have the new array [1, 2, 3, 3, 4, 5, 6, 7, 9, 10]. The sum of the numbers from index le = 3 to ri = 4 is 3 + 3 = 6.\n\nExample 3:\nInput: nums = [1,2,3,4], n = 4, left = 1, right = 10\nOutput: 50\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 10^3\nnums.length == n\n1 <= nums[i] <= 100\n1 <= left <= right\u00a0<= n * (n + 1) / 2",
    "114": "Generate a code-based solution, with an explanation, for the following task or described function:\nWatson gives to Sherlock two strings S1 and S2 consisting of uppercase English alphabets. Next he wants Sherlock to build a flower in the following way:\n\nHe puts both strings perpendicular to each other in such a way that they overlap at the same character. For example, if he has two strings \"ABCDEF\" and \"XXBCZQ\", one possible way to make a flower is:\n\nLength of petals in the above flower are 2, 2, 3 and 3.\nA flower's ugliness is sum of absolute difference of adjacent petal lengths i.e. i.e. if adjacent petal lengths are L1, L2, L3, L4, then ugliness of flower is |L1 - L2| + |L2 - L3| + |L3 - L4| + |L4 - L1|. \nSherlock wants to find minimum value of ugliness if we consider all possible flower configurations. Note that a configuration is valid even if any of the petal length is 0.\n\n-----Input-----\nFirst line contains T, number of test cases. Each test case consists of string S1 in one line followed by string S2 in the next line. It is guaranteed that there exists at least one possible way to make a flower.\n\n-----Output-----\nFor each test case, output in one line the required answer.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n- 1 \u2264 length(S1), length(S2) \u2264 105\n\n-----Example-----\nInput:\n2\nABCDE\nXXBCZQ\nBBB\nBBBBBB\n\nOutput: \n2\n6\n\n-----Explanation-----\n\nTest case 1:\n\nIf we keep the configuration shown in statement, the ugliness is 2, which is minimum possible.\n\nTest case 2:\n\nOne of the best configurations is\n\nB \nB B B  B  B B\nB\n\nwhere petal lengths are 1, 3, 1, 2.",
    "115": "Generate a code-based solution, with an explanation, for the following task or described function:\nThis year in Equestria was a year of plenty, so Applejack has decided to build some new apple storages. According to the advice of the farm designers, she chose to build two storages with non-zero area: one in the shape of a square and another one in the shape of a rectangle (which possibly can be a square as well).\n\nApplejack will build the storages using planks, she is going to spend exactly one plank on each side of the storage. She can get planks from her friend's company. Initially, the company storehouse has $n$ planks, Applejack knows their lengths. The company keeps working so it receives orders and orders the planks itself. Applejack's friend can provide her with information about each operation. For convenience, he will give her information according to the following format:\n\n  $+$ $x$: the storehouse received a plank with length $x$  $-$ $x$: one plank with length $x$ was removed from the storehouse (it is guaranteed that the storehouse had some planks with length $x$). \n\nApplejack is still unsure about when she is going to order the planks so she wants to know if she can order the planks to build rectangular and square storages out of them after every event at the storehouse. Applejack is busy collecting apples and she has completely no time to do the calculations so she asked you for help!\n\nWe remind you that all four sides of a square are equal, and a rectangle has two pairs of equal sides.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 10^5$): the initial amount of planks at the company's storehouse, the second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\le a_i \\le 10^5$): the lengths of the planks.\n\nThe third line contains a single integer $q$ ($1 \\le q \\le 10^5$): the number of events in the company. Each of the next $q$ lines contains a description of the events in a given format: the type of the event (a symbol $+$ or $-$) is given first, then goes the integer $x$ ($1 \\le x \\le 10^5$).\n\n\n-----Output-----\n\nAfter every event in the company, print \"YES\" if two storages of the required shape can be built from the planks of that company's set, and print \"NO\" otherwise. You can print each letter in any case (upper or lower).\n\n\n-----Example-----\nInput\n6\n1 1 1 2 1 1\n6\n+ 2\n+ 1\n- 1\n+ 2\n- 1\n+ 2\n\nOutput\nNO\nYES\nNO\nNO\nNO\nYES\n\n\n\n-----Note-----\n\nAfter the second event Applejack can build a rectangular storage using planks with lengths $1$, $2$, $1$, $2$ and a square storage using planks with lengths $1$, $1$, $1$, $1$.\n\nAfter the sixth event Applejack can build a rectangular storage using planks with lengths $2$, $2$, $2$, $2$ and a square storage using planks with lengths $1$, $1$, $1$, $1$.",
    "116": "Generate a code-based solution, with an explanation, for the following task or described function:\nMike and some bears are playing a game just for fun. Mike is the judge. All bears except Mike are standing in an n \u00d7 m grid, there's exactly one bear in each cell. We denote the bear standing in column number j of row number i by (i, j). Mike's hands are on his ears (since he's the judge) and each bear standing in the grid has hands either on his mouth or his eyes. [Image] \n\nThey play for q rounds. In each round, Mike chooses a bear (i, j) and tells him to change his state i. e. if his hands are on his mouth, then he'll put his hands on his eyes or he'll put his hands on his mouth otherwise. After that, Mike wants to know the score of the bears.\n\nScore of the bears is the maximum over all rows of number of consecutive bears with hands on their eyes in that row.\n\nSince bears are lazy, Mike asked you for help. For each round, tell him the score of these bears after changing the state of a bear selected in that round. \n\n\n-----Input-----\n\nThe first line of input contains three integers n, m and q (1 \u2264 n, m \u2264 500 and 1 \u2264 q \u2264 5000).\n\nThe next n lines contain the grid description. There are m integers separated by spaces in each line. Each of these numbers is either 0 (for mouth) or 1 (for eyes).\n\nThe next q lines contain the information about the rounds. Each of them contains two integers i and j (1 \u2264 i \u2264 n and 1 \u2264 j \u2264 m), the row number and the column number of the bear changing his state.\n\n\n-----Output-----\n\nAfter each round, print the current score of the bears.\n\n\n-----Examples-----\nInput\n5 4 5\n0 1 1 0\n1 0 0 1\n0 1 1 0\n1 0 0 1\n0 0 0 0\n1 1\n1 4\n1 1\n4 2\n4 3\n\nOutput\n3\n4\n3\n3\n4",
    "117": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven an integer array nums, return the sum of divisors of the integers in that array that have exactly four divisors.\nIf there is no such integer in the array, return 0.\n\u00a0\nExample 1:\nInput: nums = [21,4,7]\nOutput: 32\nExplanation:\n21 has 4 divisors: 1, 3, 7, 21\n4 has 3 divisors: 1, 2, 4\n7 has 2 divisors: 1, 7\nThe answer is the sum of divisors of 21 only.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 10^4\n1 <= nums[i] <= 10^5",
    "118": "Generate a code-based solution, with an explanation, for the following task or described function:\nA magic island Geraldion, where Gerald lives, has its own currency system. It uses banknotes of several values. But the problem is, the system is not perfect and sometimes it happens that Geraldionians cannot express a certain sum of money with any set of banknotes. Of course, they can use any number of banknotes of each value. Such sum is called unfortunate. Gerald wondered: what is the minimum unfortunate sum?\n\n\n-----Input-----\n\nThe first line contains number n (1 \u2264 n \u2264 1000) \u2014 the number of values of the banknotes that used in Geraldion. \n\nThe second line contains n distinct space-separated numbers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^6) \u2014 the values of the banknotes.\n\n\n-----Output-----\n\nPrint a single line \u2014 the minimum unfortunate sum. If there are no unfortunate sums, print  - 1.\n\n\n-----Examples-----\nInput\n5\n1 2 3 4 5\n\nOutput\n-1",
    "119": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou know that Japan is the country with almost the largest 'electronic devices per person' ratio. So you might be quite surprised to find out that the primary school in Japan teaches to count using a Soroban \u2014 an abacus developed in Japan. This phenomenon has its reasons, of course, but we are not going to speak about them. Let's have a look at the Soroban's construction. [Image] \n\nSoroban consists of some number of rods, each rod contains five beads. We will assume that the rods are horizontal lines. One bead on each rod (the leftmost one) is divided from the others by a bar (the reckoning bar). This single bead is called go-dama and four others are ichi-damas. Each rod is responsible for representing a single digit from 0 to 9. We can obtain the value of a digit by following simple algorithm:  Set the value of a digit equal to 0.  If the go-dama is shifted to the right, add 5.  Add the number of ichi-damas shifted to the left. \n\nThus, the upper rod on the picture shows digit 0, the middle one shows digit 2 and the lower one shows 7. We will consider the top rod to represent the last decimal digit of a number, so the picture shows number 720.\n\nWrite the program that prints the way Soroban shows the given number n.\n\n\n-----Input-----\n\nThe first line contains a single integer n (0 \u2264 n < 10^9).\n\n\n-----Output-----\n\nPrint the description of the decimal digits of number n from the last one to the first one (as mentioned on the picture in the statement), one per line. Print the beads as large English letters 'O', rod pieces as character '-' and the reckoning bar as '|'. Print as many rods, as many digits are in the decimal representation of number n without leading zeroes. We can assume that number 0 has no leading zeroes.\n\n\n-----Examples-----\nInput\n2\n\nOutput\nO-|OO-OO\n\nInput\n13\n\nOutput\nO-|OOO-O\nO-|O-OOO\n\nInput\n720\n\nOutput\nO-|-OOOO\nO-|OO-OO\n-O|OO-OO",
    "120": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou are playing following game: given an array A of N natural numbers. All numbers in the array A are at most M. On every turn you may pick any two different elements Ai and Aj (i\u2260j), such that Ai, Aj \u2264 M, and add K to both. The game ends when you are not able to continue. That is, when there is no pair (i,j) left such that both of them are less than equal to M.\n\nLet's call two arrays different if the sum of all their elements is different. When the game ends, you note down the final array A. How many different final arrays can you have.\n\n-----Input-----\n\nThe first line contains three integers N, M and K. N elements of the array follow in the next line.\n\n-----Output-----\n\nOutput single integer - answer for the given problem modulo 109+7.\n\n\n-----Constraints-----\n-  1 \u2264 N \u2264 105\n-  1 \u2264 M,K \u2264 1012\n-  1 \u2264 Ai \u2264 M\n\n-----Example-----\nInput:\n3 3 2\n1 2 3\nOutput:\n2\n\n-----Explanation-----\n\nAll possible sums are 14 and 10. You can get them by, for example, these arrays:\nA=(5, 4, 5),\nA=(1, 4, 5)\n\nThe above arrays are different because their sums are different.",
    "121": "Generate a code-based solution, with an explanation, for the following task or described function:\nThe kingdom of the snakes is an NxN grid. Their most-valued possession is a huge collection of poison, which is stored in the central KxK grid. It is guaranteed that both N and K are odd. What we mean by 'central' is this: suppose in the NxN grid, (i, j) refers to the cell in the i-th row and j-th column and (1,1) refers to the top-left corner and (N,N) refers to the bottom-right corner. Then the poison is stored in the KxK square whose top-left corner is ( (N - K)/2 + 1, (N - K)/2 + 1 ).\n\nBut there are thieves who want to steal the poison. They cannot enter the NxN grid, but they can shoot arrows from outside. These arrows travel across a row (from left to right, or right to left), or across a column (top to bottom or bottom to top) in a straight line. If the arrow enters the KxK grid, some of the poison will stick to the arrow, and if it exits the NxN grid after that, the thieves will have successfully stolen some of the poison.\nAs the King of the snakes, you want to thwart these attempts. You know that the arrows will break and stop if they hit a snake's scaly skin, but won't hurt the snakes. There are some snakes already guarding the poison. Each snake occupies some consecutive cells in a straight line inside the NxN grid. That is, they are either part of a row, or part of a column. Note that there can be intersections between the snakes.  A configuration of snakes is 'safe', if the thieves cannot steal poison. That is, no matter which row or column they shoot arrows from, either the arrow should hit a snake and stop (this can happen even after it has entered and exited the KxK grid), or it shouldn't ever enter the KxK grid.\nThe King has other duties for the snakes, and hence wants to remove as many snakes as possible from this configuration, such that the remaining configuration is still 'safe'. Help him find the minimum number of snakes he needs to leave behind to protect the poison.\n\n-----Input-----\n- The first line contains a single integer, T, the number of testcases.\n- The first line of each testcase contains three integers: N, K and M, where N is the size of the entire square grid, K is the size of the square containing the poison, and M is the number of initial snakes.\n- M lines follow, the i-th of which contains four integers: HXi, HYi, TXi, TYi. (HXi, HYi) is the cell which contains the head of the i-th snake. (TXi, TYi) is the cell which contains the tail of the i-th snake. It is guaranteed that both these cells will either lie in the same row, or same column. And hence the cells in between them, including these two cells, represents the i-th snake.\n\n-----Output-----\n- For each testcase, output a single integer in a new line: The minimum number of the snakes that the king can keep and still protect the poison. If it is not possible to protect the poison even with all the snakes, output -1.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 4\n- 3 \u2264 N \u2264 109\n- 1 \u2264 K \u2264 N-2\n- Both N and K will be odd integers\n- 1 \u2264 M \u2264 105\n- 1 \u2264 HXi, HYi, TXi, TYi \u2264 N\n- It is guaranteed that at least one of (HXi = TXi), and (HYi = TYi) will be true for all i\n- None of the cells in the KxK grid will be occupied by any snake\n\n-----Example-----\nInput:\n2\n7 3 7\n1 1 6 1\n1 2 3 2\n5 2 5 2\n2 4 2 6\n6 2 6 4\n5 6 5 7\n7 1 7 4\n7 3 7\n1 1 6 1\n1 2 3 2\n5 2 5 2\n2 6 2 6\n6 2 6 4\n5 6 5 7\n7 1 7 4\n\nOutput:\n3\n-1\n\n-----Explanation-----\nThe first example corresponds to:\n\nNote that the top-left corner cell of the NxN grid is by definition, (1,1). The inner square contains the poison, and the seven snakes are shown in different colours. The green snake is the 1st snake in the input.\nWe can remove all but 3 snakes and protect the poison. One such configuration is this:\n\nYou can check that no arrow can enter the inner poison square and exit the outer square without hitting a snake. Hence is it safe. Also, you cannot do this with fewer snakes. Hence 3 is the answer.\nThe second testcase corresponds to:\n\nYou can check that even with all the snakes, this is not a safe configuration, because the thieves can shoot an arrow down the 5th column, and they can steal poison. Hence, the answer is -1.",
    "122": "Generate a code-based solution, with an explanation, for the following task or described function:\nChef is playing with an expression which consists of integer operands and the following binary\nBitwise operators -  AND, OR and XOR. He is trying to figure out that what could be the Maximum possible answer of the expression, given that he can perform the operation in any order i.e not necessarily follow the rule of Precedence of operators while evaluating the expression.\nAfter some time of consistent work Chef starts feeling exhausted and wants you to automate this process for him. Can you help him out?\nThe expression has Bitwise operators in symbol format:\n- &  stands for AND \n- |   stands for OR\n- ^   stands for XOR\nNOTE : It is guaranteed that the expression will always be valid, also each OPERATOR will always be preceded and succeeded by an OPERAND.\n\n-----Input:-----\n- The first line of input contains a single integer $T$ denoting the number of test cases.\n- The only line of input for each test case is a $string$ which is the Chef's expression to evaluate.\n\n-----Output:-----\nFor each test case print a single integer i.e the maximum possible value of Chef's expression.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$.\n- The number of OPERATORS in the expression will be atleast 1 and atmost 10.\n- Each OPERAND may range from 0 to $10^9$.\n\n-----Subtasks-----\n- 10 points : The number of OPERATORS in the expression will be atmost 5.\n- 20 points : The number of OPERATORS in the expression will be atmost 8.\n- 70 points : Original constraints.\n\n-----Sample Input:-----\n2\n3^40|10^2\n\n92^95|56&2&3\n\n-----Sample Output:-----\n43\n\n95\n\n-----EXPLANATION:-----CASE 2 :\n- If we first compute (56 & 2), the expression becomes 92^95|0&3, since (56 & 2) yields $0$.\n- Now on computing (95 | 0), the expression becomes 92^95&3.\n- Further on computing (95 & 3), the expression becomes 92^3.\n- Finally (92 ^ 3) yields 95, which is the maximum value of the expression.",
    "123": "Generate a code-based solution, with an explanation, for the following task or described function:\nTwo sisters, A and B, play the piano every day. During the day, they can play in any order. That is, A might play first and then B, or it could be B first and then A. But each one of them plays the piano exactly once per day. They maintain a common log, in which they write their name whenever they play.\nYou are given the entries of the log, but you're not sure if it has been tampered with or not. Your task is to figure out whether these entries could be valid or not.\n\n-----Input-----\n- The first line of the input contains an integer $T$ denoting the number of test cases. The description of the test cases follows.\n- The first line of each test case contains a string $s$ denoting the entries of the log.\n\n-----Output-----\n- For each test case, output yes or no according to the answer to the problem.\n\n-----Constraints-----\n- $1 \\le T \\le 500$\n- $2 \\le |s| \\le 100$\n- $|s|$ is even\n- Each character of $s$ is either 'A' or 'B'\n\n-----Example Input-----\n4\nAB\nABBA\nABAABB\nAA\n\n-----Example Output-----\nyes\nyes\nno\nno\n\n-----Explanation-----\nTestcase 1: There is only one day, and both A and B have played exactly once. So this is a valid log. Hence 'yes'.\nTestcase 2: On the first day, A has played before B, and on the second day, B has played first. Hence, this is also a valid log.\nTestcase 3: On the first day, A played before B, but on the second day, A seems to have played twice. This cannot happen, and hence this is 'no'.",
    "124": "Generate a code-based solution, with an explanation, for the following task or described function:\nIf Give an integer N . Write a program to obtain the sum of the first and last digits of this number.\n\n-----Input-----\n\nThe first line contains an integer T, the total number of test cases. Then follow T lines, each line contains an integer N. \n\n-----Output-----\nFor each test case, display the sum of first and last digits of N in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 N \u2264 1000000\n\n-----Example-----\nInput\n3 \n1234\n124894\n242323\n\nOutput\n5\n5\n5",
    "125": "Generate a code-based solution, with an explanation, for the following task or described function:\nLots of geeky customers visit our chef's restaurant everyday. So, when asked to fill the feedback form, these customers represent the feedback using a binary string (i.e a string that contains only characters '0' and '1'. \n\nNow since chef is not that great in deciphering binary strings, he has decided the following criteria to classify the feedback as Good or Bad : \n\nIf the string contains the substring \"010\" or \"101\", then the feedback is Good, else it is Bad. Note that, to be Good it is not necessary to have both of them as substring.\n\nSo given some binary strings, you need to output whether according to the chef, the strings are Good or Bad. \n\n-----Input-----\nThe first line contains an integer T denoting the number of feedbacks. Each of the next T lines contains a string composed of only '0'  and '1'.\n\n-----Output-----\nFor every test case, print in a single line Good or Bad as per the Chef's method of classification.\n\n-----Constraints-----\n-  1 \u2264  T \u2264   100 \n-  1  \u2264  |S|   \u2264  105 \n\nSum of length of all strings in one test file will not exceed 6*106.\n\n-----Example-----\nInput:\n2\n11111110\n10101010101010\n\nOutput:\nBad\nGood\n\n-----Explanation-----\nExample case 1.\n\nThe string doesn't contain 010 or 101 as substrings.\n\nExample case 2.\n\nThe string contains both 010 and 101 as substrings.",
    "126": "Generate a code-based solution, with an explanation, for the following task or described function:\nThe R1 company wants to hold a web search championship. There were n computers given for the competition, each of them is connected to the Internet. The organizers believe that the data transfer speed directly affects the result. The higher the speed of the Internet is, the faster the participant will find the necessary information. Therefore, before the competition started, each computer had its maximum possible data transfer speed measured. On the i-th computer it was a_{i} kilobits per second.\n\nThere will be k participants competing in the championship, each should get a separate computer. The organizing company does not want any of the participants to have an advantage over the others, so they want to provide the same data transfer speed to each participant's computer. Also, the organizers want to create the most comfortable conditions for the participants, so the data transfer speed on the participants' computers should be as large as possible.\n\nThe network settings of the R1 company has a special option that lets you to cut the initial maximum data transfer speed of any computer to any lower speed. How should the R1 company configure the network using the described option so that at least k of n computers had the same data transfer speed and the data transfer speed on these computers was as large as possible?\n\n\n-----Input-----\n\nThe first line contains two space-separated integers n and k (1 \u2264 k \u2264 n \u2264 100) \u2014 the number of computers and the number of participants, respectively. In the second line you have a space-separated sequence consisting of n integers: a_1, a_2, ..., a_{n} (16 \u2264 a_{i} \u2264 32768); number a_{i} denotes the maximum data transfer speed on the i-th computer.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the maximum Internet speed value. It is guaranteed that the answer to the problem is always an integer.\n\n\n-----Examples-----\nInput\n3 2\n40 20 30\n\nOutput\n30\n\nInput\n6 4\n100 20 40 20 50 50\n\nOutput\n40\n\n\n\n-----Note-----\n\nIn the first test case the organizers can cut the first computer's speed to 30 kilobits. Then two computers (the first and the third one) will have the same speed of 30 kilobits. They should be used as the participants' computers. This answer is optimal.",
    "127": "Generate a code-based solution, with an explanation, for the following task or described function:\nA bracket sequence is a string that is one of the following:\n - An empty string;\n - The concatenation of (, A, and ) in this order, for some bracket sequence A ;\n - The concatenation of A and B in this order, for some non-empty bracket sequences A and B /\nGiven are N strings S_i. Can a bracket sequence be formed by concatenating all the N strings in some order?\n\n-----Constraints-----\n - 1 \\leq N \\leq 10^6\n - The total length of the strings S_i is at most 10^6.\n - S_i is a non-empty string consisting of ( and ).\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nS_1\n:\nS_N\n\n-----Output-----\nIf a bracket sequence can be formed by concatenating all the N strings in some order, print Yes; otherwise, print No.\n\n-----Sample Input-----\n2\n)\n(()\n\n-----Sample Output-----\nYes\n\nConcatenating (() and ) in this order forms a bracket sequence.",
    "128": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou have an array a[1], a[2], ..., a[n], containing distinct integers from 1 to n. Your task is to sort this array in increasing order with the following operation (you may need to apply it multiple times):\n\n  choose two indexes, i and j (1 \u2264 i < j \u2264 n; (j - i + 1) is a prime number);  swap the elements on positions i and j; in other words, you are allowed to apply the following sequence of assignments: tmp = a[i], a[i] = a[j], a[j] = tmp (tmp is a temporary variable). \n\nYou do not need to minimize the number of used operations. However, you need to make sure that there are at most 5n operations.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^5). The next line contains n distinct integers a[1], a[2], ..., a[n] (1 \u2264 a[i] \u2264 n).\n\n\n-----Output-----\n\nIn the first line, print integer k (0 \u2264 k \u2264 5n) \u2014 the number of used operations. Next, print the operations. Each operation must be printed as \"i j\" (1 \u2264 i < j \u2264 n; (j - i + 1) is a prime).\n\nIf there are multiple answers, you can print any of them.\n\n\n-----Examples-----\nInput\n3\n3 2 1\n\nOutput\n1\n1 3\n\nInput\n2\n1 2\n\nOutput\n0\n\nInput\n4\n4 2 3 1\n\nOutput\n3\n2 4\n1 2\n2 4",
    "129": "Generate a code-based solution, with an explanation, for the following task or described function:\nA molecule consists of atoms that are held together by chemical bonds. Each bond links two atoms together. Each atom may be linked to multiple other atoms, each with a separate chemical bond. All atoms in a molecule are connected to each other via chemical bonds, directly or indirectly.\n\nThe chemical properties of a molecule is determined by not only how pairs of atoms are connected by chemical bonds, but also the physical locations of the atoms within the molecule. Chemical bonds can pull atoms toward each other, so it is sometimes difficult to determine the location of the atoms given the complex interactions of all the chemical bonds in a molecule.\n\nYou are given the description of a molecule. Each chemical bond connects two distinct atoms, and there is at most one bond between each pair of atoms. The coordinates of some of the atoms are known and fixed, and the remaining atoms naturally move to the locations such that each atom is at the average of the locations of the connected neighboring atoms via chemical bonds. For simplicity, the atoms in the molecule are on the Cartesian $xy$-plane.\n\n-----Input-----\nThe first line of input consists of two integers $n$ ($2 \\leq n \\leq 100$), the number of atoms, and $m$ ($n-1 \\leq m \\leq \\frac{n(n-1)}{2}$), the number of chemical bonds.\n\nThe next $n$ lines describe the location of the atoms. The $i^\\textrm {th}$ of which contains two integers $x, y$ ($0 \\leq x,y \\leq 1000$ or $x = y = -1$), which are the $x$ and $y$ coordinates of the $i^\\textrm {th}$ atom. If both coordinates are $-1$, however, the location of this atom is not known.\n\nThe next $m$ lines describe the chemical bonds. The $i^\\textrm {th}$ of which contains two integers $a$ and $b$ ($1 \\leq a < b \\leq n$) indicating that there is a chemical bond between atom $a$ and atom $b$.\n\nIt is guaranteed that at least one atom has its location fixed.\n\n-----Output-----\nDisplay $n$ lines that describe the final location of each atom. Specifically, on the $i^\\textrm {th}$ such line, display two numbers $x$ and $y$, the final coordinates of the $i^\\textrm {th}$ atom. If there are multiple solutions, any of them is accepted. A solution is accepted if the coordinates of each unknown atom and the average coordinates of all its neighboring atoms via chemical bonds differ by at most $10^{-3}$. Note that it is acceptable for multiple atoms to share the same coordinates.\n\n-----Examples-----\nSample Input 1:\n3 2\n0 0\n-1 -1\n2 0\n1 2\n2 3\nSample Output 1:\n0 0\n1 0\n2 0\n\nSample Input 2:\n5 4\n0 0\n-1 -1\n-1 -1\n-1 -1\n4 0\n1 2\n2 3\n3 4\n4 5\nSample Output 2:\n0 0\n1 0\n2 0\n3 0\n4 0",
    "130": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou received a notebook which is called Death Note. This notebook has infinite number of pages. A rule is written on the last page (huh) of this notebook. It says: \"You have to write names in this notebook during $n$ consecutive days. During the $i$-th day you have to write exactly $a_i$ names.\". You got scared (of course you got scared, who wouldn't get scared if he just receive a notebook which is named Death Note with a some strange rule written in it?).\n\nOf course, you decided to follow this rule. When you calmed down, you came up with a strategy how you will write names in the notebook. You have calculated that each page of the notebook can contain exactly $m$ names. You will start writing names from the first page. You will write names on the current page as long as the limit on the number of names on this page is not exceeded. When the current page is over, you turn the page. Note that you always turn the page when it ends, it doesn't matter if it is the last day or not. If after some day the current page still can hold at least one name, during the next day you will continue writing the names from the current page.\n\nNow you are interested in the following question: how many times will you turn the page during each day? You are interested in the number of pages you will turn each day from $1$ to $n$.\n\n\n-----Input-----\n\nThe first line of the input contains two integers $n$, $m$ ($1 \\le n \\le 2 \\cdot 10^5$, $1 \\le m \\le 10^9$) \u2014 the number of days you will write names in the notebook and the number of names which can be written on each page of the notebook.\n\nThe second line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$), where $a_i$ means the number of names you will write in the notebook during the $i$-th day.\n\n\n-----Output-----\n\nPrint exactly $n$ integers $t_1, t_2, \\dots, t_n$, where $t_i$ is the number of times you will turn the page during the $i$-th day.\n\n\n-----Examples-----\nInput\n3 5\n3 7 9\n\nOutput\n0 2 1 \n\nInput\n4 20\n10 9 19 2\n\nOutput\n0 0 1 1 \n\nInput\n1 100\n99\n\nOutput\n0 \n\n\n\n-----Note-----\n\nIn the first example pages of the Death Note will look like this $[1, 1, 1, 2, 2], [2, 2, 2, 2, 2], [3, 3, 3, 3, 3], [3, 3, 3, 3]$. Each number of the array describes during which day name on the corresponding position will be written. It is easy to see that you should turn the first and the second page during the second day and the third page during the third day.",
    "131": "Generate a code-based solution, with an explanation, for the following task or described function:\nRedDreamer has an array $a$ consisting of $n$ non-negative integers, and an unlucky integer $T$.\n\nLet's denote the misfortune of array $b$ having length $m$ as $f(b)$ \u2014 the number of pairs of integers $(i, j)$ such that $1 \\le i < j \\le m$ and $b_i + b_j = T$. RedDreamer has to paint each element of $a$ into one of two colors, white and black (for each element, the color is chosen independently), and then create two arrays $c$ and $d$ so that all white elements belong to $c$, and all black elements belong to $d$ (it is possible that one of these two arrays becomes empty). RedDreamer wants to paint the elements in such a way that $f(c) + f(d)$ is minimum possible.\n\nFor example:\n\n  if $n = 6$, $T = 7$ and $a = [1, 2, 3, 4, 5, 6]$, it is possible to paint the $1$-st, the $4$-th and the $5$-th elements white, and all other elements black. So $c = [1, 4, 5]$, $d = [2, 3, 6]$, and $f(c) + f(d) = 0 + 0 = 0$;  if $n = 3$, $T = 6$ and $a = [3, 3, 3]$, it is possible to paint the $1$-st element white, and all other elements black. So $c = [3]$, $d = [3, 3]$, and $f(c) + f(d) = 0 + 1 = 1$. \n\nHelp RedDreamer to paint the array optimally!\n\n\n-----Input-----\n\nThe first line contains one integer $t$ ($1 \\le t \\le 1000$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe first line of each test case contains two integers $n$ and $T$ ($1 \\le n \\le 10^5$, $0 \\le T \\le 10^9$) \u2014 the number of elements in the array and the unlucky integer, respectively. \n\nThe second line contains $n$ integers $a_1$, $a_2$, ..., $a_n$ ($0 \\le a_i \\le 10^9$) \u2014 the elements of the array. \n\nThe sum of $n$ over all test cases does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case print $n$ integers: $p_1$, $p_2$, ..., $p_n$ (each $p_i$ is either $0$ or $1$) denoting the colors. If $p_i$ is $0$, then $a_i$ is white and belongs to the array $c$, otherwise it is black and belongs to the array $d$.\n\nIf there are multiple answers that minimize the value of $f(c) + f(d)$, print any of them.\n\n\n-----Example-----\nInput\n2\n6 7\n1 2 3 4 5 6\n3 6\n3 3 3\n\nOutput\n1 0 0 1 1 0 \n1 0 0",
    "132": "Generate a code-based solution, with an explanation, for the following task or described function:\nDue to COVID19 all employees of chemical factory are quarantined in home. So, company is organized by automated robots. There are $N$ Containers in company, which are labelled with $1$ to $N$ numbers. There are Total $N$ robots in Company, which are labelled $1$ to $N$. \nEach Robot adds $1$ litter Chemical in containers whose labels are multiple of robots\u2019 label. (E.g. robot labelled 2 will add Chemical in containers labelled 2, 4, 6, \u2026.). \nRobots follow few rules mentioned below:\n- Chemical with $pH<7$ is acidic.\n- Chemical with $pH=7$ is neutral.\n- Chemical with $pH>7$ is basic.\n- Mixture of $1$ litter acid and $1$ litter base makes neutral solution.\n- If Container is empty or pH of Chemical in container is equal to \n- $7$ then robot adds $1$ litter acidic Chemical.\n- If pH of Chemical in container is less than $7$ then robots adds $1$ litter basic Chemical.\nNow Chemical is packed in $4$ ways:\n- Containers with exactly $2$ litter acid and $1$ litter base are packed at $P1$ cost. \n- Containers with acidic Chemical are packed at $P2$ cost. (Here Don\u2019t consider containers with exactly $2$ litter acid and $1$ litter base as we counted them in above rule)\n- Containers with $pH=7$ Chemical is packed at $P3$ cost.\n- Containers with Basic Chemical are packed at $P4$ cost.\nNow $1$ employee given task to find packing cost of containers with labels in range $[ k1, k2]$ (Inclusive). Help him out. As Cost can be large find cost in modulo of $100000007$\n\n-----Input:-----\n- The first line of the input contains a single integer T denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains $3$ space separated Integers $N$, $K1$ and $K2$.\n- The second and last line contains $4$ space separated Integers $P1$, $P2$, $P3$ and $P4$\n\n-----Output:-----\nFor each test case, print total cost of packing of containers modulo 100000007.\n\n-----Constraints-----\n- $1 \\leq T \\leq 50000$\n- $1 \\leq P1, P2, P3, P4 \\leq 2*10^7$\n- $2 \\leq N \\leq 2*10^7$\n- $1 \\leq K1, K2 \\leq N$\n\n-----Subtasks-----Subtask #1 (20 points):\n- $1 \\leq T \\leq 10$\n- $1 \\leq P1, P2, P3, P4 \\leq 2*10^7$\n- $2 \\leq N \\leq 1000$\n- $1 \\leq K1, K2 \\leq N$Subtask #2 (80 points) :\n- Original Constraint\n\n-----Sample Input:-----\n1\n4 1 4\n2 2 2 2\n\n-----Sample Output:-----\n8\n\n-----Explanation:-----\nLet\u2019s use notation, \n0 for acidic Chemical, \n1 for Chemical with pH=7, \n2 for basic Chemical,\n3 for Containers with exactly 2 litter acid and 1 litter base,\n-1 for empty containers\nInitially 4 containers are empty so\n[-1, -1, -1, -1]\nRobot 1 adds 1 litter acid in all containers.\n[0, 0, 0, 0]\nRobot 2 adds base in containers labelled 2, 4\n[0, 1, 0, 1]\nRobot 3 adds base in containers labelled 3\n[0, 1, 1, 1]\nRobot 4 adds acid in containers labelled 4 because it contains Chemical with pH=7. After adding acid, it also contains exactly 2 litter acid and 1 litter base, so denoting it with 3.\n[0, 1, 1, 3]\nCorresponding cost of packing container\n[P2, P3, P3, P1]\nNow, calculate total cost,\nCost = P2+P3+P3+P1 = 2+2+2+2 = 8",
    "133": "Generate a code-based solution, with an explanation, for the following task or described function:\nAnton's favourite geometric figures are regular polyhedrons. Note that there are five kinds of regular polyhedrons: \n\n  Tetrahedron. Tetrahedron has 4 triangular faces.  Cube. Cube has 6 square faces.  Octahedron. Octahedron has 8 triangular faces.  Dodecahedron. Dodecahedron has 12 pentagonal faces.  Icosahedron. Icosahedron has 20 triangular faces. \n\nAll five kinds of polyhedrons are shown on the picture below:\n\n [Image] \n\nAnton has a collection of n polyhedrons. One day he decided to know, how many faces his polyhedrons have in total. Help Anton and find this number!\n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 200 000)\u00a0\u2014 the number of polyhedrons in Anton's collection.\n\nEach of the following n lines of the input contains a string s_{i}\u00a0\u2014 the name of the i-th polyhedron in Anton's collection. The string can look like this:\n\n  \"Tetrahedron\" (without quotes), if the i-th polyhedron in Anton's collection is a tetrahedron.  \"Cube\" (without quotes), if the i-th polyhedron in Anton's collection is a cube.  \"Octahedron\" (without quotes), if the i-th polyhedron in Anton's collection is an octahedron.  \"Dodecahedron\" (without quotes), if the i-th polyhedron in Anton's collection is a dodecahedron.  \"Icosahedron\" (without quotes), if the i-th polyhedron in Anton's collection is an icosahedron. \n\n\n-----Output-----\n\nOutput one number\u00a0\u2014 the total number of faces in all the polyhedrons in Anton's collection.\n\n\n-----Examples-----\nInput\n4\nIcosahedron\nCube\nTetrahedron\nDodecahedron\n\nOutput\n42\n\nInput\n3\nDodecahedron\nOctahedron\nOctahedron\n\nOutput\n28\n\n\n\n-----Note-----\n\nIn the first sample Anton has one icosahedron, one cube, one tetrahedron and one dodecahedron. Icosahedron has 20 faces, cube has 6 faces, tetrahedron has 4 faces and dodecahedron has 12 faces. In total, they have 20 + 6 + 4 + 12 = 42 faces.",
    "134": "Generate a code-based solution, with an explanation, for the following task or described function:\nNow that Chef has finished baking and frosting his cupcakes, it's time to package them. Chef has N cupcakes, and needs to decide how many cupcakes to place in each package. Each package must contain the same number of cupcakes. Chef will choose an integer A between 1 and N, inclusive, and place exactly A cupcakes into each package.  Chef makes as many packages as possible. Chef then gets to eat the remaining cupcakes. Chef enjoys eating cupcakes very much. Help Chef choose the package size A that will let him eat as many cupcakes as possible.\n\n-----Input-----\n\nInput begins with an integer T, the number of test cases. Each test case consists of a single integer N, the number of cupcakes.\n\n-----Output-----\n\nFor each test case, output the package size that will maximize the number of leftover cupcakes. If multiple package sizes will result in the same number of leftover cupcakes, print the largest such size.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 2 \u2264 N \u2264 100000000 (108)\n\n-----Sample Input-----\n2\n2\n5\n\n-----Sample Output-----\n2\n3\n\n-----Explanation-----\n\nIn the first test case, there will be no leftover cupcakes regardless of the size Chef chooses, so he chooses the largest possible size.  In the second test case, there will be 2 leftover cupcakes.",
    "135": "Generate a code-based solution, with an explanation, for the following task or described function:\nLee was cleaning his house for the party when he found a messy string under the carpets. Now he'd like to make it clean accurately and in a stylish way...\n\nThe string $s$ he found is a binary string of length $n$ (i. e. string consists only of 0-s and 1-s).\n\nIn one move he can choose two consecutive characters $s_i$ and $s_{i+1}$, and if $s_i$ is 1 and $s_{i + 1}$ is 0, he can erase exactly one of them (he can choose which one to erase but he can't erase both characters simultaneously). The string shrinks after erasing.\n\nLee can make an arbitrary number of moves (possibly zero) and he'd like to make the string $s$ as clean as possible. He thinks for two different strings $x$ and $y$, the shorter string is cleaner, and if they are the same length, then the lexicographically smaller string is cleaner.\n\nNow you should answer $t$ test cases: for the $i$-th test case, print the cleanest possible string that Lee can get by doing some number of moves.\n\nSmall reminder: if we have two strings $x$ and $y$ of the same length then $x$ is lexicographically smaller than $y$ if there is a position $i$ such that $x_1 = y_1$, $x_2 = y_2$,..., $x_{i - 1} = y_{i - 1}$ and $x_i < y_i$.\n\n\n-----Input-----\n\nThe first line contains the integer $t$ ($1 \\le t \\le 10^4$)\u00a0\u2014 the number of test cases. \n\nNext $2t$ lines contain test cases\u00a0\u2014 one per two lines.\n\nThe first line of each test case contains the integer $n$ ($1 \\le n \\le 10^5$)\u00a0\u2014 the length of the string $s$.\n\nThe second line contains the binary string $s$. The string $s$ is a string of length $n$ which consists only of zeroes and ones.\n\nIt's guaranteed that sum of $n$ over test cases doesn't exceed $10^5$.\n\n\n-----Output-----\n\nPrint $t$ answers\u00a0\u2014 one per test case.\n\nThe answer to the $i$-th test case is the cleanest string Lee can get after doing some number of moves (possibly zero).\n\n\n-----Example-----\nInput\n5\n10\n0001111111\n4\n0101\n8\n11001101\n10\n1110000000\n1\n1\n\nOutput\n0001111111\n001\n01\n0\n1\n\n\n\n-----Note-----\n\nIn the first test case, Lee can't perform any moves.\n\nIn the second test case, Lee should erase $s_2$.\n\nIn the third test case, Lee can make moves, for example, in the following order: 11001101\u00a0$\\rightarrow$ 1100101\u00a0$\\rightarrow$ 110101\u00a0$\\rightarrow$ 10101\u00a0$\\rightarrow$ 1101\u00a0$\\rightarrow$ 101\u00a0$\\rightarrow$ 01.",
    "136": "Generate a code-based solution, with an explanation, for the following task or described function:\nThe chef is trying to decode some pattern problems, Chef wants your help to code it. Chef has one number K(odd) to form a new pattern. Help the chef to code this pattern problem.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, one integer $K$. \n\n-----Output:-----\nFor each test case, output as the pattern.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $1 \\leq K \\leq 100$\n\n-----Sample Input:-----\n4\n1\n3\n5\n7\n\n-----Sample Output:-----\n1\n111\n111\n111\n11111\n11 11\n1 1 1\n11 11\n11111\n1111111\n11   11\n1 1 1 1\n1  1  1\n1 1 1 1\n11   11\n1111111\n\n-----EXPLANATION:-----\nNo need, else pattern can be decode easily.",
    "137": "Generate a code-based solution, with an explanation, for the following task or described function:\nVasya has got a robot which is situated on an infinite Cartesian plane, initially in the cell $(0, 0)$. Robot can perform the following four kinds of operations:   U \u2014 move from $(x, y)$ to $(x, y + 1)$;  D \u2014 move from $(x, y)$ to $(x, y - 1)$;  L \u2014 move from $(x, y)$ to $(x - 1, y)$;  R \u2014 move from $(x, y)$ to $(x + 1, y)$. \n\nVasya also has got a sequence of $n$ operations. Vasya wants to modify this sequence so after performing it the robot will end up in $(x, y)$.\n\nVasya wants to change the sequence so the length of changed subsegment is minimum possible. This length can be calculated as follows: $maxID - minID + 1$, where $maxID$ is the maximum index of a changed operation, and $minID$ is the minimum index of a changed operation. For example, if Vasya changes RRRRRRR to RLRRLRL, then the operations with indices $2$, $5$ and $7$ are changed, so the length of changed subsegment is $7 - 2 + 1 = 6$. Another example: if Vasya changes DDDD to DDRD, then the length of changed subsegment is $1$. \n\nIf there are no changes, then the length of changed subsegment is $0$. Changing an operation means replacing it with some operation (possibly the same); Vasya can't insert new operations into the sequence or remove them.\n\nHelp Vasya! Tell him the minimum length of subsegment that he needs to change so that the robot will go from $(0, 0)$ to $(x, y)$, or tell him that it's impossible.\n\n\n-----Input-----\n\nThe first line contains one integer number $n~(1 \\le n \\le 2 \\cdot 10^5)$ \u2014 the number of operations.\n\nThe second line contains the sequence of operations \u2014 a string of $n$ characters. Each character is either U, D, L or R.\n\nThe third line contains two integers $x, y~(-10^9 \\le x, y \\le 10^9)$ \u2014 the coordinates of the cell where the robot should end its path.\n\n\n-----Output-----\n\nPrint one integer \u2014 the minimum possible length of subsegment that can be changed so the resulting sequence of operations moves the robot from $(0, 0)$ to $(x, y)$. If this change is impossible, print $-1$.\n\n\n-----Examples-----\nInput\n5\nRURUU\n-2 3\n\nOutput\n3\n\nInput\n4\nRULR\n1 1\n\nOutput\n0\n\nInput\n3\nUUU\n100 100\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first example the sequence can be changed to LULUU. So the length of the changed subsegment is $3 - 1 + 1 = 3$.\n\nIn the second example the given sequence already leads the robot to $(x, y)$, so the length of the changed subsegment is $0$.\n\nIn the third example the robot can't end his path in the cell $(x, y)$.",
    "138": "Generate a code-based solution, with an explanation, for the following task or described function:\nConsider the infinite x$x$ axis. There are N$N$ impacts on this X-axis at integral points (X1$X_1$,X2$X_2$,....XN$X_N$)  (all distinct) . An impact at a point X$X$i propagates such that at a point X$X$0, the effect of the impact is K|Xi\u2212X0|$K^{|X_i - X_0|}$. Given the point X0$X_0$, N$N$ and K$K$. Assume the total impact on X0$X_0$ is M$M$, find if it is possible to do so.Note: You are not required to find the set X\n\nFormally print \"yes\" if this is possible and \"no\" if not possible.\n\n-----Input:-----\n- First line will contain T$T$, number of testcases. Then the testcases follow. \n-  Each testcase contains of a single line of input, four integers N$N$,K$K$,M$M$,X$X$0 \n\n-----Output:-----\n-  The output of each test case is either \"yes\" or \"no\"\n\n-----Constraints -----\n-  1\u2264T\u22641000$1\\leq T \\leq 1000$\n-  1\u2264N\u2264100$1\\leq N \\leq 100$\n-  1\u2264K\u22641000$1\\leq K \\leq 1000$\n-  1\u2264M\u22641018$1\\leq M \\leq 10^{18}$\n-  \u2212109\u2264X0\u2264109$-10^9 \\leq X_0 \\leq 10^9$ \n\n-----Sample Input:-----\n\t2\n\n4 3 10 10\n\n2 3 10 10\n\n-----Sample Output:-----\n\tno\n\nyes",
    "139": "Generate a code-based solution, with an explanation, for the following task or described function:\nBerland annual chess tournament is coming!\n\nOrganizers have gathered 2\u00b7n chess players who should be divided into two teams with n people each. The first team is sponsored by BerOil and the second team is sponsored by BerMobile. Obviously, organizers should guarantee the win for the team of BerOil.\n\nThus, organizers should divide all 2\u00b7n players into two teams with n people each in such a way that the first team always wins.\n\nEvery chess player has its rating r_{i}. It is known that chess player with the greater rating always wins the player with the lower rating. If their ratings are equal then any of the players can win.\n\nAfter teams assignment there will come a drawing to form n pairs of opponents: in each pair there is a player from the first team and a player from the second team. Every chess player should be in exactly one pair. Every pair plays once. The drawing is totally random.\n\nIs it possible to divide all 2\u00b7n players into two teams with n people each so that the player from the first team in every pair wins regardless of the results of the drawing?\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 100).\n\nThe second line contains 2\u00b7n integers a_1, a_2, ... a_2n (1 \u2264 a_{i} \u2264 1000).\n\n\n-----Output-----\n\nIf it's possible to divide all 2\u00b7n players into two teams with n people each so that the player from the first team in every pair wins regardless of the results of the drawing, then print \"YES\". Otherwise print \"NO\".\n\n\n-----Examples-----\nInput\n2\n1 3 2 4\n\nOutput\nYES\n\nInput\n1\n3 3\n\nOutput\nNO",
    "140": "Generate a code-based solution, with an explanation, for the following task or described function:\nThere are three squares, each with side length a placed on the x-axis. The coordinates of centers of these squares are (x1, a/2), (x2, a/2) and (x3, a/2) respectively. All of them are placed with one of their sides resting on the x-axis.\nYou are allowed to move the centers of each of these squares along the x-axis (either to the left or to the right)  by a distance of at most K. Find the maximum possible area of intersections of all these three squares that you can achieve. That is, the maximum area of the region which is part of all the three squares in the final configuration.\n\n-----Input-----\n- The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\n- The first line of each test case contains two space-separated integers a, K denoting side length of the squares, and the maximum distance that you can move the center of any square.\n- The second line contains three space separated integers x1, x2, x3\n\n-----Output-----\nFor each test case, output a real number corresponding to the maximum area of the intersection of the three squares that you can obtain. Your answer will be considered correct if it has an absolute error of less than or equal to \t10-2.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 105\n- 1 \u2264 a \u2264 105\n- 0 \u2264 K \u2264 106\n- -106 \u2264 x1, x2, x3 \u2264 106\n\n-----Example-----\nInput\n3\n1 0\n1 2 3\n1 1\n1 2 3\n1 1\n1 4 6\n\nOutput\n0.000000\n1.0000\n0.0\n\n-----Explanation-----\nTestcase 1: The figure below shows the three squares:\n\nSince K = 0, they cannot be moved, and since there is no region which belongs to all three squares, the answer is 0.\nTestcase 2: The starting configuration is the same as above, but now each of the squares can move 1 unit. So we can move the first square 1 unit to the right and the third square one unit to the left, and have all the three squares at x-coordinate = 2. Thus the entire square is part of all three squares, and the answer is 1.",
    "141": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou are given $n$ segments on a coordinate line; each endpoint of every segment has integer coordinates. Some segments can degenerate to points. Segments can intersect with each other, be nested in each other or even coincide.\n\nYour task is the following: for every $k \\in [1..n]$, calculate the number of points with integer coordinates such that the number of segments that cover these points equals $k$. A segment with endpoints $l_i$ and $r_i$ covers point $x$ if and only if $l_i \\le x \\le r_i$.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of segments.\n\nThe next $n$ lines contain segments. The $i$-th line contains a pair of integers $l_i, r_i$ ($0 \\le l_i \\le r_i \\le 10^{18}$) \u2014 the endpoints of the $i$-th segment.\n\n\n-----Output-----\n\nPrint $n$ space separated integers $cnt_1, cnt_2, \\dots, cnt_n$, where $cnt_i$ is equal to the number of points such that the number of segments that cover these points equals to $i$.\n\n\n-----Examples-----\nInput\n3\n0 3\n1 3\n3 8\n\nOutput\n6 2 1 \n\nInput\n3\n1 3\n2 4\n5 7\n\nOutput\n5 2 0 \n\n\n\n-----Note-----\n\nThe picture describing the first example:\n\n[Image]\n\nPoints with coordinates $[0, 4, 5, 6, 7, 8]$ are covered by one segment, points $[1, 2]$ are covered by two segments and point $[3]$ is covered by three segments.\n\nThe picture describing the second example:\n\n[Image]\n\nPoints $[1, 4, 5, 6, 7]$ are covered by one segment, points $[2, 3]$ are covered by two segments and there are no points covered by three segments.",
    "142": "Generate a code-based solution, with an explanation, for the following task or described function:\nChef is baking a cake.\n\nWhile baking, in each minute the size of cake doubles as compared to its previous size.\n\nIn this cake, baking of cake is directly proportional to its size.\nYou are given $a$, the total time taken(in minutes) to bake the whole cake.\n\nLet cake be half baked at $k^{th}$ minute.         \nYour task is to find the value of $k+2$.\n\n-----Input:-----\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of T test cases follows.               \n- The first and only line of each test case contains a single integer $a$.\n\n-----Output:-----\nFor each testcase , print one line, the value of $k+2$.\n\n-----Constraints-----\n- $1 \\leq T \\leq 8 $\n- $2 \\leq a \\leq 10^{128}$\n\n-----Sample Input:-----\n1\n\n2\n\n-----Sample Output:-----\n3\n\n-----Explaination-----\nTime was 1 min when cake was half baked by chef so answer is 1+2=3",
    "143": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven a list of intervals, remove all intervals that are covered by another interval in the list.\nInterval [a,b) is covered by\u00a0interval [c,d) if and only if c <= a and b <= d.\nAfter doing so, return the number of remaining intervals.\n\u00a0\nExample 1:\nInput: intervals = [[1,4],[3,6],[2,8]]\nOutput: 2\nExplanation: Interval [3,6] is covered by [2,8], therefore it is removed.\n\nExample 2:\nInput: intervals = [[1,4],[2,3]]\nOutput: 1\n\nExample 3:\nInput: intervals = [[0,10],[5,12]]\nOutput: 2\n\nExample 4:\nInput: intervals = [[3,10],[4,10],[5,11]]\nOutput: 2\n\nExample 5:\nInput: intervals = [[1,2],[1,4],[3,4]]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= intervals.length <= 1000\nintervals[i].length == 2\n0 <= intervals[i][0] <\u00a0intervals[i][1] <= 10^5\nAll the intervals are unique.",
    "144": "Generate a code-based solution, with an explanation, for the following task or described function:\nThere are $N$ robots who work for $Y$ days and on each day they\nproduce some toys .on some days a few robots are given rest.\nSo depending on the availability of robots owner has \nmade a time table which decides which robots will work on \nthe particular day.\nOnly contiguous robots must be selected as they can form \na link of communication among themselves.\nInitially, all robots have the capacity of one toy.\nOn each day capacity for the chosen robot is updated i.e\ncapacity = capacity $+$$ ($minimum capacity of given range % $1000000007)$ .\nAfter calculating the minimum capacity of a given range, compute\nit as modulo 1000000007 ($10^9 + 7$).\nAfter $Y$ days find the minimum capacity of the $N$ robots and compute it as modulo 1000000007 ($10^9 + 7$).   \n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Next Line contains a single integer N.\n- Next Line contains a single integer Y.\n- Next $Y$ lines contains l and r range of chosen robots .\n\n-----Output:-----\nFor each testcase, output in a single line answer , the minimum capacity of the $N$ robots after $Y$ days and compute it as modulo 1000000007 ($10^9 + 7$) .\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $100 \\leq N \\leq 10^4$\n- $200 \\leq Y \\leq 1000$\n- $0<=l , r<=N-1$  , $l<=r$\n\n-----Sample Input:-----\n1\n5\n4\n0 3\n1 2\n4 4\n0 4\n\n-----Sample Output:-----\n4\n\n-----EXPLANATION:-----\nInitial capacity of the $5$ robots\n1 1 1 1 1 \nMinimum in range [0,3] = 1\nUpdate the capacity in the range [0,3]\nNow capacity becomes, \nDay 1 - 2 2 2 2 1\nSimilarly capacities changes for each day \nDay 2 - 2 4 4 2 1\nDay 3 - 2 4 4 2 2\nDay 4 - 4 6 6 4 4\nso after 4 days minimum capacity is $4$.",
    "145": "Generate a code-based solution, with an explanation, for the following task or described function:\nMahmoud and Ehab play a game called the even-odd game. Ehab chooses his favorite integer n and then they take turns, starting from Mahmoud. In each player's turn, he has to choose an integer a and subtract it from n such that:  1 \u2264 a \u2264 n.  If it's Mahmoud's turn, a has to be even, but if it's Ehab's turn, a has to be odd. \n\nIf the current player can't choose any number satisfying the conditions, he loses. Can you determine the winner if they both play optimally?\n\n\n-----Input-----\n\nThe only line contains an integer n (1 \u2264 n \u2264 10^9), the number at the beginning of the game.\n\n\n-----Output-----\n\nOutput \"Mahmoud\" (without quotes) if Mahmoud wins and \"Ehab\" (without quotes) otherwise.\n\n\n-----Examples-----\nInput\n1\n\nOutput\nEhab\nInput\n2\n\nOutput\nMahmoud\n\n\n-----Note-----\n\nIn the first sample, Mahmoud can't choose any integer a initially because there is no positive even integer less than or equal to 1 so Ehab wins.\n\nIn the second sample, Mahmoud has to choose a = 2 and subtract it from n. It's Ehab's turn and n = 0. There is no positive odd integer less than or equal to 0 so Mahmoud wins.",
    "146": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou have a Petri dish with bacteria and you are preparing to dive into the harsh micro-world. But, unfortunately, you don't have any microscope nearby, so you can't watch them.\n\nYou know that you have $n$ bacteria in the Petri dish and size of the $i$-th bacteria is $a_i$. Also you know intergalactic positive integer constant $K$.\n\nThe $i$-th bacteria can swallow the $j$-th bacteria if and only if $a_i > a_j$ and $a_i \\le a_j + K$. The $j$-th bacteria disappear, but the $i$-th bacteria doesn't change its size. The bacteria can perform multiple swallows. On each swallow operation any bacteria $i$ can swallow any bacteria $j$ if $a_i > a_j$ and $a_i \\le a_j + K$. The swallow operations go one after another.\n\nFor example, the sequence of bacteria sizes $a=[101, 53, 42, 102, 101, 55, 54]$ and $K=1$. The one of possible sequences of swallows is: $[101, 53, 42, 102, \\underline{101}, 55, 54]$ $\\to$ $[101, \\underline{53}, 42, 102, 55, 54]$ $\\to$ $[\\underline{101}, 42, 102, 55, 54]$ $\\to$ $[42, 102, 55, \\underline{54}]$ $\\to$ $[42, 102, 55]$. In total there are $3$ bacteria remained in the Petri dish.\n\nSince you don't have a microscope, you can only guess, what the minimal possible number of bacteria can remain in your Petri dish when you finally will find any microscope.\n\n\n-----Input-----\n\nThe first line contains two space separated positive integers $n$ and $K$ ($1 \\le n \\le 2 \\cdot 10^5$, $1 \\le K \\le 10^6$) \u2014 number of bacteria and intergalactic constant $K$.\n\nThe second line contains $n$ space separated integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^6$) \u2014 sizes of bacteria you have.\n\n\n-----Output-----\n\nPrint the only integer \u2014 minimal possible number of bacteria can remain.\n\n\n-----Examples-----\nInput\n7 1\n101 53 42 102 101 55 54\n\nOutput\n3\n\nInput\n6 5\n20 15 10 15 20 25\n\nOutput\n1\n\nInput\n7 1000000\n1 1 1 1 1 1 1\n\nOutput\n7\n\n\n\n-----Note-----\n\nThe first example is clarified in the problem statement.\n\nIn the second example an optimal possible sequence of swallows is: $[20, 15, 10, 15, \\underline{20}, 25]$ $\\to$ $[20, 15, 10, \\underline{15}, 25]$ $\\to$ $[20, 15, \\underline{10}, 25]$ $\\to$ $[20, \\underline{15}, 25]$ $\\to$ $[\\underline{20}, 25]$ $\\to$ $[25]$.\n\nIn the third example no bacteria can swallow any other bacteria.",
    "147": "Generate a code-based solution, with an explanation, for the following task or described function:\nVasiliy spent his vacation in a sanatorium, came back and found that he completely forgot details of his vacation! \n\nEvery day there was a breakfast, a dinner and a supper in a dining room of the sanatorium (of course, in this order). The only thing that Vasiliy has now is a card from the dining room contaning notes how many times he had a breakfast, a dinner and a supper (thus, the card contains three integers). Vasiliy could sometimes have missed some meal, for example, he could have had a breakfast and a supper, but a dinner, or, probably, at some days he haven't been at the dining room at all.\n\nVasiliy doesn't remember what was the time of the day when he arrived to sanatorium (before breakfast, before dinner, before supper or after supper), and the time when he left it (before breakfast, before dinner, before supper or after supper). So he considers any of these options. After Vasiliy arrived to the sanatorium, he was there all the time until he left. Please note, that it's possible that Vasiliy left the sanatorium on the same day he arrived.\n\nAccording to the notes in the card, help Vasiliy determine the minimum number of meals in the dining room that he could have missed. We shouldn't count as missed meals on the arrival day before Vasiliy's arrival and meals on the departure day after he left.\n\n\n-----Input-----\n\nThe only line contains three integers b, d and s (0 \u2264 b, d, s \u2264 10^18,  b + d + s \u2265 1)\u00a0\u2014 the number of breakfasts, dinners and suppers which Vasiliy had during his vacation in the sanatorium. \n\n\n-----Output-----\n\nPrint single integer\u00a0\u2014 the minimum possible number of meals which Vasiliy could have missed during his vacation. \n\n\n-----Examples-----\nInput\n3 2 1\n\nOutput\n1\n\n\nInput\n1 0 0\n\nOutput\n0\n\n\nInput\n1 1 1\n\nOutput\n0\n\n\nInput\n1000000000000000000 0 1000000000000000000\n\nOutput\n999999999999999999\n\n\n\n\n\n-----Note-----\n\nIn the first sample, Vasiliy could have missed one supper, for example, in case he have arrived before breakfast, have been in the sanatorium for two days (including the day of arrival) and then have left after breakfast on the third day. \n\nIn the second sample, Vasiliy could have arrived before breakfast, have had it, and immediately have left the sanatorium, not missing any meal.\n\nIn the third sample, Vasiliy could have been in the sanatorium for one day, not missing any meal.",
    "148": "Generate a code-based solution, with an explanation, for the following task or described function:\nLet's call a number k-good if it contains all digits not exceeding k (0, ..., k). You've got a number k and an array a containing n numbers. Find out how many k-good numbers are in a (count each number every time it occurs in array a).\n\n\n-----Input-----\n\nThe first line contains integers n and k (1 \u2264 n \u2264 100, 0 \u2264 k \u2264 9). The i-th of the following n lines contains integer a_{i} without leading zeroes (1 \u2264 a_{i} \u2264 10^9).\n\n\n-----Output-----\n\nPrint a single integer \u2014 the number of k-good numbers in a.\n\n\n-----Examples-----\nInput\n10 6\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n\nOutput\n10\n\nInput\n2 1\n1\n10\n\nOutput\n1",
    "149": "Generate a code-based solution, with an explanation, for the following task or described function:\nDhruvil has always been a studious person and will be completing his Engineering soon. He is always kneen about solving problems and is preparing hard for his next interview at Hackerrank. He has practiced lots of problems and now he came across this problem.\nGiven a message containing English letters(A-Z), it is being encoded to numbers using the following mapping:\n'A' -> 1,'B' -> 2 \u2026\u2026\u2026\u2026\u2026\u2026 'Z' -> 26.\nNow, given a non-empty string containing only digits, help Dhruvil determine the total number of ways to decode it.\nWhile decoding you need to choose a substring of charachters and not a subsequence. Also a chosen substring should not contain any leading \"0\"s, but can contain trailing \"0\"s. Since the output can be very large print the answer as modulo 10^9 + 7 i.e 1000000007.\n\n-----Input:-----\nThe first line of the input consists of single integer T, the number of test cases.\nEach test case consists of a string.\n\n-----Output:-----\nFor each test case print a single integer - the total number of ways to decode the digit string.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $2 \\leq S \\leq 10^9$\n\n-----Sample Input:-----\n2\n12\n\n226\n\n-----Sample Output:-----\n2\n\n3\n\n-----EXPLANATION:-----\nThere are 2 possible ways. It could be decoded as \"AB\" {1,2} or \"L\" {12}.\nThere are 3 possible ways. It could be decoded as \"BZ\" {2,26}, \"VF\" {22,6}, or \"BBF\" {2,2,6}.",
    "150": "Generate a code-based solution, with an explanation, for the following task or described function:\nChef and Chefina are best friends. Chefina wants to test the Problem Solving skills of chef so she provides Chef 2 integer number  $X$ and $Y$\nThe task of chef is to take the  two numbers $X$ and $Y$ and return their SUM.\nIdentify whether Chef can solve the problem or not? \n\n-----Input:-----\n- First line will contain the two integers $X$ and $Y$.\n\n-----Output:-----\nFor each testcase, output in a single line the SUM of these two numbers $X$ and $Y$.\n\n-----Constraints-----\n- $1 \\leq X \\leq 100$\n- $1 \\leq Y \\leq 100$\n\n-----Sample Input:-----\n6 70\n\n-----Sample Output:-----\n76",
    "151": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven an undirected tree\u00a0consisting of n vertices numbered from 1 to n. A frog starts jumping\u00a0from the vertex 1. In one second, the frog\u00a0jumps from its\u00a0current\u00a0vertex to another unvisited vertex if they are directly connected. The frog can not jump back to a visited vertex.\u00a0In case the frog can jump to several vertices it jumps randomly to one of them with the same probability, otherwise, when the frog can not jump to any unvisited vertex it jumps forever on the same vertex.\u00a0\nThe edges of the undirected tree\u00a0are given in the array edges, where edges[i] = [fromi, toi] means that exists an edge connecting directly the vertices fromi and toi.\nReturn the probability that after t seconds the frog is on the vertex target.\n\u00a0\nExample 1:\n\nInput: n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 2, target = 4\nOutput: 0.16666666666666666 \nExplanation: The figure above shows the given graph. The frog starts at vertex 1, jumping with 1/3 probability to the vertex 2 after second 1 and then jumping with 1/2 probability to vertex 4 after second 2. Thus the probability for the frog is on the vertex 4 after 2 seconds is 1/3 * 1/2 = 1/6 = 0.16666666666666666. \n\nExample 2:\n\nInput: n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 1, target = 7\nOutput: 0.3333333333333333\nExplanation: The figure above shows the given graph. The frog starts at vertex 1, jumping with 1/3 = 0.3333333333333333 probability to the vertex 7 after second 1. \n\nExample 3:\nInput: n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 20, target = 6\nOutput: 0.16666666666666666\n\n\u00a0\nConstraints:\n\n1 <= n <= 100\nedges.length == n-1\nedges[i].length == 2\n1 <= edges[i][0], edges[i][1] <= n\n1 <= t\u00a0<= 50\n1 <= target\u00a0<= n\nAnswers within 10^-5 of the actual value will be accepted as correct.",
    "152": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou have an array $a_1, a_2, \\dots, a_n$. \n\nLet's call some subarray $a_l, a_{l + 1}, \\dots , a_r$ of this array a subpermutation if it contains all integers from $1$ to $r-l+1$ exactly once. For example, array $a = [2, 2, 1, 3, 2, 3, 1]$ contains $6$ subarrays which are subpermutations: $[a_2 \\dots a_3]$, $[a_2 \\dots a_4]$, $[a_3 \\dots a_3]$, $[a_3 \\dots a_5]$, $[a_5 \\dots a_7]$, $[a_7 \\dots a_7]$.\n\nYou are asked to calculate the number of subpermutations.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 3 \\cdot 10^5$).\n\nThe second line contains $n$ integers $a_1, a_2, \\dots , a_n$ ($1 \\le a_i \\le n$). \n\nThis array can contain the same integers.\n\n\n-----Output-----\n\nPrint the number of subpermutations of the array $a$.\n\n\n-----Examples-----\nInput\n8\n2 4 1 3 4 2 1 2\n\nOutput\n7\n\nInput\n5\n1 1 2 1 2\n\nOutput\n6\n\n\n\n-----Note-----\n\nThere are $7$ subpermutations in the first test case. Their segments of indices are $[1, 4]$, $[3, 3]$, $[3, 6]$, $[4, 7]$, $[6, 7]$, $[7, 7]$ and $[7, 8]$.\n\nIn the second test case $6$ subpermutations exist: $[1, 1]$, $[2, 2]$, $[2, 3]$, $[3, 4]$, $[4, 4]$ and $[4, 5]$.",
    "153": "Generate a code-based solution, with an explanation, for the following task or described function:\nUppal-balu is busy in extraction of gold from ores. He got an assignment from his favorite professor MH sir, but he got stuck in a problem. Can you help Uppal-balu to solve the problem.\nYou are given an array $a_1$, $a_2$, $\\dots$, $a_n$ of length $n$. You can perform the following operations on it:\n- Choose an index $i$ ($1 \\leq i \\leq n$), and replace $a_i$ by $a_{i} + 1$ or $a_{i} - 1$, which means add or subtract one to the element at index $i$.\nBeauty of the array is defined as maximum length of a subarray containing numbers which give same remainder upon dividing it by $k$ (that is, ($a_l$ mod $k$) = ($a_{l+1}$ mod $k$) = $\\dots$ = ($a_r$ mod $k$) for some $1 \\leq l \\leq r \\leq n$).\nYou need to calculate the beauty of the array $a_1$, $a_2$, $\\dots$, $a_n$ after applying at most $m$ operations.\nNOTE:\n- The subarray of a is a contiguous part of the array $a$, i.\u2009e. the array $a_l$, $a_{l+1}$, $\\dots$, $a_r$ for some $1 \\leq l \\leq r \\leq n$.\n- $x$ mod $y$ means the remainder of $x$ after dividing it by $y$.\n\n-----Input:-----\n- First line of input contains 3 integers $n$, $m$ and $k$.   \n- The second line contains $n$ integers $a_1$, $a_2$, $\\dots$, $a_n$.\n\n-----Output:-----\nOutput in a single line the beauty of the array after applying at most m operations.\n\n-----Constraints-----\n- $1 \\leq n,m \\leq 2\\cdot10^{5}$\n- $1 \\leq k \\leq 7$\n- $1 \\leq a_i \\leq 10^9$\n\n-----Sample Input 1:-----\n7 3 4\n\n8 2 3 7 8 1 1    \n\n-----Sample Output 1:-----\n5\n\n-----Sample Input 2:-----\n8 3 5\n\n7 2 1 3 6 5 6 2   \n\n-----Sample Output 2:-----\n5",
    "154": "Generate a code-based solution, with an explanation, for the following task or described function:\nThe ZCO scholarship contest offers scholarships to first time ZCO participants. You are participating in it for the first time. So you want to know the number of participants who'll get the scholarship.\nYou know that the maximum number of scholarships offered is $R$ and there are a total of $N$ participants numbered from $1$ to $N$. Out of these, you know the set of people (denoted by $X$) who you know, had participated in previous year ZCOs and hence, they shall not get the scholarship.\nFurther, as the world isn't free from plagiarism, so is the case with the scholarship contest. And from your secret sources, you also know the set of people (denoted by set $Y$) who were involved in plagiarism and therefore aren't eligible for scholarship either.\nFind out the number of participants who shall get the scholarship.\nPS: Don't ask how so many scholarships are being offered when you see the constraints on $R$. You never questioned it when in mathematics classes, some person bought $80$ watermelons twice just to compare them and save $\u20b91$. \n\n-----Input:-----\n- The first line will contain a single integer, $T$, the number of testcases. Then the testcases follow. \n- The first line of each test case contains four integers; $N$, $R$, $|X|$ and $|Y|$ denoting the number of participants, maximum number of scholarships offered, number of old participants, and the number of participants involved in plagiarism, respectively.\n- The second line of each test case contains $|X|$ space separated integers $x_1, x_2 \\ldots x_{|X|}$ denoting the indices of people who participated in previous years. If $X$ is empty, this line is skipped and no empty line is in the input.\n- The third line of each test case contains $|Y|$ space separated integers $y_1, y_2 \\ldots y_{|Y|}$  denoting the indices of people who are involved in plagiarism. If $Y$ is empty, this line is skipped and no empty line is in input.\n\n-----Output:-----\nFor each testcase, print a single integer in a new line, denoting the number of participants who shall get the scholarship.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $1 \\leq N \\leq 10^{15}$\n- $0 \\leq R \\leq 10^{15}$\n- $0 \\leq |X|, |Y| \\leq min(N, 2*10^5)$\n- $1 \\leq x_i, y_i \\leq N$\n- All $x_i$ are distinct\n- All $y_i$ are distinct\n- Sum of $|X|$ over all test cases does not exceed $5*10^5$\n- Sum of $|Y|$ over all test cases does not exceed $5*10^5$\n\n-----Subtasks-----\n- 20 points : $1 \\leq N \\leq 10^3$, and the sum of $N$ over all test cases does not exceed $3*10^3$\n- 30 points : $1 \\leq N \\leq 2*10^5$, and the sum of $N$ over all test cases does not exceed $5*10^5$\n- 50 points: Original constraints\n\n-----Sample Input:-----\n3\n5 3 0 1\n4\n10 2 4 6\n3 1 7 6\n4 3 1 5 9 7\n10 4 4 6\n3 1 7 6\n4 3 1 5 9 7\n\n-----Sample Output:-----\n3\n2\n3\n\n-----EXPLANATION:-----\n- In the first testcase, only participant $4$ is involved in plagiarism, and thus not eligible for the scholarship. No user has participated in previous years, and so no empty line is there in the sample. All participants except participant $4$ are eligible for the scholarship, but only three of them get it because $R = 3$.\n- Both second and third testcases are the same, except for $R$. In both samples, only participants $2$, $8$ and $10$ are eligible for scholarships.\n- In the second testcase, since the maximum number of scholarships is $2$, only $2$ participants get scholarships.\n- In the third testcase, all three eligible participants get scholarships.",
    "155": "Generate a code-based solution, with an explanation, for the following task or described function:\nDue to the COVID pandemic, there has been an increase in the number of cases if a hospital. The management has decided to clear a large square area for the patients and arrange for beds. But the beds can't be too near to each other.\nThe area is of dimension $N$ x $N$\nThe whole area is already divided into blocks. $1$ means there's a bed in the block, $0$ denotes there isn't. Note, beds placed on consecutive diagonal blocks are safe.\nThis is a SAFE example:\n1 0\n0 1\nThis is an UNSAFE example:\n0 1 1\n0 0 0\n1 0 0\nTo avoid spreading the virus even further, you have to make sure no two adjacent blocks have beds in them. This is done to maintain distance between beds.\nReturn an output of \"SAFE\" if you find the workers have arranged the beds with due consideration to the distance needed. Return \"UNSAFE\" otherwise.\n\n-----Input:-----\n- First line will contain $T$, number of testcases. Then the testcases follow. \n- Next line contains $N$.\n- Next $N$ lines will contain $N$ number of space-separated integers $Ai$ which make denote the beds in the area.\n\n-----Output:-----\nFor each test case, output in a single line whether the total arrangement is \"SAFE\" or \"UNSAFE\". Even if there's a single unsafe bed in the whole area, report the whole area as \"UNSAFE\".\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $0 \\leq Ai \\leq 1$\n- $2 \\leq N \\leq 100$\n\n-----Subtasks-----\n- 30 points : $1 \\leq N \\leq 7$\n- 70 points : Original constraints\n\n-----Sample Input:-----\n2\n4\n1 0 1 0\n0 0 0 1\n0 1 0 0\n1 0 0 1\n4\n1 0 1 0\n0 0 0 0\n1 0 1 1\n0 1 0 0\n\n-----Sample Output:-----\nSAFE\nUNSAFE\n\n-----EXPLANATION:-----\nBeds placed on blocks diagonally are not a problem.",
    "156": "Generate a code-based solution, with an explanation, for the following task or described function:\nThis problem is same as the previous one, but has larger constraints.\n\nShiro's just moved to the new house. She wants to invite all friends of her to the house so they can play monopoly. However, her house is too small, so she can only invite one friend at a time.\n\nFor each of the $n$ days since the day Shiro moved to the new house, there will be exactly one cat coming to the Shiro's house. The cat coming in the $i$-th day has a ribbon with color $u_i$. Shiro wants to know the largest number $x$, such that if we consider the streak of the first $x$ days, it is possible to remove exactly one day from this streak so that every ribbon color that has appeared among the remaining $x - 1$ will have the same number of occurrences.\n\nFor example, consider the following sequence of $u_i$: $[2, 2, 1, 1, 5, 4, 4, 5]$. Then $x = 7$ makes a streak, since if we remove the leftmost $u_i = 5$, each ribbon color will appear exactly twice in the prefix of $x - 1$ days. Note that $x = 8$ doesn't form a streak, since you must remove exactly one day. \n\nSince Shiro is just a cat, she is not very good at counting and needs your help finding the longest streak.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\leq n \\leq 10^5$)\u00a0\u2014 the total number of days.\n\nThe second line contains $n$ integers $u_1, u_2, \\ldots, u_n$ ($1 \\leq u_i \\leq 10^5$)\u00a0\u2014 the colors of the ribbons the cats wear. \n\n\n-----Output-----\n\nPrint a single integer $x$\u00a0\u2014 the largest possible streak of days.\n\n\n-----Examples-----\nInput\n13\n1 1 1 2 2 2 3 3 3 4 4 4 5\n\nOutput\n13\nInput\n5\n10 100 20 200 1\n\nOutput\n5\nInput\n1\n100000\n\nOutput\n1\nInput\n7\n3 2 1 1 4 5 1\n\nOutput\n6\nInput\n6\n1 1 1 2 2 2\n\nOutput\n5\n\n\n-----Note-----\n\nIn the first example, we can choose the longest streak of $13$ days, since upon removing the last day out of the streak, all of the remaining colors $1$, $2$, $3$, and $4$ will have the same number of occurrences of $3$. Note that the streak can also be $10$ days (by removing the $10$-th day from this streak) but we are interested in the longest streak.\n\nIn the fourth example, if we take the streak of the first $6$ days, we can remove the third day from this streak then all of the remaining colors $1$, $2$, $3$, $4$ and $5$ will occur exactly once.",
    "157": "Generate a code-based solution, with an explanation, for the following task or described function:\nThis kata generalizes [Twice Linear](https://www.codewars.com/kata/5672682212c8ecf83e000050). You may want to attempt that kata first.\n\n## Sequence\n\nConsider an integer sequence `U(m)` defined as:\n\n1. `m` is a given non-empty set of positive integers.\n2. `U(m)[0] = 1`, the first number is always 1.\n3. For each `x` in `U(m)`, and each `y` in `m`, `x * y + 1` must also be in `U(m)`.\n4. No other numbers are in `U(m)`.\n5. `U(m)` is sorted, with no duplicates.\n\n### Sequence Examples\n\n#### `U(2, 3) = [1, 3, 4, 7, 9, 10, 13, 15, 19, 21, 22, 27, ...]`\n\n1 produces 3 and 4, since `1 * 2 + 1 = 3`, and `1 * 3 + 1 = 4`.\n\n3 produces 7 and 10, since `3 * 2 + 1 = 7`, and `3 * 3 + 1 = 10`.\n\n#### `U(5, 7, 8) = [1, 6, 8, 9, 31, 41, 43, 46, 49, 57, 64, 65, 73, 156, 206, ...]`\n\n1 produces 6, 8, and 9.\n\n6 produces 31, 43, and 49.\n\n## Task:\n\nImplement `n_linear` or `nLinear`: given a set of postive integers `m`, and an index `n`, find `U(m)[n]`, the `n`th value in the `U(m)` sequence.\n\n### Tips\n\n* Tests use large n values. Slow algorithms may time-out.\n* Tests use large values in the m set. Algorithms which multiply further than neccessary may overflow.\n* Linear run time and memory usage is possible.\n* How can you build the sequence iteratively, without growing extra data structures?",
    "158": "Generate a code-based solution, with an explanation, for the following task or described function:\nTo quickly hire highly skilled specialists one of the new IT City companies made an unprecedented move. Every employee was granted a car, and an employee can choose one of four different car makes.\n\nThe parking lot before the office consists of one line of (2n - 2) parking spaces. Unfortunately the total number of cars is greater than the parking lot capacity. Furthermore even amount of cars of each make is greater than the amount of parking spaces! That's why there are no free spaces on the parking lot ever.\n\nLooking on the straight line of cars the company CEO thought that parking lot would be more beautiful if it contained exactly n successive cars of the same make. Help the CEO determine the number of ways to fill the parking lot this way.\n\n\n-----Input-----\n\nThe only line of the input contains one integer n (3 \u2264 n \u2264 30) \u2014 the amount of successive cars of the same make.\n\n\n-----Output-----\n\nOutput one integer \u2014 the number of ways to fill the parking lot by cars of four makes using the described way.\n\n\n-----Examples-----\nInput\n3\n\nOutput\n24\n\n\n-----Note-----\n\nLet's denote car makes in the following way: A \u2014 Aston Martin, B \u2014   Bentley, M \u2014 Mercedes-Maybach, Z \u2014 Zaporozhets. For n = 3 there are the following appropriate ways to fill the parking lot: AAAB AAAM AAAZ ABBB AMMM AZZZ BBBA BBBM BBBZ BAAA BMMM BZZZ MMMA MMMB MMMZ MAAA MBBB MZZZ ZZZA ZZZB ZZZM ZAAA ZBBB ZMMM\n\nOriginally it was planned to grant sport cars of Ferrari, Lamborghini, Maserati and Bugatti makes but this idea was renounced because it is impossible to drive these cars having small road clearance on the worn-down roads of IT City.",
    "159": "Generate a code-based solution, with an explanation, for the following task or described function:\nAn undirected graph is called k-regular, if the degrees of all its vertices are equal k. An edge of a connected graph is called a bridge, if after removing it the graph is being split into two connected components.\n\nBuild a connected undirected k-regular graph containing at least one bridge, or else state that such graph doesn't exist.\n\n\n-----Input-----\n\nThe single line of the input contains integer k (1 \u2264 k \u2264 100) \u2014 the required degree of the vertices of the regular graph.\n\n\n-----Output-----\n\nPrint \"NO\" (without quotes), if such graph doesn't exist. \n\nOtherwise, print \"YES\" in the first line and the description of any suitable graph in the next lines.\n\nThe description of the made graph must start with numbers n and m \u2014 the number of vertices and edges respectively. \n\nEach of the next m lines must contain two integers, a and b (1 \u2264 a, b \u2264 n, a \u2260 b), that mean that there is an edge connecting the vertices a and b. A graph shouldn't contain multiple edges and edges that lead from a vertex to itself. A graph must be connected, the degrees of all vertices of the graph must be equal k. At least one edge of the graph must be a bridge. You can print the edges of the graph in any order. You can print the ends of each edge in any order.\n\nThe constructed graph must contain at most 10^6 vertices and 10^6 edges (it is guaranteed that if at least one graph that meets the requirements exists, then there also exists the graph with at most 10^6 vertices and at most 10^6 edges). \n\n\n-----Examples-----\nInput\n1\n\nOutput\nYES\n2 1\n1 2\n\n\n\n-----Note-----\n\nIn the sample from the statement there is a suitable graph consisting of two vertices, connected by a single edge.",
    "160": "Generate a code-based solution, with an explanation, for the following task or described function:\nBerland has a long and glorious history. To increase awareness about it among younger citizens, King of Berland decided to compose an anthem.\n\nThough there are lots and lots of victories in history of Berland, there is the one that stand out the most. King wants to mention it in the anthem as many times as possible.\n\nHe has already composed major part of the anthem and now just needs to fill in some letters. King asked you to help him with this work.\n\nThe anthem is the string s of no more than 10^5 small Latin letters and question marks. The most glorious victory is the string t of no more than 10^5 small Latin letters. You should replace all the question marks with small Latin letters in such a way that the number of occurrences of string t in string s is maximal.\n\nNote that the occurrences of string t in s can overlap. Check the third example for clarification.\n\n\n-----Input-----\n\nThe first line contains string of small Latin letters and question marks s (1 \u2264 |s| \u2264 10^5).\n\nThe second line contains string of small Latin letters t (1 \u2264 |t| \u2264 10^5).\n\nProduct of lengths of strings |s|\u00b7|t| won't exceed 10^7.\n\n\n-----Output-----\n\nOutput the maximum number of occurrences of string t you can achieve by replacing all the question marks in string s with small Latin letters.\n\n\n-----Examples-----\nInput\nwinlose???winl???w??\nwin\n\nOutput\n5\n\nInput\nglo?yto?e??an?\nor\n\nOutput\n3\n\nInput\n??c?????\nabcab\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first example the resulting string s is \"winlosewinwinlwinwin\"\n\nIn the second example the resulting string s is \"glorytoreorand\". The last letter of the string can be arbitrary.\n\nIn the third example occurrences of string t are overlapping. String s with maximal number of occurrences of t is \"abcabcab\".",
    "161": "Generate a code-based solution, with an explanation, for the following task or described function:\nChef works in a similar way to a travelling salesman \u2015 he always travels to new cities in order to sell his delicious dishes.\nToday, Chef is planning to visit $N$ cities (numbered $1$ through $N$). There is a direct way to travel between each pair of cities. Each city has a specific temperature; let's denote the temperature in the $i$-th city by $C_i$. Chef has a fixed temperature tolerance $D$ with the following meaning: for each pair of cities $a$ and $b$, he may travel from city $a$ directly to city $b$ only if $|C_a-C_b| \\le D$, otherwise he would catch a heavy flu because of the sudden change in temperature.\nChef starts from city $1$. Is he able to visit all $N$ cities in such a way that each city is visited exactly once?\nNotes:\n- Chef is not able to travel through a city without visiting it.\n- City $1$ is visited at the beginning.\n- It is not necessary to be able to travel directly to city $1$ from the last city Chef visits.\n\n-----Input-----\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains two space-separated integers $N$ and $D$.\n- The second line contains $N$ space-separated integers $C_1, C_2, \\ldots, C_N$.\n\n-----Output-----\nFor each test case, print a single line containing the string \"YES\" (without quotes) if Chef can visit all cities or \"NO\" (without quotes) if he cannot.\n\n-----Constraints-----\n- $1 \\le T \\le 1,000$\n- $2 \\le N \\le 10^5$\n- $0 \\le D \\le 10^9$\n- $0 \\le C_i \\le 10^9$ for each valid $i$\n- the sum of $N$ over all test cases does not exceed $10^6$\n\n-----Subtasks-----\nSubtask #1 (20 points):\n- $N \\le 1,000$\n- the sum of $N$ over all test cases does not exceed $10,000$\nSubtask #2 (80 points): original constraints\n\n-----Example Input-----\n2\n5 3\n3 2 1 4 5\n5 4\n10 1 3 2 9\n\n-----Example Output-----\nYES\nNO",
    "162": "Generate a code-based solution, with an explanation, for the following task or described function:\nArkady and his friends love playing checkers on an $n \\times n$ field. The rows and the columns of the field are enumerated from $1$ to $n$.\n\nThe friends have recently won a championship, so Arkady wants to please them with some candies. Remembering an old parable (but not its moral), Arkady wants to give to his friends one set of candies per each cell of the field: the set of candies for cell $(i, j)$ will have exactly $(i^2 + j^2)$ candies of unique type.\n\nThere are $m$ friends who deserve the present. How many of these $n \\times n$ sets of candies can be split equally into $m$ parts without cutting a candy into pieces? Note that each set has to be split independently since the types of candies in different sets are different.\n\n\n-----Input-----\n\nThe only line contains two integers $n$ and $m$ ($1 \\le n \\le 10^9$, $1 \\le m \\le 1000$)\u00a0\u2014 the size of the field and the number of parts to split the sets into.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the number of sets that can be split equally.\n\n\n-----Examples-----\nInput\n3 3\n\nOutput\n1\n\nInput\n6 5\n\nOutput\n13\n\nInput\n1000000000 1\n\nOutput\n1000000000000000000\n\n\n\n-----Note-----\n\nIn the first example, only the set for cell $(3, 3)$ can be split equally ($3^2 + 3^2 = 18$, which is divisible by $m=3$).\n\nIn the second example, the sets for the following cells can be divided equally:   $(1, 2)$ and $(2, 1)$, since $1^2 + 2^2 = 5$, which is divisible by $5$;  $(1, 3)$ and $(3, 1)$;  $(2, 4)$ and $(4, 2)$;  $(2, 6)$ and $(6, 2)$;  $(3, 4)$ and $(4, 3)$;  $(3, 6)$ and $(6, 3)$;  $(5, 5)$. \n\nIn the third example, sets in all cells can be divided equally, since $m = 1$.",
    "163": "Generate a code-based solution, with an explanation, for the following task or described function:\nAsh like soup very much! So, on the Raksha Bandhan day, his sister gave him a soup maker as a gift. Soup maker in the ith hour will make volume  Vi liters of soup and pours it in a bowl.\nEach hour, the Volume of soup in every bowl is reduced due to evaporation. More precisely, when the temperature on a given hour is Ti, the Volume of soup in every bowl will reduce its volume by Ti. If this would reduce the volume of soup to or below zero, Bowl gets empty. All bowls are independent of each other.\nNote that the Volume of soup in every bowl made in an hour i already lose part of its volume at the same hour. In an extreme case, this may mean that there is no soup left in the bowl at the end of a particular hour.\nYou are given the initial volumes of soup in bowls and the temperature on each hour. Determine the total volume of soup evaporated in each hour.\nInput\nThe first line contains a single integer N (1\u2009\u2264\u2009N\u2009\u2264\u200910^5) \u2014 the number of hours.\nThe second line contains N integers V 1,\u2009V 2,\u2009\u2026,\u2009V N (0\u2009\u2264\u2009V i\u2009\u2264\u200910^9), where V i is the initial volume of soup made in an hour i.\nThe third line contains N integers T 1,\u2009T 2,\u2009\u2026,\u2009T N (0\u2009\u2264\u2009T i\u2009\u2264\u200910^9), where T i is the temperature in an hour i.\nOutput\nOutput a single line with N integers, where the i-th integer represents the total volume of soup melted in an hour i.\nExamples\nInput\n3\n10 10 5\n5 7 2\nOutput\n5 12 4\nInput\n5\n30 25 20 15 10\n9 10 12 4 13\nOutput\n9 20 35 11 25\nNote\nIn the first sample, In the first hour, 10 liters of soup is prepared, which evaporates to the size of 5 at the same hour. In the second hour, another 10 liters of soup is made. Since it is a bit warmer than the hour before, the first bowl gets empty while the second bowl shrinks to 3. At the end of the second hour, only one bowl with 3 liters soup is left. In the third hour, another bowl with less volume of soup is made, but as the temperature dropped too, both bowls survive till the end of the hour.",
    "164": "Generate a code-based solution, with an explanation, for the following task or described function:\nA permutation of length n is an array containing each integer from 1 to n exactly once. For example, q = [4, 5, 1, 2, 3] is a permutation. For the permutation q the square of permutation is the permutation p that p[i] = q[q[i]] for each i = 1... n. For example, the square of q = [4, 5, 1, 2, 3] is p = q^2 = [2, 3, 4, 5, 1].\n\nThis problem is about the inverse operation: given the permutation p you task is to find such permutation q that q^2 = p. If there are several such q find any of them.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^6) \u2014 the number of elements in permutation p.\n\nThe second line contains n distinct integers p_1, p_2, ..., p_{n} (1 \u2264 p_{i} \u2264 n) \u2014 the elements of permutation p.\n\n\n-----Output-----\n\nIf there is no permutation q such that q^2 = p print the number \"-1\".\n\nIf the answer exists print it. The only line should contain n different integers q_{i} (1 \u2264 q_{i} \u2264 n) \u2014 the elements of the permutation q. If there are several solutions print any of them.\n\n\n-----Examples-----\nInput\n4\n2 1 4 3\n\nOutput\n3 4 2 1\n\nInput\n4\n2 1 3 4\n\nOutput\n-1\n\nInput\n5\n2 3 4 5 1\n\nOutput\n4 5 1 2 3",
    "165": "Generate a code-based solution, with an explanation, for the following task or described function:\nA string S of lowercase letters is given.\u00a0 Then, we may make any number of moves.\nIn each move, we\u00a0choose one\u00a0of the first K letters (starting from the left), remove it,\u00a0and place it at the end of the string.\nReturn the lexicographically smallest string we could have after any number of moves.\n\u00a0\n\nExample 1:\nInput: S = \"cba\", K = 1\nOutput: \"acb\"\nExplanation: \nIn the first move, we move the 1st character (\"c\") to the end, obtaining the string \"bac\".\nIn the second move, we move the 1st character (\"b\") to the end, obtaining the final result \"acb\".\n\n\nExample 2:\nInput: S = \"baaca\", K = 3\nOutput: \"aaabc\"\nExplanation: \nIn the first move, we move the 1st character (\"b\") to the end, obtaining the string \"aacab\".\nIn the second move, we move the 3rd character (\"c\") to the end, obtaining the final result \"aaabc\".\n\n\u00a0\nNote:\n\n1 <= K <= S.length\u00a0<= 1000\nS\u00a0consists of lowercase letters only.",
    "166": "Generate a code-based solution, with an explanation, for the following task or described function:\nYou are given two images img1 and img2\u00a0both of size n x n, represented as\u00a0binary, square matrices of the same size. (A binary matrix has only 0s and 1s as values.)\nWe translate one image however we choose (sliding it left, right, up, or down any number of units), and place it on top of the other image.\u00a0 After, the overlap of this translation is the number of positions that have a 1 in both images.\n(Note also that a translation does not include any kind of rotation.)\nWhat is the largest possible overlap?\n\u00a0\nExample 1:\n\nInput: img1 = [[1,1,0],[0,1,0],[0,1,0]], img2 = [[0,0,0],[0,1,1],[0,0,1]]\nOutput: 3\nExplanation: We slide img1 to right by 1 unit and down by 1 unit.\n\nThe number of positions that have a 1 in both images is 3. (Shown in red)\n\n\nExample 2:\nInput: img1 = [[1]], img2 = [[1]]\nOutput: 1\n\nExample 3:\nInput: img1 = [[0]], img2 = [[0]]\nOutput: 0\n\n\u00a0\nConstraints:\n\nn == img1.length\nn == img1[i].length\nn == img2.length \nn == img2[i].length\n1 <= n <= 30\nimg1[i][j] is 0 or 1.\nimg2[i][j] is 0 or 1.",
    "167": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven two arrays of integers\u00a0nums1 and nums2, return the number of triplets formed (type 1 and type 2) under the following rules:\n\nType 1: Triplet (i, j, k)\u00a0if nums1[i]2\u00a0== nums2[j] * nums2[k] where 0 <= i < nums1.length and 0 <= j < k < nums2.length.\nType 2:\u00a0Triplet (i, j, k) if nums2[i]2\u00a0== nums1[j] * nums1[k] where 0 <= i < nums2.length and 0 <= j < k < nums1.length.\n\n\u00a0\nExample 1:\nInput: nums1 = [7,4], nums2 = [5,2,8,9]\nOutput: 1\nExplanation: Type 1: (1,1,2), nums1[1]^2 = nums2[1] * nums2[2]. (4^2 = 2 * 8). \n\nExample 2:\nInput: nums1 = [1,1], nums2 = [1,1,1]\nOutput: 9\nExplanation: All Triplets are valid, because 1^2 = 1 * 1.\nType 1: (0,0,1), (0,0,2), (0,1,2), (1,0,1), (1,0,2), (1,1,2).  nums1[i]^2 = nums2[j] * nums2[k].\nType 2: (0,0,1), (1,0,1), (2,0,1). nums2[i]^2 = nums1[j] * nums1[k].\n\nExample 3:\nInput: nums1 = [7,7,8,3], nums2 = [1,2,9,7]\nOutput: 2\nExplanation: There are 2 valid triplets.\nType 1: (3,0,2).  nums1[3]^2 = nums2[0] * nums2[2].\nType 2: (3,0,1).  nums2[3]^2 = nums1[0] * nums1[1].\n\nExample 4:\nInput: nums1 = [4,7,9,11,23], nums2 = [3,5,1024,12,18]\nOutput: 0\nExplanation: There are no valid triplets.\n\n\u00a0\nConstraints:\n\n1 <= nums1.length, nums2.length <= 1000\n1 <= nums1[i], nums2[i] <= 10^5",
    "168": "Generate a code-based solution, with an explanation, for the following task or described function:\nIt's Christmas time and Santa is in town. There are N children each having a bag with a mission to fill in as many toffees as possible. They are accompanied by a teacher whose ulterior motive is to test their counting skills. The toffees are of different brands (denoted by lowercase letters a-z). Santa picks up a child numbered m and gives n toffees of brand p to the child.\n\nThe teacher wishes to ask the children to calculate the number of toffees there are of a particular brand amongst a given range of children. Formally, there are 2 queries:\n\nInput:\n\nFirst line consists of Q queries.\n\nEach line follows and consists of four space separated values:\n\nType 1: It is of the form 1 m x p\n\n1 is the type no,\"m\" is the child to which \"x\" toffees of a brand \"p\" are given\n\nType 2: It is of the form 2 m n p\nwhere m - n is the range of children (inclusive) being queried for brand p\n\nOutput:\n\nReport the sum of toffees of brand p within the given range m - n for each query of type 2\n\nConstraints:\n\n1 <= Q <= 10^5\n\n1 <= N <= 10^6\n\n1 <= m <= n <= 10^6\n\n1 <= x <= 10^6\n\nall brand of toffees are lowercase letters\n\nSubtask 1: (30 points)\n\n1 <= Q <= 10^3\n\n1 <= m <= n <= 10^3\n\n1 <= x <= 10^3\n\nSubtask 2: (70 points)\n\nOriginal Constraints\n\nSample Input:\n\n5\n\n1 3 4 a\n\n1 5 8 a\n\n1 1 7 x\n\n2 1 6 a\n\n2 3 6 y\n\nSample Output:\n\n12\n\n0\n\nIn first case, there are two children between 3 and 5 between 0 - 6  having sum (4 + 8)\n\nThere's no toffee for y in given range",
    "169": "Generate a code-based solution, with an explanation, for the following task or described function:\nThere is a room with n bulbs, numbered from 1 to n, arranged in a row from left to right. Initially, all the bulbs are turned off.\nAt moment k (for k from 0 to n - 1), we turn on the light[k] bulb. A bulb change\u00a0color to blue only if it is on and all the previous bulbs (to the left)\u00a0are turned on too.\nReturn the number of moments in\u00a0which all\u00a0turned on bulbs\u00a0are blue.\n\u00a0\nExample 1:\n\nInput: light = [2,1,3,5,4]\nOutput: 3\nExplanation: All bulbs turned on, are blue at the moment 1, 2 and 4.\n\nExample 2:\nInput: light = [3,2,4,1,5]\nOutput: 2\nExplanation: All bulbs turned on, are blue at the moment 3, and 4 (index-0).\n\nExample 3:\nInput: light = [4,1,2,3]\nOutput: 1\nExplanation: All bulbs turned on, are blue at the moment 3 (index-0).\nBulb 4th changes to blue at the moment 3.\n\nExample 4:\nInput: light = [2,1,4,3,6,5]\nOutput: 3\n\nExample 5:\nInput: light = [1,2,3,4,5,6]\nOutput: 6\n\n\u00a0\nConstraints:\n\nn ==\u00a0light.length\n1 <= n <= 5 * 10^4\nlight is a permutation of\u00a0\u00a0[1, 2, ..., n]",
    "170": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven an array of non-negative integers arr, you are initially positioned at start\u00a0index of the array. When you are at index i, you can jump\u00a0to i + arr[i] or i - arr[i], check if you can reach to any index with value 0.\nNotice that you can not jump outside of the array at any time.\n\u00a0\nExample 1:\nInput: arr = [4,2,3,0,3,1,2], start = 5\nOutput: true\nExplanation: \nAll possible ways to reach at index 3 with value 0 are: \nindex 5 -> index 4 -> index 1 -> index 3 \nindex 5 -> index 6 -> index 4 -> index 1 -> index 3 \n\nExample 2:\nInput: arr = [4,2,3,0,3,1,2], start = 0\nOutput: true \nExplanation: \nOne possible way to reach at index 3 with value 0 is: \nindex 0 -> index 4 -> index 1 -> index 3\n\nExample 3:\nInput: arr = [3,0,2,1,2], start = 2\nOutput: false\nExplanation: There is no way to reach at index 1 with value 0.\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 5 * 10^4\n0 <= arr[i] <\u00a0arr.length\n0 <= start < arr.length",
    "171": "Generate a code-based solution, with an explanation, for the following task or described function:\nDuff is in love with lovely numbers! A positive integer x is called lovely if and only if there is no such positive integer a > 1 such that a^2 is a divisor of x. [Image] \n\nMalek has a number store! In his store, he has only divisors of positive integer n (and he has all of them). As a birthday present, Malek wants to give her a lovely number from his store. He wants this number to be as big as possible.\n\nMalek always had issues in math, so he asked for your help. Please tell him what is the biggest lovely number in his store.\n\n\n-----Input-----\n\nThe first and only line of input contains one integer, n (1 \u2264 n \u2264 10^12).\n\n\n-----Output-----\n\nPrint the answer in one line.\n\n\n-----Examples-----\nInput\n10\n\nOutput\n10\n\nInput\n12\n\nOutput\n6\n\n\n\n-----Note-----\n\nIn first sample case, there are numbers 1, 2, 5 and 10 in the shop. 10 isn't divisible by any perfect square, so 10 is lovely.\n\nIn second sample case, there are numbers 1, 2, 3, 4, 6 and 12 in the shop. 12 is divisible by 4 = 2^2, so 12 is not lovely, while 6 is indeed lovely.",
    "172": "Generate a code-based solution, with an explanation, for the following task or described function:\nChef has a sequence of $N$ integers, $A_1, A_2, ... , A_N$. He likes this sequence if it contains a  subsequence of $M$ integers, $B_1, B_2, ... , B_M$ within it.\nA subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\nYou will be given a sequence of $N$ integers, $A_1, A_2, ..., A_N$ followed by another sequence of $M$ integers, $B_1, B_2, ..., B_M$. Given these, you have to tell whether Chef likes the sequence of $N$ integers($A_1, A_2, ..., A_N$) or not. \nFormally, output \"Yes\" if\n$\\exists idx_1, idx_2, ..., idx_M | 1 \\le idx_1 < idx_2 < ... < idx_M \\le N$ and $A_{idx_i} = B_i \\forall i, 1 \\le i \\le M$\nOtherwise output \"No\". Note that the quotes are for clarity.\n\n-----Input-----\nThe first line contains a single integer, $T$.\n$T$ test cases follow where each test case contains four lines:\n- The first line of a test case contains a single integer $N$\n- The second line of the test case contains $N$ space separated integers, $A_1, A_2, ..., A_N$\n- The third line of the test case contains a single integer $M$.\n- The fourth line contains $M$ space separated integers, $B_1, B_2, ..., B_M$\nSymbols have usual meanings as described in the statement.\n\n-----Output-----\nFor each test case, output a single line containing the output. Output is \"Yes\" if Chef likes the sequence $A$. Output is \"No\" if Chef dislikes the sequence $A$.\n\n-----Constraints-----\n- $1 \\le T \\le 100$\n- $1 \\le N \\le 10^3$\n- $1 \\le M \\le 10^3$\n- $1 \\le A_i, B_i \\le 10^9$\n\n-----Sample Input-----\n3\n6\n1 2 3 4 5 6\n3\n2 3 4\n6\n22 5 6 33 1 4\n2\n4 15\n4\n1 3 4 2\n2\n1 2\n\n-----Sample Output-----\nYes\nNo\nYes\n\n-----Explanation:-----\nIn sample test case $1$, the sequence $1,2,3,4,5,6$ contains the subsequence $2, 3, 4$. The subsequence is present at indices $1, 2, 3$ of the original sequence.\nHence, $1,2,3,4,5,6$ is a sequence which Chef likes it. Therefore, we output \"Yes\".\nIn sample test case $2$, the subsequence $4, 15$ is not present in sequence $22, 5, 6, 33, 1, 4$. Hence, we output \"No\".\nIn sample test case $3$, the sequence $1, 3, 4, 2$ contains the subsequence $1, 2$. The subsequence is present at indices $0, 3$. Therefore, we output \"Yes\".",
    "173": "Generate a code-based solution, with an explanation, for the following task or described function:\nIn the year of $30XX$ participants of some world programming championship live in a single large hotel. The hotel has $n$ floors. Each floor has $m$ sections with a single corridor connecting all of them. The sections are enumerated from $1$ to $m$ along the corridor, and all sections with equal numbers on different floors are located exactly one above the other. Thus, the hotel can be represented as a rectangle of height $n$ and width $m$. We can denote sections with pairs of integers $(i, j)$, where $i$ is the floor, and $j$ is the section number on the floor.\n\nThe guests can walk along the corridor on each floor, use stairs and elevators. Each stairs or elevator occupies all sections $(1, x)$, $(2, x)$, $\\ldots$, $(n, x)$ for some $x$ between $1$ and $m$. All sections not occupied with stairs or elevators contain guest rooms. It takes one time unit to move between neighboring sections on the same floor or to move one floor up or down using stairs. It takes one time unit to move up to $v$ floors in any direction using an elevator. You can assume you don't have to wait for an elevator, and the time needed to enter or exit an elevator is negligible.\n\nYou are to process $q$ queries. Each query is a question \"what is the minimum time needed to go from a room in section $(x_1, y_1)$ to a room in section $(x_2, y_2)$?\"\n\n\n-----Input-----\n\nThe first line contains five integers $n, m, c_l, c_e, v$ ($2 \\leq n, m \\leq 10^8$, $0 \\leq c_l, c_e \\leq 10^5$, $1 \\leq c_l + c_e \\leq m - 1$, $1 \\leq v \\leq n - 1$)\u00a0\u2014 the number of floors and section on each floor, the number of stairs, the number of elevators and the maximum speed of an elevator, respectively.\n\nThe second line contains $c_l$ integers $l_1, \\ldots, l_{c_l}$ in increasing order ($1 \\leq l_i \\leq m$), denoting the positions of the stairs. If $c_l = 0$, the second line is empty.\n\nThe third line contains $c_e$ integers $e_1, \\ldots, e_{c_e}$ in increasing order, denoting the elevators positions in the same format. It is guaranteed that all integers $l_i$ and $e_i$ are distinct.\n\nThe fourth line contains a single integer $q$ ($1 \\leq q \\leq 10^5$)\u00a0\u2014 the number of queries.\n\nThe next $q$ lines describe queries. Each of these lines contains four integers $x_1, y_1, x_2, y_2$ ($1 \\leq x_1, x_2 \\leq n$, $1 \\leq y_1, y_2 \\leq m$)\u00a0\u2014 the coordinates of starting and finishing sections for the query. It is guaranteed that the starting and finishing sections are distinct. It is also guaranteed that these sections contain guest rooms, i.\u00a0e. $y_1$ and $y_2$ are not among $l_i$ and $e_i$.\n\n\n-----Output-----\n\nPrint $q$ integers, one per line\u00a0\u2014 the answers for the queries.\n\n\n-----Example-----\nInput\n5 6 1 1 3\n2\n5\n3\n1 1 5 6\n1 3 5 4\n3 3 5 3\n\nOutput\n7\n5\n4\n\n\n\n-----Note-----\n\nIn the first query the optimal way is to go to the elevator in the 5-th section in four time units, use it to go to the fifth floor in two time units and go to the destination in one more time unit.\n\nIn the second query it is still optimal to use the elevator, but in the third query it is better to use the stairs in the section 2.",
    "174": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven a wooden stick of length n units. The stick is labelled from 0 to n. For example, a stick of length 6 is labelled as follows:\n\nGiven an integer array cuts\u00a0where cuts[i]\u00a0denotes a position you should perform a cut at.\nYou should perform the cuts in order, you can change the order of the cuts as you wish.\nThe cost of one cut is the length of the stick to be cut, the total cost is the sum of costs of all cuts. When you cut a stick, it will be split into two smaller sticks (i.e. the sum of their lengths is the length of the stick before the cut). Please refer to the first example for a better explanation.\nReturn the minimum total cost of the\u00a0cuts.\n\u00a0\nExample 1:\n\nInput: n = 7, cuts = [1,3,4,5]\nOutput: 16\nExplanation: Using cuts order = [1, 3, 4, 5] as in the input leads to the following scenario:\n\nThe first cut is done to a rod of length 7 so the cost is 7. The second cut is done to a rod of length 6 (i.e. the second part of the first cut), the third is done to a rod of length 4 and the last cut is to a rod of length 3. The total cost is 7 + 6 + 4 + 3 = 20.\nRearranging the cuts to be [3, 5, 1, 4] for example will lead to a scenario with total cost = 16 (as shown in the example photo 7 + 4 + 3 + 2 = 16).\nExample 2:\nInput: n = 9, cuts = [5,6,1,4,2]\nOutput: 22\nExplanation: If you try the given cuts ordering the cost will be 25.\nThere are much ordering with total cost <= 25, for example, the order [4, 6, 5, 2, 1] has total cost = 22 which is the minimum possible.\n\n\u00a0\nConstraints:\n\n2 <= n <= 10^6\n1 <= cuts.length <= min(n - 1, 100)\n1 <= cuts[i] <= n - 1\nAll the integers in cuts\u00a0array are distinct.",
    "175": "Generate a code-based solution, with an explanation, for the following task or described function:\nColonel has n badges. He wants to give one badge to every of his n soldiers. Each badge has a coolness factor, which shows how much it's owner reached. Coolness factor can be increased by one for the cost of one coin. \n\nFor every pair of soldiers one of them should get a badge with strictly higher factor than the second one. Exact values of their factors aren't important, they just need to have distinct factors. \n\nColonel knows, which soldier is supposed to get which badge initially, but there is a problem. Some of badges may have the same factor of coolness. Help him and calculate how much money has to be paid for making all badges have different factors of coolness.\n\n\n-----Input-----\n\nFirst line of input consists of one integer n (1 \u2264 n \u2264 3000).\n\nNext line consists of n integers a_{i} (1 \u2264 a_{i} \u2264 n), which stand for coolness factor of each badge.\n\n\n-----Output-----\n\nOutput single integer \u2014 minimum amount of coins the colonel has to pay.\n\n\n-----Examples-----\nInput\n4\n1 3 1 4\n\nOutput\n1\nInput\n5\n1 2 3 2 5\n\nOutput\n2\n\n\n-----Note-----\n\nIn first sample test we can increase factor of first badge by 1.\n\nIn second sample test we can increase factors of the second and the third badge by 1.",
    "176": "Generate a code-based solution, with an explanation, for the following task or described function:\nAlice and Bob are playing a game with $n$ piles of stones. It is guaranteed that $n$ is an even number. The $i$-th pile has $a_i$ stones.\n\nAlice and Bob will play a game alternating turns with Alice going first.\n\nOn a player's turn, they must choose exactly $\\frac{n}{2}$ nonempty piles and independently remove a positive number of stones from each of the chosen piles. They can remove a different number of stones from the piles in a single turn. The first player unable to make a move loses (when there are less than $\\frac{n}{2}$ nonempty piles).\n\nGiven the starting configuration, determine who will win the game.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($2 \\leq n \\leq 50$)\u00a0\u2014 the number of piles. It is guaranteed that $n$ is an even number.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 50$)\u00a0\u2014 the number of stones in the piles.\n\n\n-----Output-----\n\nPrint a single string \"Alice\" if Alice wins; otherwise, print \"Bob\" (without double quotes).\n\n\n-----Examples-----\nInput\n2\n8 8\n\nOutput\nBob\n\nInput\n4\n3 1 4 1\n\nOutput\nAlice\n\n\n\n-----Note-----\n\nIn the first example, each player can only remove stones from one pile ($\\frac{2}{2}=1$). Alice loses, since Bob can copy whatever Alice does on the other pile, so Alice will run out of moves first.\n\nIn the second example, Alice can remove $2$ stones from the first pile and $3$ stones from the third pile on her first move to guarantee a win.",
    "177": "Generate a code-based solution, with an explanation, for the following task or described function:\nIt\u2019s Christmas time and JW\u2019s $1$-dimensional shop is selling Christmas trees. However, the demand for trees is much higher than the number of trees available. Hence, JW has come up with a special strategy to help decide who gets what tree: a game of Musical Trees!\n\nMusical Trees is much like the game Musical Chairs. There\u2019s a set of trees lined up in a straight ($1$-dimensional) line. At first, everyone starts by wandering around the store while the music is playing. When the music stops, everyone runs to the nearest tree (the tree the smallest distance away) and whoever reaches a tree first gets to the claim that tree. Since people are lazy, they will only ever try to run to the closest tree to them, and hence multiple people may try to get the same tree. Note this means some trees may be unclaimed if they are closest to no one. Also, like in Musical Chairs, no tree can be claimed by more than one person.\n\nThe music has just stopped in Musical Trees and as everyone is running to the closest tree, you want to figure out the number of people who won\u2019t get any tree.\n\n-----Input-----\nThe first line consists the number of people $n$ ($1\\le n\\le 100$) and the number of trees $m$ ($1 \\le m \\le 100$). The next line contains $n$ integers $p_1,p_2,\\ldots ,p_ n$, the positions of all the people when the music stops ($1 \\le p_ i \\le 1000$). The last line contains $m$ integers $t_1,t_2,\\ldots ,t_ m$, the positions of all the trees ($1 \\le t_ i \\le 1000$). No two people or two trees will have the same position. Some people may try to cheat though, and will already be at the same position as a tree when the music stops. Note that if a person has more than one closest tree to them, they will always go for the one with the smallest $t_ i$.\n\n-----Output-----\nOutput the number of people who won\u2019t get a tree.\n\n-----Examples-----\nSample Input 1:\n2 3\n1 4\n2 4 5\nSample Output 1:\n0\n\nSample Input 2:\n3 2\n1 5 10\n4 6\nSample Output 2:\n1",
    "178": "Generate a code-based solution, with an explanation, for the following task or described function:\nThere is a cave.\nThe cave has N rooms and M passages. The rooms are numbered 1 to N, and the passages are numbered 1 to M. Passage i connects Room A_i and Room B_i bidirectionally. One can travel between any two rooms by traversing passages. Room 1 is a special room with an entrance from the outside.\nIt is dark in the cave, so we have decided to place a signpost in each room except Room 1. The signpost in each room will point to one of the rooms directly connected to that room with a passage.\nSince it is dangerous in the cave, our objective is to satisfy the condition below for each room except Room 1.\n - If you start in that room and repeatedly move to the room indicated by the signpost in the room you are in, you will reach Room 1 after traversing the minimum number of passages possible.\nDetermine whether there is a way to place signposts satisfying our objective, and print one such way if it exists.\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq N \\leq 10^5\n - 1 \\leq M \\leq 2 \\times 10^5\n - 1 \\leq A_i, B_i \\leq N\\ (1 \\leq i \\leq M)\n - A_i \\neq B_i\\ (1 \\leq i \\leq M)\n - One can travel between any two rooms by traversing passages.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\nA_1 B_1\n:\nA_M B_M\n\n-----Output-----\nIf there is no way to place signposts satisfying the objective, print No.\nOtherwise, print N lines. The first line should contain Yes, and the i-th line (2 \\leq i \\leq N) should contain the integer representing the room indicated by the signpost in Room i.\n\n-----Sample Input-----\n4 4\n1 2\n2 3\n3 4\n4 2\n\n-----Sample Output-----\nYes\n1\n2\n2\n\nIf we place the signposts as described in the sample output, the following happens:\n - Starting in Room 2, you will reach Room 1 after traversing one passage: (2) \\to 1. This is the minimum number of passages possible.\n - Starting in Room 3, you will reach Room 1 after traversing two passages: (3) \\to 2 \\to 1. This is the minimum number of passages possible.\n - Starting in Room 4, you will reach Room 1 after traversing two passages: (4) \\to 2 \\to 1. This is the minimum number of passages possible.\nThus, the objective is satisfied.",
    "179": "Generate a code-based solution, with an explanation, for the following task or described function:\nWinter is here at the North and the White Walkers are close. John Snow has an army consisting of n soldiers. While the rest of the world is fighting for the Iron Throne, he is going to get ready for the attack of the White Walkers.\n\nHe has created a method to know how strong his army is. Let the i-th soldier\u2019s strength be a_{i}. For some k he calls i_1, i_2, ..., i_{k} a clan if i_1 < i_2 < i_3 < ... < i_{k} and gcd(a_{i}_1, a_{i}_2, ..., a_{i}_{k}) > 1 . He calls the strength of that clan k\u00b7gcd(a_{i}_1, a_{i}_2, ..., a_{i}_{k}). Then he defines the strength of his army by the sum of strengths of all possible clans.\n\nYour task is to find the strength of his army. As the number may be very large, you have to print it modulo 1000000007 (10^9 + 7).\n\nGreatest common divisor (gcd) of a sequence of integers is the maximum possible integer so that each element of the sequence is divisible by it.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 200000)\u00a0\u2014 the size of the army.\n\nThe second line contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 1000000)\u00a0\u2014 denoting the strengths of his soldiers.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the strength of John Snow's army modulo 1000000007 (10^9 + 7).\n\n\n-----Examples-----\nInput\n3\n3 3 1\n\nOutput\n12\n\nInput\n4\n2 3 4 6\n\nOutput\n39\n\n\n\n-----Note-----\n\nIn the first sample the clans are {1}, {2}, {1, 2} so the answer will be 1\u00b73 + 1\u00b73 + 2\u00b73 = 12",
    "180": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven an array of integers A, find the number of\u00a0triples of indices (i, j, k)\u00a0such that:\n\n0 <= i < A.length\n0 <= j < A.length\n0 <= k < A.length\nA[i]\u00a0& A[j]\u00a0& A[k] == 0, where &\u00a0represents the bitwise-AND operator.\n\n\u00a0\nExample 1:\nInput: [2,1,3]\nOutput: 12\nExplanation: We could choose the following i, j, k triples:\n(i=0, j=0, k=1) : 2 & 2 & 1\n(i=0, j=1, k=0) : 2 & 1 & 2\n(i=0, j=1, k=1) : 2 & 1 & 1\n(i=0, j=1, k=2) : 2 & 1 & 3\n(i=0, j=2, k=1) : 2 & 3 & 1\n(i=1, j=0, k=0) : 1 & 2 & 2\n(i=1, j=0, k=1) : 1 & 2 & 1\n(i=1, j=0, k=2) : 1 & 2 & 3\n(i=1, j=1, k=0) : 1 & 1 & 2\n(i=1, j=2, k=0) : 1 & 3 & 2\n(i=2, j=0, k=1) : 3 & 2 & 1\n(i=2, j=1, k=0) : 3 & 1 & 2\n\n\u00a0\nNote:\n\n1 <= A.length <= 1000\n0 <= A[i] < 2^16",
    "181": "Generate a code-based solution, with an explanation, for the following task or described function:\nVisuAlgo (http://visualgo.net) is a website developed by a team of staff and students of School of Computing, National University of Singapore, the host of the 2015 ACM-ICPC Asia Singapore Regional. VisuAlgo visualizes a number of popular data structures and algorithms in the Computer Science curriculum. Currently, it receives approximately 2000 hits/day from CS students and instructors worldwide.\n\nOne new feature of VisuAlgo is the online quiz. As an example, the above figure shows a question about the classic Single-Source (Single-Destination) Shortest Paths problem in graph theory. The beauty of this online quiz feature is that the question parameters are randomized. The drawn graph G is taken from a collection of hundreds of directed weighted graphs (with their 2-D layouts) in VisuAlgo\u2019s internal database. The graph G has $V$ vertices numbered from $[0..V-1]$. The source vertex $s$ and the destination vertex $t$ are selected at random from $[0..V-1]$.\n\nHowever, such randomization of the question parameters may produce either a trivial question (e.g. \u201cNo Answer\u201d when $s$ and $t$ are disconnected, $0$ when $s = t$, simple tracing of a path if there is only a single unique path from $s$ to $t$ as shown in the above figure) or insanely difficult question to be computed manually if there are too many possible shortest paths from $s$ to $t$.\n\nThe developers of VisuAlgo want to calibrate such Shortest Paths question with randomized parameters so that it is possible for a normal Computer Science student to answer the randomly generated question manually within a reasonable amount of time. Please help them.\n\n-----Input-----\nThe first line of input contains two non-negative integers $1 \\leq V \\leq 10000$ and $0 \\leq E \\leq 200000$, giving the number of vertices and edges of the drawn graph G.\n\nThereafter follow\u00a0$E$ lines, each describing the directed weighted edges in G by three integers $0 \\leq u, v \\leq V-1$ and $1 \\leq w \\leq 99$ (VisuAlgo limits the edge weight to be at most 2 characters for visual aesthetic purpose), where\u00a0$u$ and\u00a0$v$ are the vertex numbers and\u00a0$w$ is the weight of the directed edge $u \\rightarrow v$. It is guaranteed that G is a simple graph without self-loops or multiple directed edges with the same direction between the same pair of vertices.\n\nFinally, there are two integers in the last line of input $0 \\leq s, t \\leq V-1$.\n\n-----Output-----\nPrint a line with the number of different shortest paths between $s$ to $t$ in G. Two shortest paths $p_1$ and $p_2$ are considered different if there exists at least one edge in $p_1$ that is not found in $p_2$. It is guaranteed that the answer fits in a 32-bit signed integer data type.\n\n-----Examples-----\nSample Input 1:\n6 10\n0 1 26\n1 3 29\n1 5 9\n2 3 25\n2 4 43\n4 2 3\n5 0 13\n5 2 33\n5 3 18\n5 4 58\n5 1\nSample Output 1:\n1\n\nSample Input 2:\n7 9\n0 1 1\n0 2 2\n1 2 1\n2 3 1\n2 4 3\n3 4 1\n4 5 1\n4 6 2\n5 6 1\n0 6\nSample Output 2:\n4",
    "182": "Generate a code-based solution, with an explanation, for the following task or described function:\nGiven a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area.\n\nExample:\n\n\nInput:\n[\n  [\"1\",\"0\",\"1\",\"0\",\"0\"],\n  [\"1\",\"0\",\"1\",\"1\",\"1\"],\n  [\"1\",\"1\",\"1\",\"1\",\"1\"],\n  [\"1\",\"0\",\"0\",\"1\",\"0\"]\n]\nOutput: 6",
    "183": "Generate a code-based solution, with an explanation, for the following task or described function:\nA matrix of size $n \\times m$ is called nice, if all rows and columns of the matrix are palindromes. A sequence of integers $(a_1, a_2, \\dots , a_k)$ is a palindrome, if for any integer $i$ ($1 \\le i \\le k$) the equality $a_i = a_{k - i + 1}$ holds.\n\nSasha owns a matrix $a$ of size $n \\times m$. In one operation he can increase or decrease any number in the matrix by one. Sasha wants to make the matrix nice. He is interested what is the minimum number of operations he needs.\n\nHelp him!\n\n\n-----Input-----\n\nThe first line contains a single integer $t$\u00a0\u2014 the number of test cases ($1 \\le t \\le 10$). The $t$ tests follow.\n\nThe first line of each test contains two integers $n$ and $m$ ($1 \\le n, m \\le 100$)\u00a0\u2014 the size of the matrix.\n\nEach of the next $n$ lines contains $m$ integers $a_{i, j}$ ($0 \\le a_{i, j} \\le 10^9$)\u00a0\u2014 the elements of the matrix.\n\n\n-----Output-----\n\nFor each test output the smallest number of operations required to make the matrix nice.\n\n\n-----Example-----\nInput\n2\n4 2\n4 2\n2 4\n4 2\n2 4\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 18\n\nOutput\n8\n42\n\n\n\n-----Note-----\n\nIn the first test case we can, for example, obtain the following nice matrix in $8$ operations:\n\n\n\n2 2\n\n4 4\n\n4 4\n\n2 2\n\n\n\nIn the second test case we can, for example, obtain the following nice matrix in $42$ operations:\n\n\n\n5 6 6 5\n\n6 6 6 6\n\n5 6 6 5",
    "184": "Generate a code-based solution, with an explanation, for the following task or described function:\nTanya wants to go on a journey across the cities of Berland. There are $n$ cities situated along the main railroad line of Berland, and these cities are numbered from $1$ to $n$. \n\nTanya plans her journey as follows. First of all, she will choose some city $c_1$ to start her journey. She will visit it, and after that go to some other city $c_2 > c_1$, then to some other city $c_3 > c_2$, and so on, until she chooses to end her journey in some city $c_k > c_{k - 1}$. So, the sequence of visited cities $[c_1, c_2, \\dots, c_k]$ should be strictly increasing.\n\nThere are some additional constraints on the sequence of cities Tanya visits. Each city $i$ has a beauty value $b_i$ associated with it. If there is only one city in Tanya's journey, these beauty values imply no additional constraints. But if there are multiple cities in the sequence, then for any pair of adjacent cities $c_i$ and $c_{i + 1}$, the condition $c_{i + 1} - c_i = b_{c_{i + 1}} - b_{c_i}$ must hold.\n\nFor example, if $n = 8$ and $b = [3, 4, 4, 6, 6, 7, 8, 9]$, there are several three possible ways to plan a journey:  $c = [1, 2, 4]$;  $c = [3, 5, 6, 8]$;  $c = [7]$ (a journey consisting of one city is also valid). \n\nThere are some additional ways to plan a journey that are not listed above.\n\nTanya wants her journey to be as beautiful as possible. The beauty value of the whole journey is the sum of beauty values over all visited cities. Can you help her to choose the optimal plan, that is, to maximize the beauty value of the journey?\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of cities in Berland.\n\nThe second line contains $n$ integers $b_1$, $b_2$, ..., $b_n$ ($1 \\le b_i \\le 4 \\cdot 10^5$), where $b_i$ is the beauty value of the $i$-th city.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum beauty of a journey Tanya can choose.\n\n\n-----Examples-----\nInput\n6\n10 7 1 9 10 15\n\nOutput\n26\n\nInput\n1\n400000\n\nOutput\n400000\n\nInput\n7\n8 9 26 11 12 29 14\n\nOutput\n55\n\n\n\n-----Note-----\n\nThe optimal journey plan in the first example is $c = [2, 4, 5]$.\n\nThe optimal journey plan in the second example is $c = [1]$.\n\nThe optimal journey plan in the third example is $c = [3, 6]$.",
    "185": "Generate a code-based solution, with an explanation, for the following task or described function:\nSnuke has an integer sequence A of length N.\nHe will freely choose an integer b.\nHere, he will get sad if A_i and b+i are far from each other.\nMore specifically, the sadness of Snuke is calculated as follows:\n - abs(A_1 - (b+1)) + abs(A_2 - (b+2)) + ... + abs(A_N - (b+N))\nHere, abs(x) is a function that returns the absolute value of x.\nFind the minimum possible sadness of Snuke.\n\n-----Constraints-----\n - 1 \\leq N \\leq 2 \\times 10^5\n - 1 \\leq A_i \\leq 10^9\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_N\n\n-----Output-----\nPrint the minimum possible sadness of Snuke.\n\n-----Sample Input-----\n5\n2 2 3 5 5\n\n-----Sample Output-----\n2\n\nIf we choose b=0, the sadness of Snuke would be abs(2-(0+1))+abs(2-(0+2))+abs(3-(0+3))+abs(5-(0+4))+abs(5-(0+5))=2.\nAny choice of b does not make the sadness of Snuke less than 2, so the answer is 2.",
    "186": "Generate a code-based solution, with an explanation, for the following task or described function:\nTakahashi has a string S consisting of lowercase English letters.\nStarting with this string, he will produce a new one in the procedure given as follows.\nThe procedure consists of Q operations. In Operation i (1 \\leq i \\leq Q), an integer T_i is provided, which means the following:\n - If T_i = 1: reverse the string S.\n - If T_i = 2: An integer F_i and a lowercase English letter C_i are additionally provided.\n - If F_i = 1 : Add C_i to the beginning of the string S.\n - If F_i = 2 : Add C_i to the end of the string S.\nHelp Takahashi by finding the final string that results from the procedure.\n\n-----Constraints-----\n - 1 \\leq |S| \\leq 10^5\n - S consists of lowercase English letters.\n - 1 \\leq Q \\leq 2 \\times 10^5\n - T_i = 1 or 2.\n - F_i = 1 or 2, if provided.\n - C_i is a lowercase English letter, if provided.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nS\nQ\nQuery_1\n:\nQuery_Q\n\nIn the 3-rd through the (Q+2)-th lines, Query_i is one of the following:\n1\n\nwhich means T_i = 1, and:\n2 F_i C_i\n\nwhich means T_i = 2.\n\n-----Output-----\nPrint the resulting string.\n\n-----Sample Input-----\na\n4\n2 1 p\n1\n2 2 c\n1\n\n-----Sample Output-----\ncpa\n\nThere will be Q = 4 operations. Initially, S is a.\n - Operation 1: Add p at the beginning of S. S becomes pa.\n - Operation 2: Reverse S. S becomes ap.\n - Operation 3: Add c at the end of S. S becomes apc.\n - Operation 4: Reverse S. S becomes cpa.\nThus, the resulting string is cpa.",
    "187": "Generate a code-based solution, with an explanation, for the following task or described function:\nA robot is initially at $(0,0)$ on the cartesian plane. It can move in 4 directions - up, down, left, right denoted by letter u, d, l, r respectively. More formally:\n- if the position of robot is $(x,y)$ then u makes it $(x,y+1)$\n- if the position of robot is $(x,y)$ then l makes it $(x-1,y)$\n- if the position of robot is $(x,y)$ then d makes it $(x,y-1)$\n- if the position of robot is $(x,y)$ then r makes it $(x+1,y)$\nThe robot is performing a counter-clockwise spiral movement such that his movement can be represented by the following sequence of moves -\nulddrruuulllddddrrrruuuuu\u2026 and so on.\nA single move takes 1 sec. You have to find out the position of the robot on the cartesian plane at $t$ second.\n\n-----Input:-----\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains a single integer $t$.\n\n-----Output:-----\nFor each test case, print two space-separated integers, $(x,y)$ \u2014 the position of the robot.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^6$\n- $1 \\leq t \\leq 10^{18}$\n\n-----Sample Input:-----\n5\n1\n2\n3\n50\n12233443\n\n-----Sample Output:-----\n0 1\n-1 1\n-1 0\n2 4\n-1749 812",
    "188": "Generate a code-based solution, with an explanation, for the following task or described function:\nAn SNS has N users - User 1, User 2, \\cdots, User N.\nBetween these N users, there are some relationships - M friendships and K blockships.\nFor each i = 1, 2, \\cdots, M, there is a bidirectional friendship between User A_i and User B_i.\nFor each i = 1, 2, \\cdots, K, there is a bidirectional blockship between User C_i and User D_i.\nWe define User a to be a friend candidate for User b when all of the following four conditions are satisfied:\n - a \\neq b.\n - There is not a friendship between User a and User b.\n - There is not a blockship between User a and User b.\n - There exists a sequence c_0, c_1, c_2, \\cdots, c_L consisting of integers between 1 and N (inclusive) such that c_0 = a, c_L = b, and there is a friendship between User c_i and c_{i+1} for each i = 0, 1, \\cdots, L - 1.\nFor each user i = 1, 2, ... N, how many friend candidates does it have?\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \u2264 N \u2264 10^5\n - 0 \\leq M \\leq 10^5\n - 0 \\leq K \\leq 10^5\n - 1 \\leq A_i, B_i \\leq N\n - A_i \\neq B_i\n - 1 \\leq C_i, D_i \\leq N\n - C_i \\neq D_i\n - (A_i, B_i) \\neq (A_j, B_j) (i \\neq j)\n - (A_i, B_i) \\neq (B_j, A_j)\n - (C_i, D_i) \\neq (C_j, D_j) (i \\neq j)\n - (C_i, D_i) \\neq (D_j, C_j)\n - (A_i, B_i) \\neq (C_j, D_j)\n - (A_i, B_i) \\neq (D_j, C_j)\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M K\nA_1 B_1\n\\vdots\nA_M B_M\nC_1 D_1\n\\vdots\nC_K D_K\n\n-----Output-----\nPrint the answers in order, with space in between.\n\n-----Sample Input-----\n4 4 1\n2 1\n1 3\n3 2\n3 4\n4 1\n\n-----Sample Output-----\n0 1 0 1\n\nThere is a friendship between User 2 and 3, and between 3 and 4. Also, there is no friendship or blockship between User 2 and 4. Thus, User 4 is a friend candidate for User 2.\nHowever, neither User 1 or 3 is a friend candidate for User 2, so User 2 has one friend candidate.",
    "189": "Generate a code-based solution, with an explanation, for the following task or described function:\nA string is called beautiful if no two consecutive characters are equal. For example, \"ababcb\", \"a\" and \"abab\" are beautiful strings, while \"aaaaaa\", \"abaa\" and \"bb\" are not.\n\nAhcl wants to construct a beautiful string. He has a string $s$, consisting of only characters 'a', 'b', 'c' and '?'. Ahcl needs to replace each character '?' with one of the three characters 'a', 'b' or 'c', such that the resulting string is beautiful. Please help him!\n\nMore formally, after replacing all characters '?', the condition $s_i \\neq s_{i+1}$ should be satisfied for all $1 \\leq i \\leq |s| - 1$, where $|s|$ is the length of the string $s$.\n\n\n-----Input-----\n\nThe first line contains positive integer $t$ ($1 \\leq t \\leq 1000$)\u00a0\u2014 the number of test cases. Next $t$ lines contain the descriptions of test cases.\n\nEach line contains a non-empty string $s$ consisting of only characters 'a', 'b', 'c' and '?'. \n\nIt is guaranteed that in each test case a string $s$ has at least one character '?'. The sum of lengths of strings $s$ in all test cases does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case given in the input print the answer in the following format:\n\n  If it is impossible to create a beautiful string, print \"-1\" (without quotes);  Otherwise, print the resulting beautiful string after replacing all '?' characters. If there are multiple answers, you can print any of them. \n\n\n-----Example-----\nInput\n3\na???cb\na??bbc\na?b?c\n\nOutput\nababcb\n-1\nacbac\n\n\n\n-----Note-----\n\nIn the first test case, all possible correct answers are \"ababcb\", \"abcacb\", \"abcbcb\", \"acabcb\" and \"acbacb\". The two answers \"abcbab\" and \"abaabc\" are incorrect, because you can replace only '?' characters and the resulting string must be beautiful.\n\nIn the second test case, it is impossible to create a beautiful string, because the $4$-th and $5$-th characters will be always equal.\n\nIn the third test case, the only answer is \"acbac\".",
    "190": "Generate a code-based solution, with an explanation, for the following task or described function:\nA new set of desks just arrived, and it's about time! Things were getting quite cramped in the office. You've been put in charge of creating a new seating chart for the engineers. The desks are numbered, and you sent out a survey to the engineering team asking each engineer the number of the desk they currently sit at, and the number of the desk they would like to sit at (which may be the same as their current desk). Each engineer must either remain where they sit, or move to the desired seat they indicated in the survey. No two engineers currently sit at the same desk, nor may any two engineers sit at the same desk in the new seating arrangement.\n\nHow many seating arrangements can you create that meet the specified requirements? The answer may be very large, so compute it modulo 1000000007 = 10^9 + 7.\n\n\n-----Input-----\n\nInput will begin with a line containing N (1 \u2264 N \u2264 100000), the number of engineers. \n\nN lines follow, each containing exactly two integers. The i-th line contains the number of the current desk of the i-th engineer and the number of the desk the i-th engineer wants to move to. Desks are numbered from 1 to 2\u00b7N. It is guaranteed that no two engineers sit at the same desk.\n\n\n-----Output-----\n\nPrint the number of possible assignments, modulo 1000000007 = 10^9 + 7.\n\n\n-----Examples-----\nInput\n4\n1 5\n5 2\n3 7\n7 3\n\nOutput\n6\n\nInput\n5\n1 10\n2 10\n3 10\n4 10\n5 5\n\nOutput\n5\n\n\n\n-----Note-----\n\nThese are the possible assignments for the first example:   1 5 3 7  1 2 3 7  5 2 3 7  1 5 7 3  1 2 7 3  5 2 7 3",
    "191": "Generate a code-based solution, with an explanation, for the following task or described function:\nThe Little Elephant from the Zoo of Lviv is going to the Birthday Party of  the Big Hippo tomorrow. Now he wants to prepare a gift for the Big Hippo.\n\nHe has N balloons, numbered from 1 to N. The i-th balloon has the color Ci and it costs Pi dollars. The gift for the Big Hippo will be any subset (chosen randomly, possibly empty) of the balloons such that the number of different colors in that subset is at least M.\n\nHelp Little Elephant to find the expected cost of the gift.\n\n-----Input-----\nThe first line of the input contains a single integer T - the number of test cases. T test cases follow. The first line of each test case contains a pair of integers N and M. The next N lines contain N pairs of integers Ci and Pi, one pair per line.\n\n-----Output-----\nIn T lines print T real numbers - the answers for the corresponding test cases. Your answer will considered correct if it has at most 10^-6 absolute or relative error.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 40\n- 1 \u2264 N,  Ci\u2264 40\n- 1 \u2264 Pi \u2264 1000000\n- 0 \u2264 M \u2264 K, where K is the number of different colors in the test case.\n\n-----Example-----\nInput:\n2\n2 2\n1 4\n2 7\n2 1\n1 4\n2 7\n\nOutput:\n11.000000000\n7.333333333",
    "192": "Generate a code-based solution, with an explanation, for the following task or described function:\nn evenly spaced points have been marked around the edge of a circle. There is a number written at each point. You choose a positive real number k. Then you may repeatedly select a set of 2 or more points which are evenly spaced, and either increase all numbers at points in the set by k or decrease all numbers at points in the set by k. You would like to eventually end up with all numbers equal to 0. Is it possible?\n\nA set of 2 points is considered evenly spaced if they are diametrically opposed, and a set of 3 or more points is considered evenly spaced if they form a regular polygon.\n\n\n-----Input-----\n\nThe first line of input contains an integer n (3 \u2264 n \u2264 100000), the number of points along the circle.\n\nThe following line contains a string s with exactly n digits, indicating the numbers initially present at each of the points, in clockwise order.\n\n\n-----Output-----\n\nPrint \"YES\" (without quotes) if there is some sequence of operations that results in all numbers being 0, otherwise \"NO\" (without quotes).\n\nYou can print each letter in any case (upper or lower).\n\n\n-----Examples-----\nInput\n30\n000100000100000110000000001100\n\nOutput\nYES\n\nInput\n6\n314159\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIf we label the points from 1 to n, then for the first test case we can set k = 1. Then we increase the numbers at points 7 and 22 by 1, then decrease the numbers at points 7, 17, and 27 by 1, then decrease the numbers at points 4, 10, 16, 22, and 28 by 1.",
    "193": "Generate a code-based solution, with an explanation, for the following task or described function:\nThe clique problem is one of the most well-known NP-complete problems. Under some simplification it can be formulated as follows. Consider an undirected graph G. It is required to find a subset of vertices C of the maximum size such that any two of them are connected by an edge in graph G. Sounds simple, doesn't it? Nobody yet knows an algorithm that finds a solution to this problem in polynomial time of the size of the graph. However, as with many other NP-complete problems, the clique problem is easier if you consider a specific type of a graph.\n\nConsider n distinct points on a line. Let the i-th point have the coordinate x_{i} and weight w_{i}. Let's form graph G, whose vertices are these points and edges connect exactly the pairs of points (i, j), such that the distance between them is not less than the sum of their weights, or more formally: |x_{i} - x_{j}| \u2265 w_{i} + w_{j}.\n\nFind the size of the maximum clique in such graph.\n\n\n-----Input-----\n\nThe first line contains the integer n (1 \u2264 n \u2264 200 000) \u2014 the number of points.\n\nEach of the next n lines contains two numbers x_{i}, w_{i} (0 \u2264 x_{i} \u2264 10^9, 1 \u2264 w_{i} \u2264 10^9) \u2014 the coordinate and the weight of a point. All x_{i} are different.\n\n\n-----Output-----\n\nPrint a single number \u2014 the number of vertexes in the maximum clique of the given graph.\n\n\n-----Examples-----\nInput\n4\n2 3\n3 1\n6 1\n0 2\n\nOutput\n3\n\n\n\n-----Note-----\n\nIf you happen to know how to solve this problem without using the specific properties of the graph formulated in the problem statement, then you are able to get a prize of one million dollars!\n\nThe picture for the sample test. [Image]",
    "194": "Generate a code-based solution, with an explanation, for the following task or described function:\nOne day Vasya came up to the blackboard and wrote out n distinct integers from 1 to n in some order in a circle. Then he drew arcs to join the pairs of integers (a, b) (a \u2260 b), that are either each other's immediate neighbors in the circle, or there is number c, such that a and \u0441 are immediate neighbors, and b and c are immediate neighbors. As you can easily deduce, in the end Vasya drew 2\u00b7n arcs.\n\nFor example, if the numbers are written in the circle in the order 1, 2, 3, 4, 5 (in the clockwise direction), then the arcs will join pairs of integers (1, 2), (2, 3), (3, 4), (4, 5), (5, 1), (1, 3), (2, 4), (3, 5), (4, 1) and (5, 2).\n\nMuch time has passed ever since, the numbers we wiped off the blackboard long ago, but recently Vasya has found a piece of paper with 2\u00b7n written pairs of integers that were joined with the arcs on the board. Vasya asks you to find the order of numbers in the circle by these pairs.\n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (5 \u2264 n \u2264 10^5) that shows, how many numbers were written on the board. Next 2\u00b7n lines contain pairs of integers a_{i}, b_{i} (1 \u2264 a_{i}, b_{i} \u2264 n, a_{i} \u2260 b_{i}) \u2014 the numbers that were connected by the arcs.\n\nIt is guaranteed that no pair of integers, connected by a arc, occurs in the input more than once. The pairs of numbers and the numbers in the pairs are given in the arbitrary order.\n\n\n-----Output-----\n\nIf Vasya made a mistake somewhere and there isn't any way to place numbers from 1 to n on the circle according to the statement, then print a single number \"-1\" (without the quotes). Otherwise, print any suitable sequence of n distinct integers from 1 to n. \n\nIf there are multiple solutions, you are allowed to print any of them. Specifically, it doesn't matter which number you write first to describe the sequence of the order. It also doesn't matter whether you write out the numbers in the clockwise or counter-clockwise direction.\n\n\n-----Examples-----\nInput\n5\n1 2\n2 3\n3 4\n4 5\n5 1\n1 3\n2 4\n3 5\n4 1\n5 2\n\nOutput\n1 2 3 4 5 \nInput\n6\n5 6\n4 3\n5 3\n2 4\n6 1\n3 1\n6 2\n2 5\n1 4\n3 6\n1 2\n4 5\n\nOutput\n1 2 4 5 3 6",
    "195": "Generate a code-based solution, with an explanation, for the following task or described function:\nChef likes problems which using some math. Now he asks you to solve next one. You have 4 integers, Chef wondering is there non-empty subset which has sum equals 0.\n\n-----Input-----\nThe first line of input contains T - number of test cases. \nEach of the next T lines containing four pairwise distinct integer numbers - a, b, c, d.\n\n-----Output-----\nFor each test case output \"Yes\", if possible to get 0 by choosing non-empty subset of {a, b, c, d} with sum equal 0, or \"No\" in another case.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 103\n- -106 \u2264 a, b, c, d \u2264 106 \n\n-----Example-----\nInput:\n3\n1 2 0 3\n1 2 4 -1\n1 2 3 4\n\nOutput:\nYes\nYes\nNo\n\n-----Explanation-----\nExample case 1. We can choose subset {0} \nExample case 2. We can choose subset {-1, 1}",
    "196": "Generate a code-based solution, with an explanation, for the following task or described function:\nToday, Chef has a fencing job at hand and has to fence up a surface covering N$N$ points. \nTo minimize his work, he started looking for an algorithm that had him fence the least amount of length. \nHe came up with the Convex Hull algorithm, but soon realized it gave him some random shape to fence. However, Chef likes rectangles and has a favourite number M$M$. \nHelp him find the minimum perimeter he has to fence if he wants to fence a rectangle, with slope of one of the sides as M$M$, to cover all the points.\n\n-----Input:-----\n- The first line contains two integers N$N$ and M$M$, the number of points and the Chef's favourite Number.\n- The next n lines contain two space separated integers X$X$ and Y$Y$, the coordinates of the point.\n\n-----Output:-----\nPrint a single decimal number, denoting the perimeter of the rectangle. Answer will considered correct if it has absolute error less than 10\u22126$10^{-6}$.\n\n-----Constraints-----\n- 2\u2264N\u22641000000$2 \\leq N \\leq 1000000$\n- \u22121000\u2264M\u22641000$-1000 \\leq M \\leq 1000$\n- \u22121000000\u2264X\u22641000000$-1000000 \\leq X \\leq 1000000$\n- \u22121000000\u2264Y\u22641000000$-1000000 \\leq Y \\leq 1000000$\n\n-----Sample Input:-----\n4 1\n0 1\n0 -1\n1 0\n-1 0\n\n-----Sample Output:-----\n5.656854249492380\n\n-----Note:-----\n- As the input size is large, it is recommended to use Fast IO.",
    "197": "Generate a code-based solution, with an explanation, for the following task or described function:\nThe Little Elephant loves lucky strings. Everybody knows that the lucky string is a string of digits that contains only the lucky digits 4 and 7. For example, strings \"47\", \"744\", \"4\" are lucky while \"5\", \"17\", \"467\" are not.\n\nThe Little Elephant has the strings A and B of digits. These strings are of equal lengths, that is |A| = |B|. He wants to get some lucky string from them. For this he performs the following operations. At first he arbitrary reorders digits of A. Then he arbitrary reorders digits of B. After that he creates the string C such that its i-th digit is the maximum between the i-th digit of A and the i-th digit of B. In other words, C[i] = max{A[i], B[i]} for i from 1 to |A|. After that he removes from C all non-lucky digits saving the order of the remaining (lucky) digits. So C now becomes a lucky string. For example, if after reordering A = \"754\" and B = \"873\", then C is at first \"874\" and then it becomes \"74\".\n\nThe Little Elephant wants the resulting string to be as lucky as possible. The formal definition of this is that the resulting string should be the lexicographically greatest possible string among all the strings that can be obtained from the given strings A and B by the described process.\nNotes\n- |A| denotes the length of the string A.\n- A[i] denotes the i-th digit of the string A. Here we numerate the digits starting from 1. So 1 \u2264 i \u2264 |A|.\n- The string A is called lexicographically greater than the string B if either there exists some index i such that A[i] > B[i] and for each j < i we have A[j] = B[j], or B is a proper prefix of A, that is, |A| > |B| and first |B| digits of A coincide with the corresponding digits of B.\n\n-----Input-----\n\nThe first line of the input contains a single integer T, the number of test cases. T test cases follow. Each test case consists of two lines. The first line contains the string A. The second line contains the string B.\n\n-----Output-----\n\nFor each test case output a single line containing the answer for the corresponding test case. Note, that the answer can be an empty string. In this case you should print an empty line for the corresponding test case.\n\n-----Constraints-----\n1 \u2264 T \u2264 10000\n1 \u2264 |A| \u2264 20000\n\n|A| = |B|\n\nEach character of A and B is a digit.\n\nSum of |A| across all the tests in the input does not exceed 200000.\n\n-----Example-----\nInput:\n4\n4\n7\n435\n479\n7\n8\n1675475\n9756417\n\nOutput:\n7\n74\n\n777744\n\n-----Explanation-----\nCase 1. In this case the only possible string C we can get is \"7\" and it is the lucky string.\n\nCase 2. If we reorder A and B as A = \"543\" and B = \"749\" the string C will be at first \"749\" and then becomes \"74\". It can be shown that this is the lexicographically greatest string for the given A and B.\n\nCase 3. In this case the only possible string C we can get is \"8\" and it becomes and empty string after removing of non-lucky digits.\n\nCase 4. If we reorder A and B as A = \"7765541\" and B = \"5697714\" the string C will be at first \"7797744\" and then becomes \"777744\". Note that we can construct any lexicographically greater string for the given A and B since we have only four \"sevens\" and two \"fours\" among digits of both strings A and B as well the constructed string \"777744\".",
    "198": "Generate a code-based solution, with an explanation, for the following task or described function:\nLunar New Year is approaching, and Bob decides to take a wander in a nearby park.\n\nThe park can be represented as a connected graph with $n$ nodes and $m$ bidirectional edges. Initially Bob is at the node $1$ and he records $1$ on his notebook. He can wander from one node to another through those bidirectional edges. Whenever he visits a node not recorded on his notebook, he records it. After he visits all nodes at least once, he stops wandering, thus finally a permutation of nodes $a_1, a_2, \\ldots, a_n$ is recorded.\n\nWandering is a boring thing, but solving problems is fascinating. Bob wants to know the lexicographically smallest sequence of nodes he can record while wandering. Bob thinks this problem is trivial, and he wants you to solve it.\n\nA sequence $x$ is lexicographically smaller than a sequence $y$ if and only if one of the following holds:   $x$ is a prefix of $y$, but $x \\ne y$ (this is impossible in this problem as all considered sequences have the same length);  in the first position where $x$ and $y$ differ, the sequence $x$ has a smaller element than the corresponding element in $y$. \n\n\n-----Input-----\n\nThe first line contains two positive integers $n$ and $m$ ($1 \\leq n, m \\leq 10^5$), denoting the number of nodes and edges, respectively.\n\nThe following $m$ lines describe the bidirectional edges in the graph. The $i$-th of these lines contains two integers $u_i$ and $v_i$ ($1 \\leq u_i, v_i \\leq n$), representing the nodes the $i$-th edge connects.\n\nNote that the graph can have multiple edges connecting the same two nodes and self-loops. It is guaranteed that the graph is connected.\n\n\n-----Output-----\n\nOutput a line containing the lexicographically smallest sequence $a_1, a_2, \\ldots, a_n$ Bob can record.\n\n\n-----Examples-----\nInput\n3 2\n1 2\n1 3\n\nOutput\n1 2 3 \n\nInput\n5 5\n1 4\n3 4\n5 4\n3 2\n1 5\n\nOutput\n1 4 3 2 5 \n\nInput\n10 10\n1 4\n6 8\n2 5\n3 7\n9 4\n5 6\n3 4\n8 10\n8 9\n1 10\n\nOutput\n1 4 3 7 9 8 6 5 2 10 \n\n\n\n-----Note-----\n\nIn the first sample, Bob's optimal wandering path could be $1 \\rightarrow 2 \\rightarrow 1 \\rightarrow 3$. Therefore, Bob will obtain the sequence $\\{1, 2, 3\\}$, which is the lexicographically smallest one.\n\nIn the second sample, Bob's optimal wandering path could be $1 \\rightarrow 4 \\rightarrow 3 \\rightarrow 2 \\rightarrow 3 \\rightarrow 4 \\rightarrow 1 \\rightarrow 5$. Therefore, Bob will obtain the sequence $\\{1, 4, 3, 2, 5\\}$, which is the lexicographically smallest one.",
    "199": "Generate a code-based solution, with an explanation, for the following task or described function:\nCaptain Bill the Hummingbird and his crew recieved an interesting challenge offer. Some stranger gave them a map, potion of teleportation and said that only this potion might help them to reach the treasure. \n\nBottle with potion has two values x and y written on it. These values define four moves which can be performed using the potion:\n\n  $(a, b) \\rightarrow(a + x, b + y)$  $(a, b) \\rightarrow(a + x, b - y)$  $(a, b) \\rightarrow(a - x, b + y)$  $(a, b) \\rightarrow(a - x, b - y)$ \n\nMap shows that the position of Captain Bill the Hummingbird is (x_1, y_1) and the position of the treasure is (x_2, y_2).\n\nYou task is to tell Captain Bill the Hummingbird whether he should accept this challenge or decline. If it is possible for Captain to reach the treasure using the potion then output \"YES\", otherwise \"NO\" (without quotes).\n\nThe potion can be used infinite amount of times.\n\n\n-----Input-----\n\nThe first line contains four integer numbers x_1, y_1, x_2, y_2 ( - 10^5 \u2264 x_1, y_1, x_2, y_2 \u2264 10^5) \u2014 positions of Captain Bill the Hummingbird and treasure respectively.\n\nThe second line contains two integer numbers x, y (1 \u2264 x, y \u2264 10^5) \u2014 values on the potion bottle.\n\n\n-----Output-----\n\nPrint \"YES\" if it is possible for Captain to reach the treasure using the potion, otherwise print \"NO\" (without quotes).\n\n\n-----Examples-----\nInput\n0 0 0 6\n2 3\n\nOutput\nYES\n\nInput\n1 1 3 6\n1 5\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first example there exists such sequence of moves:\n\n  $(0,0) \\rightarrow(2,3)$ \u2014 the first type of move  $(2,3) \\rightarrow(0,6)$ \u2014 the third type of move",
    "200": "Generate a code-based solution, with an explanation, for the following task or described function:\nSheila is a student and she drives a typical student car: it is old, slow, rusty, and falling apart. Recently, the needle on the speedometer fell off. She glued it back on, but she might have placed it at the wrong angle. Thus, when the speedometer reads $s$, her true speed is $s+c$, where $c$ is an unknown constant (possibly negative). \n\nSheila made a careful record of a recent journey and wants to use this to compute $c$. The journey consisted of $n$ segments. In the $i^{\\text {th}}$ segment she traveled a distance of $d_ i$ and the speedometer read $s_ i$ for the entire segment. This whole journey took time $t$. Help Sheila by computing $c$.\n\nNote that while Sheila\u2019s speedometer might have negative readings, her true speed was greater than zero for each segment of the journey.\n\n-----Input-----\nThe first line of input contains two integers $n$ ($1 \\le n \\le 1000$), the number of sections in Sheila\u2019s journey, and $t$ ($1 \\le t \\le 10^6$), the total time. This is followed by $n$ lines, each describing one segment of Sheila\u2019s journey. The $i^{\\text {th}}$ of these lines contains two integers $d_ i$ ($1 \\le d_ i \\le 1000$) and $s_ i$ ($|s_ i| \\le 1000$), the distance and speedometer reading for the $i^{\\text {th}}$ segment of the journey. Time is specified in hours, distance in miles, and speed in miles per hour.\n\n-----Output-----\nDisplay the constant $c$ in miles per hour. Your answer should have an absolute or relative error of less than $10^{-6}$.\n\n-----Examples-----\nSample Input:\n3 5\n4 -1\n4 0\n10 3\nSample Output:\n3.000000000"
}
